<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SteamBot.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SteamBotDelegates">
            <summary>Contains custom delegates used for the stubs and shims of SteamBot</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOption">
            <summary>Shim type of NDesk.Options.Option</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOption.#ctor(NDesk.Options.Option)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AddSeparatorsStringInt32ICollectionOfString">
            <summary>Sets the shim of Option.AddSeparators(String name, Int32 end, ICollection`1&lt;String&gt; seps)</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOption.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.DescriptionGet">
            <summary>Sets the shim of Option.get_Description()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.GetNames">
            <summary>Sets the shim of Option.GetNames()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.GetValueSeparators">
            <summary>Sets the shim of Option.GetValueSeparators()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.InvokeOptionContext">
            <summary>Sets the shim of Option.Invoke(OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.MaxValueCountGet">
            <summary>Sets the shim of Option.get_MaxValueCount()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.NamesGet">
            <summary>Sets the shim of Option.get_Names()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.OptionValueTypeGet">
            <summary>Sets the shim of Option.get_OptionValueType()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.ParsePrototype">
            <summary>Sets the shim of Option.ParsePrototype()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.PrototypeGet">
            <summary>Sets the shim of Option.get_Prototype()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.ToString01">
            <summary>Sets the shim of Option.ToString()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.AllInstances.ValueSeparatorsGet">
            <summary>Sets the shim of Option.get_ValueSeparators()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOption.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOption.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.ConstructorStringString">
            <summary>Sets the shim of Option.Option(String prototype, String description)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.ConstructorStringStringInt32">
            <summary>Sets the shim of Option.Option(String prototype, String description, Int32 maxValueCount)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.DescriptionGet">
            <summary>Sets the shim of Option.get_Description()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.GetNames">
            <summary>Sets the shim of Option.GetNames()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.GetValueSeparators">
            <summary>Sets the shim of Option.GetValueSeparators()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.InvokeOptionContext">
            <summary>Sets the shim of Option.Invoke(OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.MaxValueCountGet">
            <summary>Sets the shim of Option.get_MaxValueCount()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.NamesGet">
            <summary>Sets the shim of Option.get_Names()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.OptionValueTypeGet">
            <summary>Sets the shim of Option.get_OptionValueType()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOption.ParseOf1StringOptionContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,NDesk.Options.OptionContext,``0})">
            <summary>Sets the shim of Option.Parse(String value, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.ParsePrototype">
            <summary>Sets the shim of Option.ParsePrototype()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.PrototypeGet">
            <summary>Sets the shim of Option.get_Prototype()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.StaticConstructor">
            <summary>Sets the shim of Option.Option()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.ToString">
            <summary>Sets the shim of Option.ToString()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOption.ValueSeparatorsGet">
            <summary>Sets the shim of Option.get_ValueSeparators()</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionContext">
            <summary>Shim type of NDesk.Options.OptionContext</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionContext.#ctor(NDesk.Options.OptionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionGet">
            <summary>Sets the shim of OptionContext.get_Option()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionIndexGet">
            <summary>Sets the shim of OptionContext.get_OptionIndex()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionIndexSetInt32">
            <summary>Sets the shim of OptionContext.set_OptionIndex(Int32 value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionNameGet">
            <summary>Sets the shim of OptionContext.get_OptionName()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionNameSetString">
            <summary>Sets the shim of OptionContext.set_OptionName(String value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionSetGet">
            <summary>Sets the shim of OptionContext.get_OptionSet()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionSetOption">
            <summary>Sets the shim of OptionContext.set_Option(Option value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.AllInstances.OptionValuesGet">
            <summary>Sets the shim of OptionContext.get_OptionValues()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.ConstructorOptionSet">
            <summary>Sets the shim of OptionContext.OptionContext(OptionSet set)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionGet">
            <summary>Sets the shim of OptionContext.get_Option()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionIndexGet">
            <summary>Sets the shim of OptionContext.get_OptionIndex()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionIndexSetInt32">
            <summary>Sets the shim of OptionContext.set_OptionIndex(Int32 value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionNameGet">
            <summary>Sets the shim of OptionContext.get_OptionName()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionNameSetString">
            <summary>Sets the shim of OptionContext.set_OptionName(String value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionSetGet">
            <summary>Sets the shim of OptionContext.get_OptionSet()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionSetOption">
            <summary>Sets the shim of OptionContext.set_Option(Option value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionContext.OptionValuesGet">
            <summary>Sets the shim of OptionContext.get_OptionValues()</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionException">
            <summary>Shim type of NDesk.Options.OptionException</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionException.#ctor(NDesk.Options.OptionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of OptionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.AllInstances.OptionNameGet">
            <summary>Sets the shim of OptionException.get_OptionName()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.Constructor">
            <summary>Sets the shim of OptionException.OptionException()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of OptionException.OptionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.ConstructorStringString">
            <summary>Sets the shim of OptionException.OptionException(String message, String optionName)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.ConstructorStringStringException">
            <summary>Sets the shim of OptionException.OptionException(String message, String optionName, Exception innerException)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of OptionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionException.OptionNameGet">
            <summary>Sets the shim of OptionException.get_OptionName()</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionSet">
            <summary>Shim type of NDesk.Options.OptionSet</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.#ctor(NDesk.Options.OptionSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AddImplOption">
            <summary>Sets the shim of OptionSet.AddImpl(Option option)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AddOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Action{``0},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AddOf1StringStringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Action{``0},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AddOf2StringOptionActionOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,NDesk.Options.OptionAction{``0,``1},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, OptionAction`2&lt;!!0,!!1&gt; action)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AddOf2StringStringOptionActionOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,NDesk.Options.OptionAction{``0,``1},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, OptionAction`2&lt;!!0,!!1&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AddOption">
            <summary>Sets the shim of OptionSet.Add(Option option)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AddStringActionOfString">
            <summary>Sets the shim of OptionSet.Add(String prototype, Action`1&lt;String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AddStringOptionActionOfStringString">
            <summary>Sets the shim of OptionSet.Add(String prototype, OptionAction`2&lt;String,String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AddStringStringActionOfString">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, Action`1&lt;String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AddStringStringOptionActionOfStringString">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, OptionAction`2&lt;String,String&gt; action)</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddImplOption">
            <summary>Sets the shim of OptionSet.AddImpl(Option option)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NDesk.Options.OptionSet,System.String,System.Action{``0},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddOf1StringStringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NDesk.Options.OptionSet,System.String,System.String,System.Action{``0},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddOf2StringOptionActionOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NDesk.Options.OptionSet,System.String,NDesk.Options.OptionAction{``0,``1},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, OptionAction`2&lt;!!0,!!1&gt; action)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddOf2StringStringOptionActionOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NDesk.Options.OptionSet,System.String,System.String,NDesk.Options.OptionAction{``0,``1},NDesk.Options.OptionSet})">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, OptionAction`2&lt;!!0,!!1&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddOption">
            <summary>Sets the shim of OptionSet.Add(Option option)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddStringActionOfString">
            <summary>Sets the shim of OptionSet.Add(String prototype, Action`1&lt;String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddStringOptionActionOfStringString">
            <summary>Sets the shim of OptionSet.Add(String prototype, OptionAction`2&lt;String,String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddStringStringActionOfString">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, Action`1&lt;String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.AddStringStringOptionActionOfStringString">
            <summary>Sets the shim of OptionSet.Add(String prototype, String description, OptionAction`2&lt;String,String&gt; action)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.CreateOptionContext">
            <summary>Sets the shim of OptionSet.CreateOptionContext()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.GetKeyForItemOption">
            <summary>Sets the shim of OptionSet.GetKeyForItem(Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.GetOptionForNameString">
            <summary>Sets the shim of OptionSet.GetOptionForName(String option)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.GetOptionPartsStringStringOutStringOutStringOutStringOut">
            <summary>Sets the shim of OptionSet.GetOptionParts(String argument, String&amp; flag, String&amp; name, String&amp; sep, String&amp; value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.InsertItemInt32Option">
            <summary>Sets the shim of OptionSet.InsertItem(Int32 index, Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.MessageLocalizerGet">
            <summary>Sets the shim of OptionSet.get_MessageLocalizer()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.ParseBoolStringStringOptionContext">
            <summary>Sets the shim of OptionSet.ParseBool(String option, String n, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.ParseBundledValueStringStringOptionContext">
            <summary>Sets the shim of OptionSet.ParseBundledValue(String f, String n, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.ParseIEnumerableOfString">
            <summary>Sets the shim of OptionSet.Parse(IEnumerable`1&lt;String&gt; arguments)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.ParseStringOptionContext">
            <summary>Sets the shim of OptionSet.Parse(String argument, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.ParseValueStringOptionContext">
            <summary>Sets the shim of OptionSet.ParseValue(String option, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.RemoveItemInt32">
            <summary>Sets the shim of OptionSet.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.SetItemInt32Option">
            <summary>Sets the shim of OptionSet.SetItem(Int32 index, Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.WriteOptionDescriptionsTextWriter">
            <summary>Sets the shim of OptionSet.WriteOptionDescriptions(TextWriter o)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.AllInstances.WriteOptionPrototypeTextWriterOptionInt32Ref">
            <summary>Sets the shim of OptionSet.WriteOptionPrototype(TextWriter o, Option p, Int32&amp; written)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.Generic.ICollection{NDesk.Options.Option})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.Generic.IEnumerable{NDesk.Options.Option})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.Generic.IList{NDesk.Options.Option})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.Generic.IReadOnlyCollection{NDesk.Options.Option})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionSet.Bind(System.Collections.Generic.IReadOnlyList{NDesk.Options.Option})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.Constructor">
            <summary>Sets the shim of OptionSet.OptionSet()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.ConstructorConverterOfStringString">
            <summary>Sets the shim of OptionSet.OptionSet(Converter`2&lt;String,String&gt; localizer)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.CreateOptionContext">
            <summary>Sets the shim of OptionSet.CreateOptionContext()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetArgumentNameInt32Int32String">
            <summary>Sets the shim of OptionSet.GetArgumentName(Int32 index, Int32 maxIndex, String description)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetDescriptionString">
            <summary>Sets the shim of OptionSet.GetDescription(String description)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetKeyForItemOption">
            <summary>Sets the shim of OptionSet.GetKeyForItem(Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetLineEndInt32Int32String">
            <summary>Sets the shim of OptionSet.GetLineEnd(Int32 start, Int32 length, String description)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetLinesString">
            <summary>Sets the shim of OptionSet.GetLines(String description)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetNextOptionIndexStringArrayInt32">
            <summary>Sets the shim of OptionSet.GetNextOptionIndex(String[] names, Int32 i)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.GetOptionForNameString">
            <summary>Sets the shim of OptionSet.GetOptionForName(String option)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.InsertItemInt32Option">
            <summary>Sets the shim of OptionSet.InsertItem(Int32 index, Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.InvokeOptionContextStringStringOption">
            <summary>Sets the shim of OptionSet.Invoke(OptionContext c, String name, String value, Option option)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.MessageLocalizerGet">
            <summary>Sets the shim of OptionSet.get_MessageLocalizer()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.ParseBoolStringStringOptionContext">
            <summary>Sets the shim of OptionSet.ParseBool(String option, String n, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.ParseBundledValueStringStringOptionContext">
            <summary>Sets the shim of OptionSet.ParseBundledValue(String f, String n, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.ParseIEnumerableOfString">
            <summary>Sets the shim of OptionSet.Parse(IEnumerable`1&lt;String&gt; arguments)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.ParseStringOptionContext">
            <summary>Sets the shim of OptionSet.Parse(String argument, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.ParseValueStringOptionContext">
            <summary>Sets the shim of OptionSet.ParseValue(String option, OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.RemoveItemInt32">
            <summary>Sets the shim of OptionSet.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.SetItemInt32Option">
            <summary>Sets the shim of OptionSet.SetItem(Int32 index, Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.UnprocessedICollectionOfStringOptionOptionContextString">
            <summary>Sets the shim of OptionSet.Unprocessed(ICollection`1&lt;String&gt; extra, Option def, OptionContext c, String argument)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.WriteOptionDescriptionsTextWriter">
            <summary>Sets the shim of OptionSet.WriteOptionDescriptions(TextWriter o)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.WriteOptionPrototypeTextWriterOptionInt32Ref">
            <summary>Sets the shim of OptionSet.WriteOptionPrototype(TextWriter o, Option p, Int32&amp; written)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionSet.WriteTextWriterInt32RefString">
            <summary>Sets the shim of OptionSet.Write(TextWriter o, Int32&amp; n, String s)</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionValueCollection">
            <summary>Shim type of NDesk.Options.OptionValueCollection</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.#ctor(NDesk.Options.OptionValueCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AddString">
            <summary>Sets the shim of OptionValueCollection.Add(String item)</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.AddString">
            <summary>Sets the shim of OptionValueCollection.Add(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.AssertValidInt32">
            <summary>Sets the shim of OptionValueCollection.AssertValid(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.Clear">
            <summary>Sets the shim of OptionValueCollection.Clear()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ContainsString">
            <summary>Sets the shim of OptionValueCollection.Contains(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.CopyToStringArrayInt32">
            <summary>Sets the shim of OptionValueCollection.CopyTo(String[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.CountGet">
            <summary>Sets the shim of OptionValueCollection.get_Count()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of OptionValueCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of OptionValueCollection.IndexOf(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.InsertInt32String">
            <summary>Sets the shim of OptionValueCollection.Insert(Int32 index, String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of OptionValueCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of OptionValueCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of OptionValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ItemSetInt32String">
            <summary>Sets the shim of OptionValueCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of OptionValueCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.RemoveString">
            <summary>Sets the shim of OptionValueCollection.Remove(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of OptionValueCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of OptionValueCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ToArray">
            <summary>Sets the shim of OptionValueCollection.ToArray()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ToList">
            <summary>Sets the shim of OptionValueCollection.ToList()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AllInstances.ToString01">
            <summary>Sets the shim of OptionValueCollection.ToString()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.AssertValidInt32">
            <summary>Sets the shim of OptionValueCollection.AssertValid(Int32 index)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.ShimOptionValueCollection.Bind(System.Collections.Generic.IList{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.Clear">
            <summary>Sets the shim of OptionValueCollection.Clear()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ConstructorOptionContext">
            <summary>Sets the shim of OptionValueCollection.OptionValueCollection(OptionContext c)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ContainsString">
            <summary>Sets the shim of OptionValueCollection.Contains(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.CopyToStringArrayInt32">
            <summary>Sets the shim of OptionValueCollection.CopyTo(String[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.CountGet">
            <summary>Sets the shim of OptionValueCollection.get_Count()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.GetEnumerator">
            <summary>Sets the shim of OptionValueCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.IndexOfString">
            <summary>Sets the shim of OptionValueCollection.IndexOf(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.InsertInt32String">
            <summary>Sets the shim of OptionValueCollection.Insert(Int32 index, String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.IsReadOnlyGet">
            <summary>Sets the shim of OptionValueCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of OptionValueCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ItemGetInt32">
            <summary>Sets the shim of OptionValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ItemSetInt32String">
            <summary>Sets the shim of OptionValueCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.RemoveAtInt32">
            <summary>Sets the shim of OptionValueCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.RemoveString">
            <summary>Sets the shim of OptionValueCollection.Remove(String item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of OptionValueCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of OptionValueCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIListAddObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of OptionValueCollection.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ToArray">
            <summary>Sets the shim of OptionValueCollection.ToArray()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ToList">
            <summary>Sets the shim of OptionValueCollection.ToList()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.ShimOptionValueCollection.ToString">
            <summary>Sets the shim of OptionValueCollection.ToString()</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.StubOption">
            <summary>Stub type of NDesk.Options.Option</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOption.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOption.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOption.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOption.InitializeStub">
            <summary>Initializes a new instance of type StubOption</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOption.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOption.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOption.OnParseComplete(NDesk.Options.OptionContext)">
            <summary>Sets the stub of Option.OnParseComplete(OptionContext c)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOption.OnParseCompleteOptionContext">
            <summary>Sets the stub of Option.OnParseComplete(OptionContext c)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOption.ToString">
            <summary>Sets the stub of Option.ToString()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOption.ToString01">
            <summary>Sets the stub of Option.ToString()</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.StubOptionContext">
            <summary>Stub type of NDesk.Options.OptionContext</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionContext.#ctor(NDesk.Options.OptionSet)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionContext.InitializeStub">
            <summary>Initializes a new instance of type StubOptionContext</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.StubOptionException">
            <summary>Stub type of NDesk.Options.OptionException</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubOptionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubOptionException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of OptionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of OptionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.InitializeStub">
            <summary>Initializes a new instance of type StubOptionException</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:NDesk.Options.Fakes.StubOptionSet">
            <summary>Stub type of NDesk.Options.OptionSet</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.#ctor(System.Converter{System.String,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.ClearItems">
            <summary>Sets the stub of KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.ClearItems01">
            <summary>Sets the stub of KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.CreateOptionContext">
            <summary>Sets the stub of OptionSet.CreateOptionContext()</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.CreateOptionContext01">
            <summary>Sets the stub of OptionSet.CreateOptionContext()</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.GetKeyForItem(NDesk.Options.Option)">
            <summary>Sets the stub of OptionSet.GetKeyForItem(Option item)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.GetKeyForItemOption">
            <summary>Sets the stub of OptionSet.GetKeyForItem(Option item)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.InitializeStub">
            <summary>Initializes a new instance of type StubOptionSet</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.InsertItem(System.Int32,NDesk.Options.Option)">
            <summary>Sets the stub of OptionSet.InsertItem(Int32 index, Option item)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.InsertItemInt32Option">
            <summary>Sets the stub of OptionSet.InsertItem(Int32 index, Option item)</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NDesk.Options.Fakes.StubOptionSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.Parse(System.String,NDesk.Options.OptionContext)">
            <summary>Sets the stub of OptionSet.Parse(String argument, OptionContext c)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.ParseStringOptionContext">
            <summary>Sets the stub of OptionSet.Parse(String argument, OptionContext c)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.RemoveItem(System.Int32)">
            <summary>Sets the stub of OptionSet.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.RemoveItemInt32">
            <summary>Sets the stub of OptionSet.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:NDesk.Options.Fakes.StubOptionSet.SetItem(System.Int32,NDesk.Options.Option)">
            <summary>Sets the stub of OptionSet.SetItem(Int32 index, Option item)</summary>
        </member>
        <member name="F:NDesk.Options.Fakes.StubOptionSet.SetItemInt32Option">
            <summary>Sets the stub of OptionSet.SetItem(Int32 index, Option item)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBot">
            <summary>Shim type of SteamBot.Bot</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.#ctor(SteamBot.Bot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AcceptAllMobileTradeConfirmations">
            <summary>Sets the shim of Bot.AcceptAllMobileTradeConfirmations()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AcceptGroupInviteSteamID">
            <summary>Sets the shim of Bot.AcceptGroupInvite(SteamID group)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.AcceptAllMobileTradeConfirmations">
            <summary>Sets the shim of Bot.AcceptAllMobileTradeConfirmations()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.AcceptGroupInviteSteamID">
            <summary>Sets the shim of Bot.AcceptGroupInvite(SteamID group)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.AuthFilesDirectoryNameGet">
            <summary>Sets the shim of Bot.get_AuthFilesDirectoryName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.BackgroundWorkerOnDoWorkObjectDoWorkEventArgs">
            <summary>Sets the shim of Bot.BackgroundWorkerOnDoWork(Object sender, DoWorkEventArgs doWorkEventArgs)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.BackgroundWorkerOnRunWorkerCompletedObjectRunWorkerCompletedEventArgs">
            <summary>Sets the shim of Bot.BackgroundWorkerOnRunWorkerCompleted(Object sender, RunWorkerCompletedEventArgs runWorkerCompletedEventArgs)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CancelTradeOfferPollingThread">
            <summary>Sets the shim of Bot.CancelTradeOfferPollingThread()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CheckCookies">
            <summary>Sets the shim of Bot.CheckCookies()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CloseTrade">
            <summary>Sets the shim of Bot.CloseTrade()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CreateFriendsListIfNecessary">
            <summary>Sets the shim of Bot.CreateFriendsListIfNecessary()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CurrentGameGet">
            <summary>Sets the shim of Bot.get_CurrentGame()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CurrentGameSetInt32">
            <summary>Sets the shim of Bot.set_CurrentGame(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CurrentTradeGet">
            <summary>Sets the shim of Bot.get_CurrentTrade()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.CurrentTradeSetTrade">
            <summary>Sets the shim of Bot.set_CurrentTrade(Trade value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.DeclineGroupInviteSteamID">
            <summary>Sets the shim of Bot.DeclineGroupInvite(SteamID group)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.Dispose">
            <summary>Sets the shim of Bot.Dispose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Bot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.FireOnSteamGuardRequiredSteamGuardRequiredEventArgs">
            <summary>Sets the shim of Bot.FireOnSteamGuardRequired(SteamGuardRequiredEventArgs e)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.FriendsListGet">
            <summary>Sets the shim of Bot.get_FriendsList()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.GetEscrowDurationSteamIDString">
            <summary>Sets the shim of Bot.GetEscrowDuration(SteamID steamId, String token)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.GetEscrowDurationString">
            <summary>Sets the shim of Bot.GetEscrowDuration(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.GetMobileAuthCode">
            <summary>Sets the shim of Bot.GetMobileAuthCode()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.GetUserHandlerSteamID">
            <summary>Sets the shim of Bot.GetUserHandler(SteamID sid)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.HandleBotCommandString">
            <summary>Sets the shim of Bot.HandleBotCommand(String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.HandleInputString">
            <summary>Sets the shim of Bot.HandleInput(String input)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.HandleTradeSessionStartSteamID">
            <summary>Sets the shim of Bot.HandleTradeSessionStart(SteamID other)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.InitializeTradeOfferPolling">
            <summary>Sets the shim of Bot.InitializeTradeOfferPolling()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.InviteUserToGroupSteamIDSteamID">
            <summary>Sets the shim of Bot.InviteUserToGroup(SteamID user, SteamID groupId)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.IsLoggedInGet">
            <summary>Sets the shim of Bot.get_IsLoggedIn()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.IsLoggedInSetBoolean">
            <summary>Sets the shim of Bot.set_IsLoggedIn(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.LinkMobileAuth">
            <summary>Sets the shim of Bot.LinkMobileAuth()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.LogGet">
            <summary>Sets the shim of Bot.get_Log()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.LogSetILog">
            <summary>Sets the shim of Bot.set_Log(ILog value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.NewTradeOfferSteamID">
            <summary>Sets the shim of Bot.NewTradeOffer(SteamID other)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.OnSteamGuardRequiredAddEventHandlerOfSteamGuardRequiredEventArgs">
            <summary>Sets the shim of Bot.add_OnSteamGuardRequired(EventHandler`1&lt;SteamGuardRequiredEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.OnSteamGuardRequiredRemoveEventHandlerOfSteamGuardRequiredEventArgs">
            <summary>Sets the shim of Bot.remove_OnSteamGuardRequired(EventHandler`1&lt;SteamGuardRequiredEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.OnTradeTimeoutObjectEventArgs">
            <summary>Sets the shim of Bot.OnTradeTimeout(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.OnUpdateMachineAuthCallbackSteamUserUpdateMachineAuthCallback">
            <summary>Sets the shim of Bot.OnUpdateMachineAuthCallback(UpdateMachineAuthCallback machineAuth)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.OpenTradeSteamID">
            <summary>Sets the shim of Bot.OpenTrade(SteamID other)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.ParseEscrowResponseString">
            <summary>Sets the shim of Bot.ParseEscrowResponse(String resp)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.PollTradeOffersGet">
            <summary>Sets the shim of Bot.get_PollTradeOffers()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.PollTradeOffersSetBoolean">
            <summary>Sets the shim of Bot.set_PollTradeOffers(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of Bot.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of Bot.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.RaisePropertyChangedString">
            <summary>Sets the shim of Bot.RaisePropertyChanged(String propertyName)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.RemoveUserHandlerSteamID">
            <summary>Sets the shim of Bot.RemoveUserHandler(SteamID sid)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SentryFilesDirectoryNameGet">
            <summary>Sets the shim of Bot.get_SentryFilesDirectoryName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SetGamePlayingInt32">
            <summary>Sets the shim of Bot.SetGamePlaying(Int32 id)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SpawnTradeOfferPollingThread">
            <summary>Sets the shim of Bot.SpawnTradeOfferPollingThread()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.StartBot">
            <summary>Sets the shim of Bot.StartBot()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.StartBotCultureInfo">
            <summary>Sets the shim of Bot.StartBot(CultureInfo culture)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SteamCallbackManagerGet">
            <summary>Sets the shim of Bot.get_SteamCallbackManager()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.StopBot">
            <summary>Sets the shim of Bot.StopBot()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SubscribeSteamCallbacks">
            <summary>Sets the shim of Bot.SubscribeSteamCallbacks()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SubscribeTradeOfferTradeOfferManager">
            <summary>Sets the shim of Bot.SubscribeTradeOffer(TradeOfferManager tradeOfferManager)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.SubscribeTradeTradeUserHandler">
            <summary>Sets the shim of Bot.SubscribeTrade(Trade trade, UserHandler handler)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.TradeOfferPollingFunction">
            <summary>Sets the shim of Bot.TradeOfferPollingFunction()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.TradeOfferRouterTradeOffer">
            <summary>Sets the shim of Bot.TradeOfferRouter(TradeOffer offer)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.TryGetTradeOfferStringTradeOfferOut">
            <summary>Sets the shim of Bot.TryGetTradeOffer(String offerId, TradeOffer&amp; tradeOffer)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.UnsubscribeTradeOfferTradeOfferManager">
            <summary>Sets the shim of Bot.UnsubscribeTradeOffer(TradeOfferManager tradeOfferManager)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.UnsubscribeTradeUserHandlerTrade">
            <summary>Sets the shim of Bot.UnsubscribeTrade(UserHandler handler, Trade trade)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.UserLogOn">
            <summary>Sets the shim of Bot.UserLogOn()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.UserWebLogOn">
            <summary>Sets the shim of Bot.UserWebLogOn()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.WaitForInput">
            <summary>Sets the shim of Bot.WaitForInput()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._LinkMobileAuthb__103_0">
            <summary>Sets the shim of Bot.&lt;LinkMobileAuth&gt;b__103_0()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_0SteamClientConnectedCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_0(ConnectedCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_10SteamTradingTradeResultCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_10(TradeResultCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_11SteamUserLoggedOffCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_11(LoggedOffCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_12SteamClientDisconnectedCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_12(DisconnectedCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_1SteamUserLoggedOnCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_1(LoggedOnCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_2SteamUserLoginKeyCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_2(LoginKeyCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_3SteamUserWebAPIUserNonceCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_3(WebAPIUserNonceCallback webCallback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_4SteamUserUpdateMachineAuthCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_4(UpdateMachineAuthCallback authCallback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_5SteamFriendsFriendsListCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_5(FriendsListCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_6SteamFriendsFriendMsgCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_6(FriendMsgCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_7SteamFriendsChatMsgCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_7(ChatMsgCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_8SteamTradingSessionStartCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_8(SessionStartCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances._SubscribeSteamCallbacksb__100_9SteamTradingTradeProposedCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_9(TradeProposedCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AllInstances.logGet">
            <summary>Sets the shim of Bot.get_log()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.AuthFilesDirectoryNameGet">
            <summary>Sets the shim of Bot.get_AuthFilesDirectoryName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.BackgroundWorkerOnDoWorkObjectDoWorkEventArgs">
            <summary>Sets the shim of Bot.BackgroundWorkerOnDoWork(Object sender, DoWorkEventArgs doWorkEventArgs)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.BackgroundWorkerOnRunWorkerCompletedObjectRunWorkerCompletedEventArgs">
            <summary>Sets the shim of Bot.BackgroundWorkerOnRunWorkerCompleted(Object sender, RunWorkerCompletedEventArgs runWorkerCompletedEventArgs)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CancelTradeOfferPollingThread">
            <summary>Sets the shim of Bot.CancelTradeOfferPollingThread()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CheckCookies">
            <summary>Sets the shim of Bot.CheckCookies()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CloseTrade">
            <summary>Sets the shim of Bot.CloseTrade()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ConstructorConfigurationBotInfoStringBotUserHandlerCreatorBooleanBoolean">
            <summary>Sets the shim of Bot.Bot(BotInfo config, String apiKey, UserHandlerCreator handlerCreator, Boolean debug, Boolean process)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ConstructorConfigurationBotInfoStringStringBotUserHandlerCreatorBooleanBoolean">
            <summary>Sets the shim of Bot.Bot(BotInfo config, String apiKey, String sentryFilesDirectoryName, UserHandlerCreator handlerCreator, Boolean debug, Boolean process)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ConstructorConfigurationBotInfoStringStringStringBotUserHandlerCreatorBooleanBoolean">
            <summary>Sets the shim of Bot.Bot(BotInfo config, String apiKey, String sentryFilesDirectoryName, String authFilesDirectoryName, UserHandlerCreator handlerCreator, Boolean debug, Boolean process)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ConstructorConfigurationBotInfoStringStringStringBotUserHandlerCreatorILogBooleanBoolean">
            <summary>Sets the shim of Bot.Bot(BotInfo config, String apiKey, String sentryFilesDirectoryName, String authFilesDirectoryName, UserHandlerCreator handlerCreator, ILog log, Boolean debug, Boolean process)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CreateFriendsListIfNecessary">
            <summary>Sets the shim of Bot.CreateFriendsListIfNecessary()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CurrentGameGet">
            <summary>Sets the shim of Bot.get_CurrentGame()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CurrentGameSetInt32">
            <summary>Sets the shim of Bot.set_CurrentGame(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CurrentTradeGet">
            <summary>Sets the shim of Bot.get_CurrentTrade()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.CurrentTradeSetTrade">
            <summary>Sets the shim of Bot.set_CurrentTrade(Trade value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.DeclineGroupInviteSteamID">
            <summary>Sets the shim of Bot.DeclineGroupInvite(SteamID group)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.Dispose">
            <summary>Sets the shim of Bot.Dispose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.DisposeBoolean">
            <summary>Sets the shim of Bot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.FireOnSteamGuardRequiredSteamGuardRequiredEventArgs">
            <summary>Sets the shim of Bot.FireOnSteamGuardRequired(SteamGuardRequiredEventArgs e)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.FriendsListGet">
            <summary>Sets the shim of Bot.get_FriendsList()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.GetEscrowDurationSteamIDString">
            <summary>Sets the shim of Bot.GetEscrowDuration(SteamID steamId, String token)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.GetEscrowDurationString">
            <summary>Sets the shim of Bot.GetEscrowDuration(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.GetMobileAuthCode">
            <summary>Sets the shim of Bot.GetMobileAuthCode()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.GetUserHandlerSteamID">
            <summary>Sets the shim of Bot.GetUserHandler(SteamID sid)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.HandleBotCommandString">
            <summary>Sets the shim of Bot.HandleBotCommand(String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.HandleInputString">
            <summary>Sets the shim of Bot.HandleInput(String input)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.HandleTradeSessionStartSteamID">
            <summary>Sets the shim of Bot.HandleTradeSessionStart(SteamID other)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.InitializeTradeOfferPolling">
            <summary>Sets the shim of Bot.InitializeTradeOfferPolling()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.InviteUserToGroupSteamIDSteamID">
            <summary>Sets the shim of Bot.InviteUserToGroup(SteamID user, SteamID groupId)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.IsLoggedInGet">
            <summary>Sets the shim of Bot.get_IsLoggedIn()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.IsLoggedInSetBoolean">
            <summary>Sets the shim of Bot.set_IsLoggedIn(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.LinkMobileAuth">
            <summary>Sets the shim of Bot.LinkMobileAuth()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.LogGet">
            <summary>Sets the shim of Bot.get_Log()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.LogSetILog">
            <summary>Sets the shim of Bot.set_Log(ILog value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.NewTradeOfferSteamID">
            <summary>Sets the shim of Bot.NewTradeOffer(SteamID other)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.OnSteamGuardRequiredAddEventHandlerOfSteamGuardRequiredEventArgs">
            <summary>Sets the shim of Bot.add_OnSteamGuardRequired(EventHandler`1&lt;SteamGuardRequiredEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.OnSteamGuardRequiredRemoveEventHandlerOfSteamGuardRequiredEventArgs">
            <summary>Sets the shim of Bot.remove_OnSteamGuardRequired(EventHandler`1&lt;SteamGuardRequiredEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.OnTradeTimeoutObjectEventArgs">
            <summary>Sets the shim of Bot.OnTradeTimeout(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.OnUpdateMachineAuthCallbackSteamUserUpdateMachineAuthCallback">
            <summary>Sets the shim of Bot.OnUpdateMachineAuthCallback(UpdateMachineAuthCallback machineAuth)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.OpenTradeSteamID">
            <summary>Sets the shim of Bot.OpenTrade(SteamID other)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ParseEscrowResponseString">
            <summary>Sets the shim of Bot.ParseEscrowResponse(String resp)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.PollTradeOffersGet">
            <summary>Sets the shim of Bot.get_PollTradeOffers()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.PollTradeOffersSetBoolean">
            <summary>Sets the shim of Bot.set_PollTradeOffers(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of Bot.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of Bot.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.RaisePropertyChangedString">
            <summary>Sets the shim of Bot.RaisePropertyChanged(String propertyName)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.RemoveUserHandlerSteamID">
            <summary>Sets the shim of Bot.RemoveUserHandler(SteamID sid)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SHAHashByteArray">
            <summary>Sets the shim of Bot.SHAHash(Byte[] input)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SentryFilesDirectoryNameGet">
            <summary>Sets the shim of Bot.get_SentryFilesDirectoryName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SetGamePlayingInt32">
            <summary>Sets the shim of Bot.SetGamePlaying(Int32 id)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration">
            <summary>Shim type of SteamBot.Bot+TradeOfferEscrowDuration</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.#ctor(SteamBot.Bot.TradeOfferEscrowDuration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.AllInstances.DaysMyEscrowGet">
            <summary>Sets the shim of TradeOfferEscrowDuration.get_DaysMyEscrow()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.AllInstances.DaysMyEscrowSetInt32">
            <summary>Sets the shim of TradeOfferEscrowDuration.set_DaysMyEscrow(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.AllInstances.DaysTheirEscrowGet">
            <summary>Sets the shim of TradeOfferEscrowDuration.get_DaysTheirEscrow()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.AllInstances.DaysTheirEscrowSetInt32">
            <summary>Sets the shim of TradeOfferEscrowDuration.set_DaysTheirEscrow(Int32 value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.Constructor">
            <summary>Sets the shim of TradeOfferEscrowDuration.TradeOfferEscrowDuration()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.DaysMyEscrowGet">
            <summary>Sets the shim of TradeOfferEscrowDuration.get_DaysMyEscrow()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.DaysMyEscrowSetInt32">
            <summary>Sets the shim of TradeOfferEscrowDuration.set_DaysMyEscrow(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.DaysTheirEscrowGet">
            <summary>Sets the shim of TradeOfferEscrowDuration.get_DaysTheirEscrow()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDuration.DaysTheirEscrowSetInt32">
            <summary>Sets the shim of TradeOfferEscrowDuration.set_DaysTheirEscrow(Int32 value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException">
            <summary>Shim type of SteamBot.Bot+TradeOfferEscrowDurationParseException</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.#ctor(SteamBot.Bot.TradeOfferEscrowDurationParseException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.Constructor">
            <summary>Sets the shim of TradeOfferEscrowDurationParseException.TradeOfferEscrowDurationParseException()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.ShimTradeOfferEscrowDurationParseException.ConstructorString">
            <summary>Sets the shim of TradeOfferEscrowDurationParseException.TradeOfferEscrowDurationParseException(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SpawnTradeOfferPollingThread">
            <summary>Sets the shim of Bot.SpawnTradeOfferPollingThread()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.StartBot">
            <summary>Sets the shim of Bot.StartBot()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.StartBotCultureInfo">
            <summary>Sets the shim of Bot.StartBot(CultureInfo culture)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SteamCallbackManagerGet">
            <summary>Sets the shim of Bot.get_SteamCallbackManager()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.StopBot">
            <summary>Sets the shim of Bot.StopBot()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SubscribeSteamCallbacks">
            <summary>Sets the shim of Bot.SubscribeSteamCallbacks()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SubscribeTradeOfferTradeOfferManager">
            <summary>Sets the shim of Bot.SubscribeTradeOffer(TradeOfferManager tradeOfferManager)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.SubscribeTradeTradeUserHandler">
            <summary>Sets the shim of Bot.SubscribeTrade(Trade trade, UserHandler handler)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.TradeOfferPollingFunction">
            <summary>Sets the shim of Bot.TradeOfferPollingFunction()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.TradeOfferRouterTradeOffer">
            <summary>Sets the shim of Bot.TradeOfferRouter(TradeOffer offer)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.TryGetTradeOfferStringTradeOfferOut">
            <summary>Sets the shim of Bot.TryGetTradeOffer(String offerId, TradeOffer&amp; tradeOffer)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.UnsubscribeTradeOfferTradeOfferManager">
            <summary>Sets the shim of Bot.UnsubscribeTradeOffer(TradeOfferManager tradeOfferManager)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.UnsubscribeTradeUserHandlerTrade">
            <summary>Sets the shim of Bot.UnsubscribeTrade(UserHandler handler, Trade trade)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.UserLogOn">
            <summary>Sets the shim of Bot.UserLogOn()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.UserWebLogOn">
            <summary>Sets the shim of Bot.UserWebLogOn()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.WaitForInput">
            <summary>Sets the shim of Bot.WaitForInput()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._LinkMobileAuthb__103_0">
            <summary>Sets the shim of Bot.&lt;LinkMobileAuth&gt;b__103_0()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_0SteamClientConnectedCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_0(ConnectedCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_10SteamTradingTradeResultCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_10(TradeResultCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_11SteamUserLoggedOffCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_11(LoggedOffCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_12SteamClientDisconnectedCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_12(DisconnectedCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_1SteamUserLoggedOnCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_1(LoggedOnCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_2SteamUserLoginKeyCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_2(LoginKeyCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_3SteamUserWebAPIUserNonceCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_3(WebAPIUserNonceCallback webCallback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_4SteamUserUpdateMachineAuthCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_4(UpdateMachineAuthCallback authCallback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_5SteamFriendsFriendsListCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_5(FriendsListCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_6SteamFriendsFriendMsgCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_6(FriendMsgCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_7SteamFriendsChatMsgCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_7(ChatMsgCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_8SteamTradingSessionStartCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_8(SessionStartCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot._SubscribeSteamCallbacksb__100_9SteamTradingTradeProposedCallback">
            <summary>Sets the shim of Bot.&lt;SubscribeSteamCallbacks&gt;b__100_9(TradeProposedCallback callback)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBot.logGet">
            <summary>Sets the shim of Bot.get_log()</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotFile">
            <summary>Shim type of SteamBot.BotFile</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotFile.#ctor(SteamBot.BotFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AdminsGet">
            <summary>Sets the shim of BotFile.get_Admins()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AdminsSetUInt64Array">
            <summary>Sets the shim of BotFile.set_Admins(UInt64[] value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AllInstances.AdminsGet">
            <summary>Sets the shim of BotFile.get_Admins()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AllInstances.AdminsSetUInt64Array">
            <summary>Sets the shim of BotFile.set_Admins(UInt64[] value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AllInstances.ApiKeyGet">
            <summary>Sets the shim of BotFile.get_ApiKey()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AllInstances.ApiKeySetString">
            <summary>Sets the shim of BotFile.set_ApiKey(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AllInstances.BotsGet">
            <summary>Sets the shim of BotFile.get_Bots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.AllInstances.BotsSetBotInfoArray">
            <summary>Sets the shim of BotFile.set_Bots(BotInfo[] value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.ApiKeyGet">
            <summary>Sets the shim of BotFile.get_ApiKey()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.ApiKeySetString">
            <summary>Sets the shim of BotFile.set_ApiKey(String value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.BotsGet">
            <summary>Sets the shim of BotFile.get_Bots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.BotsSetBotInfoArray">
            <summary>Sets the shim of BotFile.set_Bots(BotInfo[] value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotFile.Constructor">
            <summary>Sets the shim of BotFile.BotFile()</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotInfo">
            <summary>Shim type of SteamBot.BotInfo</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotInfo.#ctor(SteamBot.BotInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.ChatResponseGet">
            <summary>Sets the shim of BotInfo.get_ChatResponse()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.ChatResponseSetString">
            <summary>Sets the shim of BotInfo.set_ChatResponse(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.DisplayNameGet">
            <summary>Sets the shim of BotInfo.get_DisplayName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of BotInfo.set_DisplayName(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.PasswordGet">
            <summary>Sets the shim of BotInfo.get_Password()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.PasswordSetString">
            <summary>Sets the shim of BotInfo.set_Password(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.UsernameGet">
            <summary>Sets the shim of BotInfo.get_Username()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.AllInstances.UsernameSetString">
            <summary>Sets the shim of BotInfo.set_Username(String value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.ChatResponseGet">
            <summary>Sets the shim of BotInfo.get_ChatResponse()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.ChatResponseSetString">
            <summary>Sets the shim of BotInfo.set_ChatResponse(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.Constructor">
            <summary>Sets the shim of BotInfo.BotInfo()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.DisplayNameGet">
            <summary>Sets the shim of BotInfo.get_DisplayName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.DisplayNameSetString">
            <summary>Sets the shim of BotInfo.set_DisplayName(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.PasswordGet">
            <summary>Sets the shim of BotInfo.get_Password()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.PasswordSetString">
            <summary>Sets the shim of BotInfo.set_Password(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.UsernameGet">
            <summary>Sets the shim of BotInfo.get_Username()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotInfo.UsernameSetString">
            <summary>Sets the shim of BotInfo.set_Username(String value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotManager">
            <summary>Shim type of SteamBot.BotManager</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManager.#ctor(SteamBot.BotManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.AuthBotInt32String">
            <summary>Sets the shim of BotManager.AuthBot(Int32 index, String AuthCode)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.ConfigObjectGet">
            <summary>Sets the shim of BotManager.get_ConfigObject()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.ConfigObjectSetConfiguration">
            <summary>Sets the shim of BotManager.set_ConfigObject(Configuration value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.Dispose">
            <summary>Sets the shim of BotManager.Dispose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BotManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.LoadConfigurationString">
            <summary>Sets the shim of BotManager.LoadConfiguration(String configFile)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.SendCommandInt32String">
            <summary>Sets the shim of BotManager.SendCommand(Int32 index, String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.SendInputInt32String">
            <summary>Sets the shim of BotManager.SendInput(Int32 index, String input)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.StartBotInt32">
            <summary>Sets the shim of BotManager.StartBot(Int32 index)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.StartBotString">
            <summary>Sets the shim of BotManager.StartBot(String botUserName)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.StartBots">
            <summary>Sets the shim of BotManager.StartBots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.StopBotInt32">
            <summary>Sets the shim of BotManager.StopBot(Int32 index)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.StopBotString">
            <summary>Sets the shim of BotManager.StopBot(String botUserName)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AllInstances.StopBots">
            <summary>Sets the shim of BotManager.StopBots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.AuthBotInt32String">
            <summary>Sets the shim of BotManager.AuthBot(Int32 index, String AuthCode)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManager.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.ConfigObjectGet">
            <summary>Sets the shim of BotManager.get_ConfigObject()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.ConfigObjectSetConfiguration">
            <summary>Sets the shim of BotManager.set_ConfigObject(Configuration value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.Constructor">
            <summary>Sets the shim of BotManager.BotManager()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.Dispose">
            <summary>Sets the shim of BotManager.Dispose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.DisposeBoolean">
            <summary>Sets the shim of BotManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.LoadConfigurationString">
            <summary>Sets the shim of BotManager.LoadConfiguration(String configFile)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.SendCommandInt32String">
            <summary>Sets the shim of BotManager.SendCommand(Int32 index, String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.SendInputInt32String">
            <summary>Sets the shim of BotManager.SendInput(Int32 index, String input)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.StartBotInt32">
            <summary>Sets the shim of BotManager.StartBot(Int32 index)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.StartBotString">
            <summary>Sets the shim of BotManager.StartBot(String botUserName)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.StartBots">
            <summary>Sets the shim of BotManager.StartBots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.StopBotInt32">
            <summary>Sets the shim of BotManager.StopBot(Int32 index)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.StopBotString">
            <summary>Sets the shim of BotManager.StopBot(String botUserName)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.StopBots">
            <summary>Sets the shim of BotManager.StopBots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManager.UserHandlerCreatorBotSteamID">
            <summary>Sets the shim of BotManager.UserHandlerCreator(Bot bot, SteamID sid)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotManagerInterpreter">
            <summary>Shim type of SteamBot.BotManagerInterpreter</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManagerInterpreter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManagerInterpreter.#ctor(SteamBot.BotManagerInterpreter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances.AuthSetString">
            <summary>Sets the shim of BotManagerInterpreter.AuthSet(String auth)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances.CommandInterpreterString">
            <summary>Sets the shim of BotManagerInterpreter.CommandInterpreter(String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances.ExecCommandString">
            <summary>Sets the shim of BotManagerInterpreter.ExecCommand(String cmd)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances.InputCommandString">
            <summary>Sets the shim of BotManagerInterpreter.InputCommand(String inpt)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances.ShowCommandString">
            <summary>Sets the shim of BotManagerInterpreter.ShowCommand(String param)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances._ctorb__6_0String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_0(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances._ctorb__6_1String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_1(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances._ctorb__6_2String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_2(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances._ctorb__6_3String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_3(String param)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AllInstances._ctorb__6_4String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_4(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.AuthSetString">
            <summary>Sets the shim of BotManagerInterpreter.AuthSet(String auth)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManagerInterpreter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimBotManagerInterpreter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.CommandInterpreterString">
            <summary>Sets the shim of BotManagerInterpreter.CommandInterpreter(String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.ConstructorBotManager">
            <summary>Sets the shim of BotManagerInterpreter.BotManagerInterpreter(BotManager manager)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.ExecCommandString">
            <summary>Sets the shim of BotManagerInterpreter.ExecCommand(String cmd)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.InputCommandString">
            <summary>Sets the shim of BotManagerInterpreter.InputCommand(String inpt)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter.ShowCommandString">
            <summary>Sets the shim of BotManagerInterpreter.ShowCommand(String param)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter._ctorb__6_0String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_0(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter._ctorb__6_1String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_1(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter._ctorb__6_2String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_2(String s)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter._ctorb__6_3String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_3(String param)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimBotManagerInterpreter._ctorb__6_4String">
            <summary>Sets the shim of BotManagerInterpreter.&lt;.ctor&gt;b__6_4(String s)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimConfiguration">
            <summary>Shim type of SteamBot.Configuration</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.#ctor(SteamBot.Configuration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AdminsGet">
            <summary>Sets the shim of Configuration.get_Admins()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AdminsSetIEnumerableOfSteamID">
            <summary>Sets the shim of Configuration.set_Admins(IEnumerable`1&lt;SteamID&gt; value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.AdminsGet">
            <summary>Sets the shim of Configuration.get_Admins()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.AdminsSetIEnumerableOfSteamID">
            <summary>Sets the shim of Configuration.set_Admins(IEnumerable`1&lt;SteamID&gt; value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.ApiKeyGet">
            <summary>Sets the shim of Configuration.get_ApiKey()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.ApiKeySetString">
            <summary>Sets the shim of Configuration.set_ApiKey(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.AutoStartAllBotsGet">
            <summary>Sets the shim of Configuration.get_AutoStartAllBots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.AutoStartAllBotsSetBoolean">
            <summary>Sets the shim of Configuration.set_AutoStartAllBots(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.BotsGet">
            <summary>Sets the shim of Configuration.get_Bots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.BotsSetConfigurationBotInfoArray">
            <summary>Sets the shim of Configuration.set_Bots(BotInfo[] value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.MainLogGet">
            <summary>Sets the shim of Configuration.get_MainLog()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.MainLogSetString">
            <summary>Sets the shim of Configuration.set_MainLog(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.ToString01">
            <summary>Sets the shim of Configuration.ToString()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.UseSeparateProcessesGet">
            <summary>Sets the shim of Configuration.get_UseSeparateProcesses()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AllInstances.UseSeparateProcessesSetBoolean">
            <summary>Sets the shim of Configuration.set_UseSeparateProcesses(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ApiKeyGet">
            <summary>Sets the shim of Configuration.get_ApiKey()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ApiKeySetString">
            <summary>Sets the shim of Configuration.set_ApiKey(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AutoStartAllBotsGet">
            <summary>Sets the shim of Configuration.get_AutoStartAllBots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.AutoStartAllBotsSetBoolean">
            <summary>Sets the shim of Configuration.set_AutoStartAllBots(Boolean value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.BotsGet">
            <summary>Sets the shim of Configuration.get_Bots()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.BotsSetConfigurationBotInfoArray">
            <summary>Sets the shim of Configuration.set_Bots(BotInfo[] value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.Constructor">
            <summary>Sets the shim of Configuration.Configuration()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.LoadConfigurationString">
            <summary>Sets the shim of Configuration.LoadConfiguration(String filename)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.MainLogGet">
            <summary>Sets the shim of Configuration.get_MainLog()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.MainLogSetString">
            <summary>Sets the shim of Configuration.set_MainLog(String value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimConfiguration.ShimBotInfo">
            <summary>Shim type of SteamBot.Configuration+BotInfo</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.#ctor(SteamBot.Configuration.BotInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AdminsGet">
            <summary>Sets the shim of BotInfo.get_Admins()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AdminsSetIEnumerableOfSteamID">
            <summary>Sets the shim of BotInfo.set_Admins(IEnumerable`1&lt;SteamID&gt; value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.AdminsGet">
            <summary>Sets the shim of BotInfo.get_Admins()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.AdminsSetIEnumerableOfSteamID">
            <summary>Sets the shim of BotInfo.set_Admins(IEnumerable`1&lt;SteamID&gt; value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ApiKeyGet">
            <summary>Sets the shim of BotInfo.get_ApiKey()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ApiKeySetString">
            <summary>Sets the shim of BotInfo.set_ApiKey(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.AutoStartGet">
            <summary>Sets the shim of BotInfo.get_AutoStart()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.AutoStartSetBoolean">
            <summary>Sets the shim of BotInfo.set_AutoStart(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.BotControlClassGet">
            <summary>Sets the shim of BotInfo.get_BotControlClass()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.BotControlClassSetString">
            <summary>Sets the shim of BotInfo.set_BotControlClass(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ChatResponseGet">
            <summary>Sets the shim of BotInfo.get_ChatResponse()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ChatResponseSetString">
            <summary>Sets the shim of BotInfo.set_ChatResponse(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ConsoleLogLevelGet">
            <summary>Sets the shim of BotInfo.get_ConsoleLogLevel()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ConsoleLogLevelSetString">
            <summary>Sets the shim of BotInfo.set_ConsoleLogLevel(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.DisplayNameGet">
            <summary>Sets the shim of BotInfo.get_DisplayName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.DisplayNamePrefixGet">
            <summary>Sets the shim of BotInfo.get_DisplayNamePrefix()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.DisplayNamePrefixSetString">
            <summary>Sets the shim of BotInfo.set_DisplayNamePrefix(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of BotInfo.set_DisplayName(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.FileLogLevelGet">
            <summary>Sets the shim of BotInfo.get_FileLogLevel()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.FileLogLevelSetString">
            <summary>Sets the shim of BotInfo.set_FileLogLevel(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.LogFileGet">
            <summary>Sets the shim of BotInfo.get_LogFile()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.LogFileSetString">
            <summary>Sets the shim of BotInfo.set_LogFile(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.LogLevelGet">
            <summary>Sets the shim of BotInfo.get_LogLevel()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.LogLevelSetString">
            <summary>Sets the shim of BotInfo.set_LogLevel(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.MaximumActionGapGet">
            <summary>Sets the shim of BotInfo.get_MaximumActionGap()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.MaximumActionGapSetInt32">
            <summary>Sets the shim of BotInfo.set_MaximumActionGap(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.MaximumTradeTimeGet">
            <summary>Sets the shim of BotInfo.get_MaximumTradeTime()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.MaximumTradeTimeSetInt32">
            <summary>Sets the shim of BotInfo.set_MaximumTradeTime(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.PasswordGet">
            <summary>Sets the shim of BotInfo.get_Password()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.PasswordSetString">
            <summary>Sets the shim of BotInfo.set_Password(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.SchemaLangGet">
            <summary>Sets the shim of BotInfo.get_SchemaLang()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.SchemaLangSetString">
            <summary>Sets the shim of BotInfo.set_SchemaLang(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.ToString01">
            <summary>Sets the shim of BotInfo.ToString()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.TradeOfferPollingIntervalSecsGet">
            <summary>Sets the shim of BotInfo.get_TradeOfferPollingIntervalSecs()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.TradeOfferPollingIntervalSecsSetInt32">
            <summary>Sets the shim of BotInfo.set_TradeOfferPollingIntervalSecs(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.TradePollingIntervalGet">
            <summary>Sets the shim of BotInfo.get_TradePollingInterval()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.TradePollingIntervalSetInt32">
            <summary>Sets the shim of BotInfo.set_TradePollingInterval(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.UsernameGet">
            <summary>Sets the shim of BotInfo.get_Username()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AllInstances.UsernameSetString">
            <summary>Sets the shim of BotInfo.set_Username(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ApiKeyGet">
            <summary>Sets the shim of BotInfo.get_ApiKey()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ApiKeySetString">
            <summary>Sets the shim of BotInfo.set_ApiKey(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AutoStartGet">
            <summary>Sets the shim of BotInfo.get_AutoStart()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.AutoStartSetBoolean">
            <summary>Sets the shim of BotInfo.set_AutoStart(Boolean value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.BotControlClassGet">
            <summary>Sets the shim of BotInfo.get_BotControlClass()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.BotControlClassSetString">
            <summary>Sets the shim of BotInfo.set_BotControlClass(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ChatResponseGet">
            <summary>Sets the shim of BotInfo.get_ChatResponse()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ChatResponseSetString">
            <summary>Sets the shim of BotInfo.set_ChatResponse(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ConsoleLogLevelGet">
            <summary>Sets the shim of BotInfo.get_ConsoleLogLevel()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ConsoleLogLevelSetString">
            <summary>Sets the shim of BotInfo.set_ConsoleLogLevel(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.Constructor">
            <summary>Sets the shim of BotInfo.BotInfo()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.DisplayNameGet">
            <summary>Sets the shim of BotInfo.get_DisplayName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.DisplayNamePrefixGet">
            <summary>Sets the shim of BotInfo.get_DisplayNamePrefix()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.DisplayNamePrefixSetString">
            <summary>Sets the shim of BotInfo.set_DisplayNamePrefix(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.DisplayNameSetString">
            <summary>Sets the shim of BotInfo.set_DisplayName(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.FileLogLevelGet">
            <summary>Sets the shim of BotInfo.get_FileLogLevel()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.FileLogLevelSetString">
            <summary>Sets the shim of BotInfo.set_FileLogLevel(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.LogFileGet">
            <summary>Sets the shim of BotInfo.get_LogFile()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.LogFileSetString">
            <summary>Sets the shim of BotInfo.set_LogFile(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.LogLevelGet">
            <summary>Sets the shim of BotInfo.get_LogLevel()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.LogLevelSetString">
            <summary>Sets the shim of BotInfo.set_LogLevel(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.MaximumActionGapGet">
            <summary>Sets the shim of BotInfo.get_MaximumActionGap()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.MaximumActionGapSetInt32">
            <summary>Sets the shim of BotInfo.set_MaximumActionGap(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.MaximumTradeTimeGet">
            <summary>Sets the shim of BotInfo.get_MaximumTradeTime()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.MaximumTradeTimeSetInt32">
            <summary>Sets the shim of BotInfo.set_MaximumTradeTime(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.PasswordGet">
            <summary>Sets the shim of BotInfo.get_Password()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.PasswordSetString">
            <summary>Sets the shim of BotInfo.set_Password(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.SchemaLangGet">
            <summary>Sets the shim of BotInfo.get_SchemaLang()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.SchemaLangSetString">
            <summary>Sets the shim of BotInfo.set_SchemaLang(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.ToString">
            <summary>Sets the shim of BotInfo.ToString()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.TradeOfferPollingIntervalSecsGet">
            <summary>Sets the shim of BotInfo.get_TradeOfferPollingIntervalSecs()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.TradeOfferPollingIntervalSecsSetInt32">
            <summary>Sets the shim of BotInfo.set_TradeOfferPollingIntervalSecs(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.TradePollingIntervalGet">
            <summary>Sets the shim of BotInfo.get_TradePollingInterval()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.TradePollingIntervalSetInt32">
            <summary>Sets the shim of BotInfo.set_TradePollingInterval(Int32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.UsernameGet">
            <summary>Sets the shim of BotInfo.get_Username()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ShimBotInfo.UsernameSetString">
            <summary>Sets the shim of BotInfo.set_Username(String value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.ToString">
            <summary>Sets the shim of Configuration.ToString()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.UseSeparateProcessesGet">
            <summary>Sets the shim of Configuration.get_UseSeparateProcesses()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimConfiguration.UseSeparateProcessesSetBoolean">
            <summary>Sets the shim of Configuration.set_UseSeparateProcesses(Boolean value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimLog">
            <summary>Shim type of SteamBot.Log</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimLog.#ctor(SteamBot.Log)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimLog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.DebugStringObjectArray">
            <summary>Sets the shim of Log.Debug(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.Dispose">
            <summary>Sets the shim of Log.Dispose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Log.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.ErrorStringObjectArray">
            <summary>Sets the shim of Log.Error(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.GetLogBotName">
            <summary>Sets the shim of Log.GetLogBotName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.InfoStringObjectArray">
            <summary>Sets the shim of Log.Info(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.InterfaceStringObjectArray">
            <summary>Sets the shim of Log.Interface(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.ShowBotNameGet">
            <summary>Sets the shim of Log.get_ShowBotName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.ShowBotNameSetBoolean">
            <summary>Sets the shim of Log.set_ShowBotName(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.SuccessStringObjectArray">
            <summary>Sets the shim of Log.Success(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances.WarnStringObjectArray">
            <summary>Sets the shim of Log.Warn(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances._LogColorLogLogLevel">
            <summary>Sets the shim of Log._LogColor(LogLevel level)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances._LogLevelLogLogLevel">
            <summary>Sets the shim of Log._LogLevel(LogLevel level)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances._OutputLineLogLogLevelStringObjectArray">
            <summary>Sets the shim of Log._OutputLine(LogLevel level, String line, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.AllInstances._OutputLineToConsoleLogLogLevelString">
            <summary>Sets the shim of Log._OutputLineToConsole(LogLevel level, String line)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimLog.Bind(SteamBot.ILog)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimLog.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.ConstructorStringStringLogLogLevelLogLogLevel">
            <summary>Sets the shim of Log.Log(String logFile, String botName, LogLevel consoleLogLevel, LogLevel fileLogLevel)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.DebugStringObjectArray">
            <summary>Sets the shim of Log.Debug(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.Dispose">
            <summary>Sets the shim of Log.Dispose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.DisposeBoolean">
            <summary>Sets the shim of Log.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.ErrorStringObjectArray">
            <summary>Sets the shim of Log.Error(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.GetLogBotName">
            <summary>Sets the shim of Log.GetLogBotName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.InfoStringObjectArray">
            <summary>Sets the shim of Log.Info(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.InterfaceStringObjectArray">
            <summary>Sets the shim of Log.Interface(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.ShowBotNameGet">
            <summary>Sets the shim of Log.get_ShowBotName()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.ShowBotNameSetBoolean">
            <summary>Sets the shim of Log.set_ShowBotName(Boolean value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.SuccessStringObjectArray">
            <summary>Sets the shim of Log.Success(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog.WarnStringObjectArray">
            <summary>Sets the shim of Log.Warn(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog._LogColorLogLogLevel">
            <summary>Sets the shim of Log._LogColor(LogLevel level)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog._LogLevelLogLogLevel">
            <summary>Sets the shim of Log._LogLevel(LogLevel level)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog._OutputLineLogLogLevelStringObjectArray">
            <summary>Sets the shim of Log._OutputLine(LogLevel level, String line, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimLog._OutputLineToConsoleLogLogLevelString">
            <summary>Sets the shim of Log._OutputLineToConsole(LogLevel level, String line)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimProgram">
            <summary>Shim type of SteamBot.Program</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimProgram.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimProgram.#ctor(SteamBot.Program)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimProgram.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimProgram.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimProgram.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.BotManagerMode">
            <summary>Sets the shim of Program.BotManagerMode()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.BotModeInt32">
            <summary>Sets the shim of Program.BotMode(Int32 botIndex)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.ConsoleCtrlCheckProgramCtrlTypes">
            <summary>Sets the shim of Program.ConsoleCtrlCheck(CtrlTypes ctrlType)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.Constructor">
            <summary>Sets the shim of Program.Program()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.MainStringArray">
            <summary>Sets the shim of Program.Main(String[] args)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimProgram.StaticConstructor">
            <summary>Sets the shim of Program.Program()</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs">
            <summary>Shim type of SteamBot.SteamGuardRequiredEventArgs</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.#ctor(SteamBot.SteamGuardRequiredEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.AllInstances.SteamGuardGet">
            <summary>Sets the shim of SteamGuardRequiredEventArgs.get_SteamGuard()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.AllInstances.SteamGuardSetString">
            <summary>Sets the shim of SteamGuardRequiredEventArgs.set_SteamGuard(String value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.Constructor">
            <summary>Sets the shim of SteamGuardRequiredEventArgs.SteamGuardRequiredEventArgs()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.SteamGuardGet">
            <summary>Sets the shim of SteamGuardRequiredEventArgs.get_SteamGuard()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamGuardRequiredEventArgs.SteamGuardSetString">
            <summary>Sets the shim of SteamGuardRequiredEventArgs.set_SteamGuard(String value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications">
            <summary>Shim type of SteamBot.SteamNotifications</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.#ctor(SteamBot.SteamNotifications)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.AllInstances.HandleClientCommentNotificationsIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleClientCommentNotifications(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.AllInstances.HandleClientNewLoginKeyIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleClientNewLoginKey(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.AllInstances.HandleClientUserNotificationsIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleClientUserNotifications(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.AllInstances.HandleMsgIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleMsg(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.AllInstances.RequestCommentNotifications">
            <summary>Sets the shim of SteamNotifications.RequestCommentNotifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.AllInstances.RequestNotifications">
            <summary>Sets the shim of SteamNotifications.RequestNotifications()</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.Constructor">
            <summary>Sets the shim of SteamNotifications.SteamNotifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.HandleClientCommentNotificationsIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleClientCommentNotifications(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.HandleClientNewLoginKeyIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleClientNewLoginKey(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.HandleClientUserNotificationsIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleClientUserNotifications(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.HandleMsgIPacketMsg">
            <summary>Sets the shim of SteamNotifications.HandleMsg(IPacketMsg packetMsg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.RequestCommentNotifications">
            <summary>Sets the shim of SteamNotifications.RequestCommentNotifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.RequestNotifications">
            <summary>Sets the shim of SteamNotifications.RequestNotifications()</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback">
            <summary>Shim type of SteamBot.SteamNotifications+CommentNotificationCallback</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.#ctor(SteamBot.SteamNotifications.CommentNotificationCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.AllInstances.CommentNotificationsGet">
            <summary>Sets the shim of CommentNotificationCallback.get_CommentNotifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.AllInstances.CommentNotificationsSetCommentNotificationCallbackSteamNotificationsCommentNotification">
            <summary>Sets the shim of CommentNotificationCallback.set_CommentNotifications(CommentNotification value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.Bind(SteamKit2.ICallbackMsg)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.CommentNotificationsGet">
            <summary>Sets the shim of CommentNotificationCallback.get_CommentNotifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.CommentNotificationsSetCommentNotificationCallbackSteamNotificationsCommentNotification">
            <summary>Sets the shim of CommentNotificationCallback.set_CommentNotifications(CommentNotification value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ConstructorCMsgClientCommentNotifications">
            <summary>Sets the shim of CommentNotificationCallback.CommentNotificationCallback(CMsgClientCommentNotifications msg)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification">
            <summary>Shim type of SteamBot.SteamNotifications+CommentNotificationCallback+CommentNotification</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.#ctor(SteamBot.SteamNotifications.CommentNotificationCallback.CommentNotification)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances.CountNewCommentsGet">
            <summary>Sets the shim of CommentNotification.get_CountNewComments()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances.CountNewCommentsOwnerGet">
            <summary>Sets the shim of CommentNotification.get_CountNewCommentsOwner()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances.CountNewCommentsOwnerSetUInt32">
            <summary>Sets the shim of CommentNotification.set_CountNewCommentsOwner(UInt32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances.CountNewCommentsSetUInt32">
            <summary>Sets the shim of CommentNotification.set_CountNewComments(UInt32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances.CountNewCommentsSubscriptionsGet">
            <summary>Sets the shim of CommentNotification.get_CountNewCommentsSubscriptions()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.AllInstances.CountNewCommentsSubscriptionsSetUInt32">
            <summary>Sets the shim of CommentNotification.set_CountNewCommentsSubscriptions(UInt32 value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.ConstructorCMsgClientCommentNotifications">
            <summary>Sets the shim of CommentNotification.CommentNotification(CMsgClientCommentNotifications msg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.CountNewCommentsGet">
            <summary>Sets the shim of CommentNotification.get_CountNewComments()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.CountNewCommentsOwnerGet">
            <summary>Sets the shim of CommentNotification.get_CountNewCommentsOwner()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.CountNewCommentsOwnerSetUInt32">
            <summary>Sets the shim of CommentNotification.set_CountNewCommentsOwner(UInt32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.CountNewCommentsSetUInt32">
            <summary>Sets the shim of CommentNotification.set_CountNewComments(UInt32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.CountNewCommentsSubscriptionsGet">
            <summary>Sets the shim of CommentNotification.get_CountNewCommentsSubscriptions()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimCommentNotificationCallback.ShimCommentNotification.CountNewCommentsSubscriptionsSetUInt32">
            <summary>Sets the shim of CommentNotification.set_CountNewCommentsSubscriptions(UInt32 value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback">
            <summary>Shim type of SteamBot.SteamNotifications+NotificationCallback</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.#ctor(SteamBot.SteamNotifications.NotificationCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.AllInstances.NotificationsGet">
            <summary>Sets the shim of NotificationCallback.get_Notifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.AllInstances.NotificationsSetReadOnlyCollectionOfNotificationCallbackSteamNotificationsNotification">
            <summary>Sets the shim of NotificationCallback.set_Notifications(ReadOnlyCollection`1&lt;Notification&gt; value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.Bind(SteamKit2.ICallbackMsg)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ConstructorCMsgClientUserNotifications">
            <summary>Sets the shim of NotificationCallback.NotificationCallback(CMsgClientUserNotifications msg)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.NotificationsGet">
            <summary>Sets the shim of NotificationCallback.get_Notifications()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.NotificationsSetReadOnlyCollectionOfNotificationCallbackSteamNotificationsNotification">
            <summary>Sets the shim of NotificationCallback.set_Notifications(ReadOnlyCollection`1&lt;Notification&gt; value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification">
            <summary>Shim type of SteamBot.SteamNotifications+NotificationCallback+Notification</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.#ctor(SteamBot.SteamNotifications.NotificationCallback.Notification)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.AllInstances.CountGet">
            <summary>Sets the shim of Notification.get_Count()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.AllInstances.CountSetUInt32">
            <summary>Sets the shim of Notification.set_Count(UInt32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.AllInstances.UserNotificationTypeGet">
            <summary>Sets the shim of Notification.get_UserNotificationType()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.AllInstances.UserNotificationTypeSetNotificationCallbackSteamNotificationsUserNotificationType">
            <summary>Sets the shim of Notification.set_UserNotificationType(UserNotificationType value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.ConstructorCMsgClientUserNotificationsNotification">
            <summary>Sets the shim of Notification.Notification(Notification notification)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.CountGet">
            <summary>Sets the shim of Notification.get_Count()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.CountSetUInt32">
            <summary>Sets the shim of Notification.set_Count(UInt32 value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.UserNotificationTypeGet">
            <summary>Sets the shim of Notification.get_UserNotificationType()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimSteamNotifications.ShimNotificationCallback.ShimNotification.UserNotificationTypeSetNotificationCallbackSteamNotificationsUserNotificationType">
            <summary>Sets the shim of Notification.set_UserNotificationType(UserNotificationType value)</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimUserHandler">
            <summary>Shim type of SteamBot.UserHandler</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimUserHandler.#ctor(SteamBot.UserHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.Fakes.ShimUserHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.BotGet">
            <summary>Sets the shim of UserHandler.get_Bot()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.BotSetBot">
            <summary>Sets the shim of UserHandler.set_Bot(Bot value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.GetUserResponseString">
            <summary>Sets the shim of UserHandler.GetUserResponse(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.HandleWaitingOnUserResponseString">
            <summary>Sets the shim of UserHandler.HandleWaitingOnUserResponse(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.IsAdminGet">
            <summary>Sets the shim of UserHandler.get_IsAdmin()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.LogGet">
            <summary>Sets the shim of UserHandler.get_Log()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnBotCommandString">
            <summary>Sets the shim of UserHandler.OnBotCommand(String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnChatRoomMessageSteamIDSteamIDString">
            <summary>Sets the shim of UserHandler.OnChatRoomMessage(SteamID chatID, SteamID sender, String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnMessageHandlerStringEChatEntryType">
            <summary>Sets the shim of UserHandler.OnMessageHandler(String message, EChatEntryType type)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnStatusErrorTradeTradeStatusType">
            <summary>Sets the shim of UserHandler.OnStatusError(TradeStatusType status)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnTradeAcceptHandler">
            <summary>Sets the shim of UserHandler.OnTradeAcceptHandler()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnTradeClose">
            <summary>Sets the shim of UserHandler.OnTradeClose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnTradeMessageHandlerString">
            <summary>Sets the shim of UserHandler.OnTradeMessageHandler(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnTradeReadyHandlerBoolean">
            <summary>Sets the shim of UserHandler.OnTradeReadyHandler(Boolean ready)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OnTradeRequestReplyBooleanString">
            <summary>Sets the shim of UserHandler.OnTradeRequestReply(Boolean accepted, String response)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OtherSIDGet">
            <summary>Sets the shim of UserHandler.get_OtherSID()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.OtherSIDSetSteamID">
            <summary>Sets the shim of UserHandler.set_OtherSID(SteamID value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendChatMessageImplString">
            <summary>Sets the shim of UserHandler.SendChatMessageImpl(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendChatMessageInt32StringObjectArray">
            <summary>Sets the shim of UserHandler.SendChatMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendChatMessageStringObjectArray">
            <summary>Sets the shim of UserHandler.SendChatMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendMessageActionOfStringStringTimerObjectArray">
            <summary>Sets the shim of UserHandler.SendMessage(Action`1&lt;String&gt; messageFunc, String message, Timer timer, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendMessageDelayedInt32ActionOfStringStringObjectArray">
            <summary>Sets the shim of UserHandler.SendMessageDelayed(Int32 delayMs, Action`1&lt;String&gt; messageFunc, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendReplyMessageInt32StringObjectArray">
            <summary>Sets the shim of UserHandler.SendReplyMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendReplyMessageStringObjectArray">
            <summary>Sets the shim of UserHandler.SendReplyMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendTradeMessageImplString">
            <summary>Sets the shim of UserHandler.SendTradeMessageImpl(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendTradeMessageInt32StringObjectArray">
            <summary>Sets the shim of UserHandler.SendTradeMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SendTradeMessageStringObjectArray">
            <summary>Sets the shim of UserHandler.SendTradeMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.SteamWebGet">
            <summary>Sets the shim of UserHandler.get_SteamWeb()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances.TradeGet">
            <summary>Sets the shim of UserHandler.get_Trade()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.AllInstances._OnTradeAwaitingConfirmationInt64">
            <summary>Sets the shim of UserHandler._OnTradeAwaitingConfirmation(Int64 tradeOfferID)</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimUserHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.Fakes.ShimUserHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.BotGet">
            <summary>Sets the shim of UserHandler.get_Bot()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.BotSetBot">
            <summary>Sets the shim of UserHandler.set_Bot(Bot value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.ConstructorBotSteamID">
            <summary>Sets the shim of UserHandler.UserHandler(Bot bot, SteamID sid)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.GetUserResponseString">
            <summary>Sets the shim of UserHandler.GetUserResponse(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.HandleWaitingOnUserResponseString">
            <summary>Sets the shim of UserHandler.HandleWaitingOnUserResponse(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.IsAdminGet">
            <summary>Sets the shim of UserHandler.get_IsAdmin()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.LogGet">
            <summary>Sets the shim of UserHandler.get_Log()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnBotCommandString">
            <summary>Sets the shim of UserHandler.OnBotCommand(String command)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnChatRoomMessageSteamIDSteamIDString">
            <summary>Sets the shim of UserHandler.OnChatRoomMessage(SteamID chatID, SteamID sender, String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnMessageHandlerStringEChatEntryType">
            <summary>Sets the shim of UserHandler.OnMessageHandler(String message, EChatEntryType type)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnStatusErrorTradeTradeStatusType">
            <summary>Sets the shim of UserHandler.OnStatusError(TradeStatusType status)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnTradeAcceptHandler">
            <summary>Sets the shim of UserHandler.OnTradeAcceptHandler()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnTradeClose">
            <summary>Sets the shim of UserHandler.OnTradeClose()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnTradeMessageHandlerString">
            <summary>Sets the shim of UserHandler.OnTradeMessageHandler(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnTradeReadyHandlerBoolean">
            <summary>Sets the shim of UserHandler.OnTradeReadyHandler(Boolean ready)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OnTradeRequestReplyBooleanString">
            <summary>Sets the shim of UserHandler.OnTradeRequestReply(Boolean accepted, String response)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OtherSIDGet">
            <summary>Sets the shim of UserHandler.get_OtherSID()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.OtherSIDSetSteamID">
            <summary>Sets the shim of UserHandler.set_OtherSID(SteamID value)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendChatMessageImplString">
            <summary>Sets the shim of UserHandler.SendChatMessageImpl(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendChatMessageInt32StringObjectArray">
            <summary>Sets the shim of UserHandler.SendChatMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendChatMessageStringObjectArray">
            <summary>Sets the shim of UserHandler.SendChatMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendMessageActionOfStringStringTimerObjectArray">
            <summary>Sets the shim of UserHandler.SendMessage(Action`1&lt;String&gt; messageFunc, String message, Timer timer, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendMessageDelayedInt32ActionOfStringStringObjectArray">
            <summary>Sets the shim of UserHandler.SendMessageDelayed(Int32 delayMs, Action`1&lt;String&gt; messageFunc, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendReplyMessageInt32StringObjectArray">
            <summary>Sets the shim of UserHandler.SendReplyMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendReplyMessageStringObjectArray">
            <summary>Sets the shim of UserHandler.SendReplyMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendTradeMessageImplString">
            <summary>Sets the shim of UserHandler.SendTradeMessageImpl(String message)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendTradeMessageInt32StringObjectArray">
            <summary>Sets the shim of UserHandler.SendTradeMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SendTradeMessageStringObjectArray">
            <summary>Sets the shim of UserHandler.SendTradeMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.SteamWebGet">
            <summary>Sets the shim of UserHandler.get_SteamWeb()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler.TradeGet">
            <summary>Sets the shim of UserHandler.get_Trade()</summary>
        </member>
        <member name="P:SteamBot.Fakes.ShimUserHandler._OnTradeAwaitingConfirmationInt64">
            <summary>Sets the shim of UserHandler._OnTradeAwaitingConfirmation(Int64 tradeOfferID)</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubBot">
            <summary>Stub type of SteamBot.Bot</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.#ctor(SteamBot.Configuration.BotInfo,System.String,SteamBot.Bot.UserHandlerCreator,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.#ctor(SteamBot.Configuration.BotInfo,System.String,System.String,SteamBot.Bot.UserHandlerCreator,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.#ctor(SteamBot.Configuration.BotInfo,System.String,System.String,System.String,SteamBot.Bot.UserHandlerCreator,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.#ctor(SteamBot.Configuration.BotInfo,System.String,System.String,System.String,SteamBot.Bot.UserHandlerCreator,SteamBot.ILog,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.AcceptAllMobileTradeConfirmations">
            <summary>Sets the stub of Bot.AcceptAllMobileTradeConfirmations()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubBot.AcceptAllMobileTradeConfirmations01">
            <summary>Sets the stub of Bot.AcceptAllMobileTradeConfirmations()</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.Dispose(System.Boolean)">
            <summary>Sets the stub of Bot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubBot.DisposeBoolean">
            <summary>Sets the stub of Bot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBot.InitializeStub">
            <summary>Initializes a new instance of type StubBot</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubBotFile">
            <summary>Stub type of SteamBot.BotFile</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotFile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotFile.InitializeStub">
            <summary>Initializes a new instance of type StubBotFile</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubBotInfo">
            <summary>Stub type of SteamBot.BotInfo</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotInfo.InitializeStub">
            <summary>Initializes a new instance of type StubBotInfo</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubBotManager">
            <summary>Stub type of SteamBot.BotManager</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotManager.InitializeStub">
            <summary>Initializes a new instance of type StubBotManager</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubBotManagerInterpreter">
            <summary>Stub type of SteamBot.BotManagerInterpreter</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotManagerInterpreter.#ctor(SteamBot.BotManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotManagerInterpreter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubBotManagerInterpreter.InitializeStub">
            <summary>Initializes a new instance of type StubBotManagerInterpreter</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotManagerInterpreter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubBotManagerInterpreter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubConfiguration">
            <summary>Stub type of SteamBot.Configuration</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubConfiguration</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubConfiguration.ToString">
            <summary>Sets the stub of Configuration.ToString()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubConfiguration.ToString01">
            <summary>Sets the stub of Configuration.ToString()</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubILog">
            <summary>Stub type of SteamBot.ILog</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.#ctor">
            <summary>Initializes a new instance of type StubILog</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.AttachBackingFieldToShowBotName">
            <summary>Attaches delegates to emulate StubILog.ShowBotName as a property with a backing field.</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.DebugStringObjectArray">
            <summary>Sets the stub of ILog.Debug(String data, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.ErrorStringObjectArray">
            <summary>Sets the stub of ILog.Error(String data, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.InfoStringObjectArray">
            <summary>Sets the stub of ILog.Info(String data, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.InterfaceStringObjectArray">
            <summary>Sets the stub of ILog.Interface(String data, Object[] formatParams)</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubILog.SteamBot#ILog#ShowBotName">
            <summary>Sets the stub of ILog.get_ShowBotName()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.ShowBotNameGet">
            <summary>Sets the stub of ILog.get_ShowBotName()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.ShowBotNameSetBoolean">
            <summary>Sets the stub of ILog.set_ShowBotName(Boolean value)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.SteamBot#ILog#Debug(System.String,System.Object[])">
            <summary>Sets the stub of ILog.Debug(String data, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.SteamBot#ILog#Error(System.String,System.Object[])">
            <summary>Sets the stub of ILog.Error(String data, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.SteamBot#ILog#Info(System.String,System.Object[])">
            <summary>Sets the stub of ILog.Info(String data, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.SteamBot#ILog#Interface(System.String,System.Object[])">
            <summary>Sets the stub of ILog.Interface(String data, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.SteamBot#ILog#Success(System.String,System.Object[])">
            <summary>Sets the stub of ILog.Success(String data, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.SteamBot#ILog#Warn(System.String,System.Object[])">
            <summary>Sets the stub of ILog.Warn(String data, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.SuccessStringObjectArray">
            <summary>Sets the stub of ILog.Success(String data, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubILog.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubILog.WarnStringObjectArray">
            <summary>Sets the stub of ILog.Warn(String data, Object[] formatParams)</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubLog">
            <summary>Stub type of SteamBot.Log</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubLog.#ctor(System.String,System.String,SteamBot.Log.LogLevel,SteamBot.Log.LogLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubLog.InitializeStub">
            <summary>Initializes a new instance of type StubLog</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubLog.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubProgram">
            <summary>Stub type of SteamBot.Program</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubProgram.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubProgram.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubProgram.InitializeStub">
            <summary>Initializes a new instance of type StubProgram</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubProgram.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubProgram.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubSteamGuardRequiredEventArgs">
            <summary>Stub type of SteamBot.SteamGuardRequiredEventArgs</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubSteamGuardRequiredEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubSteamGuardRequiredEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubSteamGuardRequiredEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubSteamGuardRequiredEventArgs</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubSteamGuardRequiredEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubSteamGuardRequiredEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubSteamNotifications">
            <summary>Stub type of SteamBot.SteamNotifications</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubSteamNotifications.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubSteamNotifications.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubSteamNotifications.HandleMsg(SteamKit2.IPacketMsg)">
            <summary>Sets the stub of SteamNotifications.HandleMsg(IPacketMsg packetMsg)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubSteamNotifications.HandleMsgIPacketMsg">
            <summary>Sets the stub of SteamNotifications.HandleMsg(IPacketMsg packetMsg)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubSteamNotifications.InitializeStub">
            <summary>Initializes a new instance of type StubSteamNotifications</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubSteamNotifications.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubSteamNotifications.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.Fakes.StubUserHandler">
            <summary>Stub type of SteamBot.UserHandler</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.#ctor(SteamBot.Bot,SteamKit2.SteamID)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubUserHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.GetUserResponse(System.String)">
            <summary>Sets the stub of UserHandler.GetUserResponse(String message)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.GetUserResponseString">
            <summary>Sets the stub of UserHandler.GetUserResponse(String message)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.InitializeStub">
            <summary>Initializes a new instance of type StubUserHandler</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubUserHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.Fakes.StubUserHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnBotCommand(System.String)">
            <summary>Sets the stub of UserHandler.OnBotCommand(String command)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnBotCommandString">
            <summary>Sets the stub of UserHandler.OnBotCommand(String command)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnChatRoomMessage(SteamKit2.SteamID,SteamKit2.SteamID,System.String)">
            <summary>Sets the stub of UserHandler.OnChatRoomMessage(SteamID chatID, SteamID sender, String message)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnChatRoomMessageSteamIDSteamIDString">
            <summary>Sets the stub of UserHandler.OnChatRoomMessage(SteamID chatID, SteamID sender, String message)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnFriendAdd">
            <summary>Sets the stub of UserHandler.OnFriendAdd()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnFriendAdd01">
            <summary>Sets the stub of UserHandler.OnFriendAdd()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnFriendRemove">
            <summary>Sets the stub of UserHandler.OnFriendRemove()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnFriendRemove01">
            <summary>Sets the stub of UserHandler.OnFriendRemove()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnGroupAdd">
            <summary>Sets the stub of UserHandler.OnGroupAdd()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnGroupAdd01">
            <summary>Sets the stub of UserHandler.OnGroupAdd()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnLoginCompleted">
            <summary>Sets the stub of UserHandler.OnLoginCompleted()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnLoginCompleted01">
            <summary>Sets the stub of UserHandler.OnLoginCompleted()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnMessage(System.String,SteamKit2.EChatEntryType)">
            <summary>Sets the stub of UserHandler.OnMessage(String message, EChatEntryType type)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnMessageStringEChatEntryType">
            <summary>Sets the stub of UserHandler.OnMessage(String message, EChatEntryType type)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnStatusError(SteamTrade.Trade.TradeStatusType)">
            <summary>Sets the stub of UserHandler.OnStatusError(TradeStatusType status)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnStatusErrorTradeTradeStatusType">
            <summary>Sets the stub of UserHandler.OnStatusError(TradeStatusType status)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeAccept">
            <summary>Sets the stub of UserHandler.OnTradeAccept()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeAccept01">
            <summary>Sets the stub of UserHandler.OnTradeAccept()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeAwaitingConfirmation(System.Int64)">
            <summary>Sets the stub of UserHandler.OnTradeAwaitingConfirmation(Int64 tradeOfferID)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeAwaitingConfirmationInt64">
            <summary>Sets the stub of UserHandler.OnTradeAwaitingConfirmation(Int64 tradeOfferID)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeClose">
            <summary>Sets the stub of UserHandler.OnTradeClose()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeClose01">
            <summary>Sets the stub of UserHandler.OnTradeClose()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeError(System.String)">
            <summary>Sets the stub of UserHandler.OnTradeError(String error)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeErrorString">
            <summary>Sets the stub of UserHandler.OnTradeError(String error)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeInit">
            <summary>Sets the stub of UserHandler.OnTradeInit()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeInit01">
            <summary>Sets the stub of UserHandler.OnTradeInit()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeMessage(System.String)">
            <summary>Sets the stub of UserHandler.OnTradeMessage(String message)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeMessageString">
            <summary>Sets the stub of UserHandler.OnTradeMessage(String message)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeOfferUpdated(SteamTrade.TradeOffer.TradeOffer)">
            <summary>Sets the stub of UserHandler.OnTradeOfferUpdated(TradeOffer offer)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeOfferUpdatedTradeOffer">
            <summary>Sets the stub of UserHandler.OnTradeOfferUpdated(TradeOffer offer)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeReady(System.Boolean)">
            <summary>Sets the stub of UserHandler.OnTradeReady(Boolean ready)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeReadyBoolean">
            <summary>Sets the stub of UserHandler.OnTradeReady(Boolean ready)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeRequest">
            <summary>Sets the stub of UserHandler.OnTradeRequest()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeRequest01">
            <summary>Sets the stub of UserHandler.OnTradeRequest()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeRequestReply(System.Boolean,System.String)">
            <summary>Sets the stub of UserHandler.OnTradeRequestReply(Boolean accepted, String response)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeRequestReplyBooleanString">
            <summary>Sets the stub of UserHandler.OnTradeRequestReply(Boolean accepted, String response)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.OnTradeTimeout">
            <summary>Sets the stub of UserHandler.OnTradeTimeout()</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.OnTradeTimeout01">
            <summary>Sets the stub of UserHandler.OnTradeTimeout()</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.SendChatMessage(System.String,System.Object[])">
            <summary>Sets the stub of UserHandler.SendChatMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.SendChatMessage(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of UserHandler.SendChatMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.SendChatMessageInt32StringObjectArray">
            <summary>Sets the stub of UserHandler.SendChatMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.SendChatMessageStringObjectArray">
            <summary>Sets the stub of UserHandler.SendChatMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.SendReplyMessage(System.String,System.Object[])">
            <summary>Sets the stub of UserHandler.SendReplyMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.SendReplyMessage(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of UserHandler.SendReplyMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.SendReplyMessageInt32StringObjectArray">
            <summary>Sets the stub of UserHandler.SendReplyMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.SendReplyMessageStringObjectArray">
            <summary>Sets the stub of UserHandler.SendReplyMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.SendTradeMessage(System.String,System.Object[])">
            <summary>Sets the stub of UserHandler.SendTradeMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="M:SteamBot.Fakes.StubUserHandler.SendTradeMessage(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of UserHandler.SendTradeMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.SendTradeMessageInt32StringObjectArray">
            <summary>Sets the stub of UserHandler.SendTradeMessage(Int32 delayMs, String message, Object[] formatParams)</summary>
        </member>
        <member name="F:SteamBot.Fakes.StubUserHandler.SendTradeMessageStringObjectArray">
            <summary>Sets the stub of UserHandler.SendTradeMessage(String message, Object[] formatParams)</summary>
        </member>
        <member name="T:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction">
            <summary>Shim type of SteamBot.SteamGroups.CMsgGroupInviteAction</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.#ctor(SteamBot.SteamGroups.CMsgGroupInviteAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.AllInstances.SteamKit2InternalISteamSerializableDeserializeStream">
            <summary>Sets the shim of CMsgGroupInviteAction.SteamKit2.Internal.ISteamSerializable.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.AllInstances.SteamKit2InternalISteamSerializableMessageGetEMsg">
            <summary>Sets the shim of CMsgGroupInviteAction.SteamKit2.Internal.ISteamSerializableMessage.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.AllInstances.SteamKit2InternalISteamSerializableSerializeStream">
            <summary>Sets the shim of CMsgGroupInviteAction.SteamKit2.Internal.ISteamSerializable.Serialize(Stream stream)</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.Bind(SteamKit2.Internal.ISteamSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.Bind(SteamKit2.Internal.ISteamSerializableMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.Constructor">
            <summary>Sets the shim of CMsgGroupInviteAction.CMsgGroupInviteAction()</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.SteamKit2InternalISteamSerializableDeserializeStream">
            <summary>Sets the shim of CMsgGroupInviteAction.SteamKit2.Internal.ISteamSerializable.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.SteamKit2InternalISteamSerializableMessageGetEMsg">
            <summary>Sets the shim of CMsgGroupInviteAction.SteamKit2.Internal.ISteamSerializableMessage.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgGroupInviteAction.SteamKit2InternalISteamSerializableSerializeStream">
            <summary>Sets the shim of CMsgGroupInviteAction.SteamKit2.Internal.ISteamSerializable.Serialize(Stream stream)</summary>
        </member>
        <member name="T:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup">
            <summary>Shim type of SteamBot.SteamGroups.CMsgInviteUserToGroup</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.#ctor(SteamBot.SteamGroups.CMsgInviteUserToGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.AllInstances.SteamKit2InternalISteamSerializableDeserializeStream">
            <summary>Sets the shim of CMsgInviteUserToGroup.SteamKit2.Internal.ISteamSerializable.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.AllInstances.SteamKit2InternalISteamSerializableMessageGetEMsg">
            <summary>Sets the shim of CMsgInviteUserToGroup.SteamKit2.Internal.ISteamSerializableMessage.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.AllInstances.SteamKit2InternalISteamSerializableSerializeStream">
            <summary>Sets the shim of CMsgInviteUserToGroup.SteamKit2.Internal.ISteamSerializable.Serialize(Stream stream)</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.Bind(SteamKit2.Internal.ISteamSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.Bind(SteamKit2.Internal.ISteamSerializableMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.Constructor">
            <summary>Sets the shim of CMsgInviteUserToGroup.CMsgInviteUserToGroup()</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.SteamKit2InternalISteamSerializableDeserializeStream">
            <summary>Sets the shim of CMsgInviteUserToGroup.SteamKit2.Internal.ISteamSerializable.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.SteamKit2InternalISteamSerializableMessageGetEMsg">
            <summary>Sets the shim of CMsgInviteUserToGroup.SteamKit2.Internal.ISteamSerializableMessage.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.ShimCMsgInviteUserToGroup.SteamKit2InternalISteamSerializableSerializeStream">
            <summary>Sets the shim of CMsgInviteUserToGroup.SteamKit2.Internal.ISteamSerializable.Serialize(Stream stream)</summary>
        </member>
        <member name="T:SteamBot.SteamGroups.Fakes.StubCMsgGroupInviteAction">
            <summary>Stub type of SteamBot.SteamGroups.CMsgGroupInviteAction</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.StubCMsgGroupInviteAction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.StubCMsgGroupInviteAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.StubCMsgGroupInviteAction.InitializeStub">
            <summary>Initializes a new instance of type StubCMsgGroupInviteAction</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.StubCMsgGroupInviteAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.StubCMsgGroupInviteAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.SteamGroups.Fakes.StubCMsgInviteUserToGroup">
            <summary>Stub type of SteamBot.SteamGroups.CMsgInviteUserToGroup</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.StubCMsgInviteUserToGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.StubCMsgInviteUserToGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.SteamGroups.Fakes.StubCMsgInviteUserToGroup.InitializeStub">
            <summary>Initializes a new instance of type StubCMsgInviteUserToGroup</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.StubCMsgInviteUserToGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.SteamGroups.Fakes.StubCMsgInviteUserToGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.ShimCrafting">
            <summary>Shim type of SteamBot.TF2GC.Crafting</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimCrafting.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimCrafting.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimCrafting.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimCrafting.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimCrafting.CraftItemsBotECraftingRecipeUInt64Array">
            <summary>Sets the shim of Crafting.CraftItems(Bot bot, ECraftingRecipe recipe, UInt64[] items)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimCrafting.CraftItemsBotInt16UInt64Array">
            <summary>Sets the shim of Crafting.CraftItems(Bot bot, Int16 recipe, UInt64[] items)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimCrafting.CraftItemsBotUInt64Array">
            <summary>Sets the shim of Crafting.CraftItems(Bot bot, UInt64[] items)</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.ShimItems">
            <summary>Shim type of SteamBot.TF2GC.Items</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimItems.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimItems.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimItems.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimItems.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimItems.DeleteItemBotUInt64">
            <summary>Sets the shim of Items.DeleteItem(Bot bot, UInt64 item)</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.ShimMsgCraft">
            <summary>Shim type of SteamBot.TF2GC.MsgCraft</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgCraft.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgCraft.#ctor(SteamBot.TF2GC.MsgCraft)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.DeserializeStream">
            <summary>Sets the shim of MsgCraft.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.GetEMsg">
            <summary>Sets the shim of MsgCraft.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.IsProtoGet">
            <summary>Sets the shim of MsgCraft.get_IsProto()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.MsgTypeGet">
            <summary>Sets the shim of MsgCraft.get_MsgType()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.Serialize">
            <summary>Sets the shim of MsgCraft.Serialize()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.SerializeStream">
            <summary>Sets the shim of MsgCraft.Serialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.SourceJobIDGet">
            <summary>Sets the shim of MsgCraft.get_SourceJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.SourceJobIDSetJobID">
            <summary>Sets the shim of MsgCraft.set_SourceJobID(JobID value)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.TargetJobIDGet">
            <summary>Sets the shim of MsgCraft.get_TargetJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.AllInstances.TargetJobIDSetJobID">
            <summary>Sets the shim of MsgCraft.set_TargetJobID(JobID value)</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgCraft.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgCraft.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgCraft.Bind(SteamKit2.Internal.IGCSerializableMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgCraft.Bind(SteamKit2.Internal.ISteamSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.Constructor">
            <summary>Sets the shim of MsgCraft.MsgCraft()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.DeserializeStream">
            <summary>Sets the shim of MsgCraft.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.GetEMsg">
            <summary>Sets the shim of MsgCraft.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.IsProtoGet">
            <summary>Sets the shim of MsgCraft.get_IsProto()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.MsgTypeGet">
            <summary>Sets the shim of MsgCraft.get_MsgType()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.Serialize">
            <summary>Sets the shim of MsgCraft.Serialize()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.SerializeStream">
            <summary>Sets the shim of MsgCraft.Serialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.SourceJobIDGet">
            <summary>Sets the shim of MsgCraft.get_SourceJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.SourceJobIDSetJobID">
            <summary>Sets the shim of MsgCraft.set_SourceJobID(JobID value)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.TargetJobIDGet">
            <summary>Sets the shim of MsgCraft.get_TargetJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgCraft.TargetJobIDSetJobID">
            <summary>Sets the shim of MsgCraft.set_TargetJobID(JobID value)</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.ShimMsgDelete">
            <summary>Shim type of SteamBot.TF2GC.MsgDelete</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgDelete.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgDelete.#ctor(SteamBot.TF2GC.MsgDelete)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.DeserializeStream">
            <summary>Sets the shim of MsgDelete.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.GetEMsg">
            <summary>Sets the shim of MsgDelete.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.IsProtoGet">
            <summary>Sets the shim of MsgDelete.get_IsProto()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.MsgTypeGet">
            <summary>Sets the shim of MsgDelete.get_MsgType()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.Serialize">
            <summary>Sets the shim of MsgDelete.Serialize()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.SerializeStream">
            <summary>Sets the shim of MsgDelete.Serialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.SourceJobIDGet">
            <summary>Sets the shim of MsgDelete.get_SourceJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.SourceJobIDSetJobID">
            <summary>Sets the shim of MsgDelete.set_SourceJobID(JobID value)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.TargetJobIDGet">
            <summary>Sets the shim of MsgDelete.get_TargetJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.AllInstances.TargetJobIDSetJobID">
            <summary>Sets the shim of MsgDelete.set_TargetJobID(JobID value)</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgDelete.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgDelete.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgDelete.Bind(SteamKit2.Internal.IGCSerializableMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.ShimMsgDelete.Bind(SteamKit2.Internal.ISteamSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.Constructor">
            <summary>Sets the shim of MsgDelete.MsgDelete()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.DeserializeStream">
            <summary>Sets the shim of MsgDelete.Deserialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.GetEMsg">
            <summary>Sets the shim of MsgDelete.GetEMsg()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.IsProtoGet">
            <summary>Sets the shim of MsgDelete.get_IsProto()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.MsgTypeGet">
            <summary>Sets the shim of MsgDelete.get_MsgType()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.Serialize">
            <summary>Sets the shim of MsgDelete.Serialize()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.SerializeStream">
            <summary>Sets the shim of MsgDelete.Serialize(Stream stream)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.SourceJobIDGet">
            <summary>Sets the shim of MsgDelete.get_SourceJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.SourceJobIDSetJobID">
            <summary>Sets the shim of MsgDelete.set_SourceJobID(JobID value)</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.TargetJobIDGet">
            <summary>Sets the shim of MsgDelete.get_TargetJobID()</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.ShimMsgDelete.TargetJobIDSetJobID">
            <summary>Sets the shim of MsgDelete.set_TargetJobID(JobID value)</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.StubMsgCraft">
            <summary>Stub type of SteamBot.TF2GC.MsgCraft</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.StubMsgCraft.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.StubMsgCraft.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.StubMsgCraft.InitializeStub">
            <summary>Initializes a new instance of type StubMsgCraft</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.StubMsgCraft.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.StubMsgCraft.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamBot.TF2GC.Fakes.StubMsgDelete">
            <summary>Stub type of SteamBot.TF2GC.MsgDelete</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.StubMsgDelete.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.StubMsgDelete.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamBot.TF2GC.Fakes.StubMsgDelete.InitializeStub">
            <summary>Initializes a new instance of type StubMsgDelete</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.StubMsgDelete.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamBot.TF2GC.Fakes.StubMsgDelete.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException">
            <summary>Shim type of SteamTrade.Exceptions.InventoryFetchException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.#ctor(SteamTrade.Exceptions.InventoryFetchException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.AllInstances.FailingSteamIdGet">
            <summary>Sets the shim of InventoryFetchException.get_FailingSteamId()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.AllInstances.FailingSteamIdSetSteamID">
            <summary>Sets the shim of InventoryFetchException.set_FailingSteamId(SteamID value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.Constructor">
            <summary>Sets the shim of InventoryFetchException.InventoryFetchException()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.ConstructorSteamID">
            <summary>Sets the shim of InventoryFetchException.InventoryFetchException(SteamID steamId)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.FailingSteamIdGet">
            <summary>Sets the shim of InventoryFetchException.get_FailingSteamId()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.FailingSteamIdSetSteamID">
            <summary>Sets the shim of InventoryFetchException.set_FailingSteamId(SteamID value)</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException">
            <summary>Shim type of SteamTrade.Exceptions.SteamWebNotLoggedInException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.#ctor(SteamTrade.Exceptions.SteamWebNotLoggedInException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.Constructor">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.ConstructorString">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException(String message)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.ConstructorStringException">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException(String message, Exception inner)</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeException">
            <summary>Shim type of SteamTrade.Exceptions.TradeException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.#ctor(SteamTrade.Exceptions.TradeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.Constructor">
            <summary>Sets the shim of TradeException.TradeException()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.ConstructorString">
            <summary>Sets the shim of TradeException.TradeException(String message)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.ConstructorStringException">
            <summary>Sets the shim of TradeException.TradeException(String message, Exception inner)</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeJsonException">
            <summary>Shim type of SteamTrade.Exceptions.TradeJsonException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.#ctor(SteamTrade.Exceptions.TradeJsonException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances.OriginalServerResponseGet">
            <summary>Sets the shim of TradeJsonException.get_OriginalServerResponse()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances.OriginalServerResponseSetString">
            <summary>Sets the shim of TradeJsonException.set_OriginalServerResponse(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances.ToString01">
            <summary>Sets the shim of TradeJsonException.ToString()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ConstructorString">
            <summary>Sets the shim of TradeJsonException.TradeJsonException(String originalServerResponse)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ConstructorStringExceptionString">
            <summary>Sets the shim of TradeJsonException.TradeJsonException(String message, Exception inner, String originalServerResponse)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ConstructorStringString">
            <summary>Sets the shim of TradeJsonException.TradeJsonException(String message, String originalServerResponse)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.OriginalServerResponseGet">
            <summary>Sets the shim of TradeJsonException.get_OriginalServerResponse()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.OriginalServerResponseSetString">
            <summary>Sets the shim of TradeJsonException.set_OriginalServerResponse(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ToString">
            <summary>Sets the shim of TradeJsonException.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubInventoryFetchException">
            <summary>Stub type of SteamTrade.Exceptions.InventoryFetchException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.#ctor(SteamKit2.SteamID)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInventoryFetchException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInventoryFetchException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.InitializeStub">
            <summary>Initializes a new instance of type StubInventoryFetchException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException">
            <summary>Stub type of SteamTrade.Exceptions.SteamWebNotLoggedInException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSteamWebNotLoggedInException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSteamWebNotLoggedInException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.InitializeStub">
            <summary>Initializes a new instance of type StubSteamWebNotLoggedInException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubTradeException">
            <summary>Stub type of SteamTrade.Exceptions.TradeException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTradeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTradeException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.InitializeStub">
            <summary>Initializes a new instance of type StubTradeException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubTradeJsonException">
            <summary>Stub type of SteamTrade.Exceptions.TradeJsonException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.#ctor(System.String,System.Exception,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTradeJsonException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTradeJsonException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.InitializeStub">
            <summary>Initializes a new instance of type StubTradeJsonException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.ToString">
            <summary>Sets the stub of TradeJsonException.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.ToString01">
            <summary>Sets the stub of TradeJsonException.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory">
            <summary>Shim type of SteamTrade.GenericInventory</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.#ctor(SteamTrade.GenericInventory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.AppIdGet">
            <summary>Sets the shim of GenericInventory.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.ContextIdGet">
            <summary>Sets the shim of GenericInventory.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetDescriptionGenericInventoryItem">
            <summary>Sets the shim of GenericInventory.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetDescriptionOf1GenericInventoryItem``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory,SteamTrade.GenericInventory.Item,``0})">
            <summary>Sets the shim of GenericInventory.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetDescriptionOf1UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory,System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetDescriptionOf1UInt64UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory,System.UInt64,System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetDescriptionUInt64">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetDescriptionUInt64UInt64">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetEnumerator">
            <summary>Sets the shim of GenericInventory.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetItemCount">
            <summary>Sets the shim of GenericInventory.GetItemCount()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.GetItemUInt64">
            <summary>Sets the shim of GenericInventory.GetItem(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.LoadAsyncInt32">
            <summary>Sets the shim of GenericInventory.LoadAsync(Int32 start)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.LoadedGet">
            <summary>Sets the shim of GenericInventory.get_Loaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of GenericInventory.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.RawDownloadAsyncListOfJObjectUInt64Int32Int32">
            <summary>Sets the shim of GenericInventory.RawDownloadAsync(List`1&lt;JObject&gt; responses, UInt64 startAssetId, Int32 counter, Int32 maxItemCount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.RemoveItemGenericInventoryItem">
            <summary>Sets the shim of GenericInventory.RemoveItem(Item item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.RemoveItemUInt64">
            <summary>Sets the shim of GenericInventory.RemoveItem(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of GenericInventory.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.Wait">
            <summary>Sets the shim of GenericInventory.Wait()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.WaitAsync">
            <summary>Sets the shim of GenericInventory.WaitAsync()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.WarningsGet">
            <summary>Sets the shim of GenericInventory.get_Warnings()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AllInstances.WarningsSetListOfString">
            <summary>Sets the shim of GenericInventory.set_Warnings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.AppIdGet">
            <summary>Sets the shim of GenericInventory.get_AppId()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.Bind(System.Collections.Generic.IEnumerable{SteamTrade.GenericInventory.Item})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ConstructorISteamWebUInt64UInt32UInt32String">
            <summary>Sets the shim of GenericInventory.GenericInventory(ISteamWeb steamWeb, UInt64 steamId64, UInt32 appId, UInt32 contextId, String language)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ContextIdGet">
            <summary>Sets the shim of GenericInventory.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.GetDescriptionGenericInventoryItem">
            <summary>Sets the shim of GenericInventory.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.GetDescriptionOf1GenericInventoryItem``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory.Item,``0})">
            <summary>Sets the shim of GenericInventory.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.GetDescriptionOf1UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.GetDescriptionOf1UInt64UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.UInt64,System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.GetDescriptionUInt64">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.GetDescriptionUInt64UInt64">
            <summary>Sets the shim of GenericInventory.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.GetEnumerator">
            <summary>Sets the shim of GenericInventory.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.GetItemCount">
            <summary>Sets the shim of GenericInventory.GetItemCount()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.GetItemUInt64">
            <summary>Sets the shim of GenericInventory.GetItem(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.LoadAsyncInt32">
            <summary>Sets the shim of GenericInventory.LoadAsync(Int32 start)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.LoadedGet">
            <summary>Sets the shim of GenericInventory.get_Loaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.OnSerializingStreamingContext">
            <summary>Sets the shim of GenericInventory.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.RawDownloadAsyncListOfJObjectUInt64Int32Int32">
            <summary>Sets the shim of GenericInventory.RawDownloadAsync(List`1&lt;JObject&gt; responses, UInt64 startAssetId, Int32 counter, Int32 maxItemCount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.RemoveItemGenericInventoryItem">
            <summary>Sets the shim of GenericInventory.RemoveItem(Item item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.RemoveItemUInt64">
            <summary>Sets the shim of GenericInventory.RemoveItem(UInt64 assetId)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory.ShimItem">
            <summary>Shim type of SteamTrade.GenericInventory+Item</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.ShimItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.ShimItem.#ctor(SteamTrade.GenericInventory.Item)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory.ShimItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.AllInstances.ClassIdGet">
            <summary>Sets the shim of Item.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.AllInstances.ClassIdSetUInt64">
            <summary>Sets the shim of Item.set_ClassId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.AllInstances.InstanceIdGet">
            <summary>Sets the shim of Item.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.AllInstances.InstanceIdSetUInt64">
            <summary>Sets the shim of Item.set_InstanceId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.AllInstances.ToString01">
            <summary>Sets the shim of Item.ToString()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.ShimItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.ShimItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.ShimItem.Bind(System.IComparable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory.ShimItem.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.ClassIdGet">
            <summary>Sets the shim of Item.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.ClassIdSetUInt64">
            <summary>Sets the shim of Item.set_ClassId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.ConstructorUInt32UInt32UInt64UInt64UInt64Int32">
            <summary>Sets the shim of Item.Item(UInt32 appid, UInt32 contextid, UInt64 assetid, UInt64 classId, UInt64 instanceId, Int32 amount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.InstanceIdGet">
            <summary>Sets the shim of Item.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.InstanceIdSetUInt64">
            <summary>Sets the shim of Item.set_InstanceId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.ShimItem.ToString">
            <summary>Sets the shim of Item.ToString()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of GenericInventory.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.Wait">
            <summary>Sets the shim of GenericInventory.Wait()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.WaitAsync">
            <summary>Sets the shim of GenericInventory.WaitAsync()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.WarningsGet">
            <summary>Sets the shim of GenericInventory.get_Warnings()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory.WarningsSetListOfString">
            <summary>Sets the shim of GenericInventory.set_Warnings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGetRsaKey">
            <summary>Shim type of SteamTrade.GetRsaKey</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.#ctor(SteamTrade.GetRsaKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGetRsaKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_expGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_exp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_expSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_exp(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_modGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_mod()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_modSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_mod(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.successGet">
            <summary>Sets the shim of GetRsaKey.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.successSetBoolean">
            <summary>Sets the shim of GetRsaKey.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.timestampGet">
            <summary>Sets the shim of GetRsaKey.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.timestampSetString">
            <summary>Sets the shim of GetRsaKey.set_timestamp(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.Constructor">
            <summary>Sets the shim of GetRsaKey.GetRsaKey()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_expGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_exp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_expSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_exp(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_modGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_mod()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_modSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_mod(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.successGet">
            <summary>Sets the shim of GetRsaKey.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.successSetBoolean">
            <summary>Sets the shim of GetRsaKey.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.timestampGet">
            <summary>Sets the shim of GetRsaKey.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.timestampSetString">
            <summary>Sets the shim of GetRsaKey.set_timestamp(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimItemDescription">
            <summary>Shim type of SteamTrade.ItemDescription</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.#ctor(SteamTrade.ItemDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimItemDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.AppIdGet">
            <summary>Sets the shim of ItemDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.AppIdSetInt32">
            <summary>Sets the shim of ItemDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.BackgroundColorGet">
            <summary>Sets the shim of ItemDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.BackgroundColorSetString">
            <summary>Sets the shim of ItemDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.ClassIdGet">
            <summary>Sets the shim of ItemDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.ClassIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_ClassId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.CommodityGet">
            <summary>Sets the shim of ItemDescription.get_Commodity()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.CommoditySetString">
            <summary>Sets the shim of ItemDescription.set_Commodity(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconDragUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconDragUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconDragUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconDragUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlLargeGet">
            <summary>Sets the shim of ItemDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlLargeSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.InstanceIdGet">
            <summary>Sets the shim of ItemDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.InstanceIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_InstanceId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketHashNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketHashNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketMarketableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketMarketableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketMarketableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketMarketableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketTradableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketTradableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketTradableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketTradableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketableGet">
            <summary>Sets the shim of ItemDescription.get_Marketable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Marketable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameColorGet">
            <summary>Sets the shim of ItemDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameColorSetString">
            <summary>Sets the shim of ItemDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameGet">
            <summary>Sets the shim of ItemDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameSetString">
            <summary>Sets the shim of ItemDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TagsGet">
            <summary>Sets the shim of ItemDescription.get_Tags()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TagsSetListOfTag">
            <summary>Sets the shim of ItemDescription.set_Tags(List`1&lt;Tag&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TradableGet">
            <summary>Sets the shim of ItemDescription.get_Tradable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TradableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Tradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TypeGet">
            <summary>Sets the shim of ItemDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TypeSetString">
            <summary>Sets the shim of ItemDescription.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.UrlGet">
            <summary>Sets the shim of ItemDescription.get_Url()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.UrlSetString">
            <summary>Sets the shim of ItemDescription.set_Url(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AppIdGet">
            <summary>Sets the shim of ItemDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AppIdSetInt32">
            <summary>Sets the shim of ItemDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.BackgroundColorGet">
            <summary>Sets the shim of ItemDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.BackgroundColorSetString">
            <summary>Sets the shim of ItemDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.ClassIdGet">
            <summary>Sets the shim of ItemDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.ClassIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_ClassId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.CommodityGet">
            <summary>Sets the shim of ItemDescription.get_Commodity()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.CommoditySetString">
            <summary>Sets the shim of ItemDescription.set_Commodity(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.Constructor">
            <summary>Sets the shim of ItemDescription.ItemDescription()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconDragUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconDragUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconDragUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconDragUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlLargeGet">
            <summary>Sets the shim of ItemDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlLargeSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.InstanceIdGet">
            <summary>Sets the shim of ItemDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.InstanceIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_InstanceId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketHashNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketHashNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketMarketableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketMarketableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketMarketableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketMarketableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketTradableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketTradableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketTradableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketTradableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketableGet">
            <summary>Sets the shim of ItemDescription.get_Marketable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Marketable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameColorGet">
            <summary>Sets the shim of ItemDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameColorSetString">
            <summary>Sets the shim of ItemDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameGet">
            <summary>Sets the shim of ItemDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameSetString">
            <summary>Sets the shim of ItemDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TagsGet">
            <summary>Sets the shim of ItemDescription.get_Tags()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TagsSetListOfTag">
            <summary>Sets the shim of ItemDescription.set_Tags(List`1&lt;Tag&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TradableGet">
            <summary>Sets the shim of ItemDescription.get_Tradable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TradableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Tradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TypeGet">
            <summary>Sets the shim of ItemDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TypeSetString">
            <summary>Sets the shim of ItemDescription.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.UrlGet">
            <summary>Sets the shim of ItemDescription.get_Url()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.UrlSetString">
            <summary>Sets the shim of ItemDescription.set_Url(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamResult">
            <summary>Shim type of SteamTrade.SteamResult</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.#ctor(SteamTrade.SteamResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.LoginCompleteGet">
            <summary>Sets the shim of SteamResult.get_LoginComplete()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.LoginCompleteSetBoolean">
            <summary>Sets the shim of SteamResult.set_LoginComplete(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferParametersGet">
            <summary>Sets the shim of SteamResult.get_TransferParameters()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferParametersSetTransferParameters">
            <summary>Sets the shim of SteamResult.set_TransferParameters(TransferParameters value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferUrlsGet">
            <summary>Sets the shim of SteamResult.get_TransferUrls()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferUrlsSetStringArray">
            <summary>Sets the shim of SteamResult.set_TransferUrls(String[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_gidGet">
            <summary>Sets the shim of SteamResult.get_captcha_gid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_gidSetString">
            <summary>Sets the shim of SteamResult.set_captcha_gid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_neededGet">
            <summary>Sets the shim of SteamResult.get_captcha_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_captcha_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailauth_neededGet">
            <summary>Sets the shim of SteamResult.get_emailauth_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailauth_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_emailauth_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailsteamidGet">
            <summary>Sets the shim of SteamResult.get_emailsteamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailsteamidSetString">
            <summary>Sets the shim of SteamResult.set_emailsteamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.messageGet">
            <summary>Sets the shim of SteamResult.get_message()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.messageSetString">
            <summary>Sets the shim of SteamResult.set_message(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.requires_twofactorGet">
            <summary>Sets the shim of SteamResult.get_requires_twofactor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.requires_twofactorSetBoolean">
            <summary>Sets the shim of SteamResult.set_requires_twofactor(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.successGet">
            <summary>Sets the shim of SteamResult.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.successSetBoolean">
            <summary>Sets the shim of SteamResult.set_success(Boolean value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.Constructor">
            <summary>Sets the shim of SteamResult.SteamResult()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.LoginCompleteGet">
            <summary>Sets the shim of SteamResult.get_LoginComplete()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.LoginCompleteSetBoolean">
            <summary>Sets the shim of SteamResult.set_LoginComplete(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferParametersGet">
            <summary>Sets the shim of SteamResult.get_TransferParameters()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferParametersSetTransferParameters">
            <summary>Sets the shim of SteamResult.set_TransferParameters(TransferParameters value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferUrlsGet">
            <summary>Sets the shim of SteamResult.get_TransferUrls()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferUrlsSetStringArray">
            <summary>Sets the shim of SteamResult.set_TransferUrls(String[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_gidGet">
            <summary>Sets the shim of SteamResult.get_captcha_gid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_gidSetString">
            <summary>Sets the shim of SteamResult.set_captcha_gid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_neededGet">
            <summary>Sets the shim of SteamResult.get_captcha_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_captcha_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailauth_neededGet">
            <summary>Sets the shim of SteamResult.get_emailauth_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailauth_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_emailauth_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailsteamidGet">
            <summary>Sets the shim of SteamResult.get_emailsteamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailsteamidSetString">
            <summary>Sets the shim of SteamResult.set_emailsteamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.messageGet">
            <summary>Sets the shim of SteamResult.get_message()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.messageSetString">
            <summary>Sets the shim of SteamResult.set_message(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.requires_twofactorGet">
            <summary>Sets the shim of SteamResult.get_requires_twofactor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.requires_twofactorSetBoolean">
            <summary>Sets the shim of SteamResult.set_requires_twofactor(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.successGet">
            <summary>Sets the shim of SteamResult.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.successSetBoolean">
            <summary>Sets the shim of SteamResult.set_success(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWeb">
            <summary>Shim type of SteamTrade.SteamWeb</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.#ctor(SteamTrade.SteamWeb)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AcceptLanguageHeaderGet">
            <summary>Sets the shim of SteamWeb.get_AcceptLanguageHeader()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AcceptLanguageHeaderSetString">
            <summary>Sets the shim of SteamWeb.set_AcceptLanguageHeader(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWeb.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AcceptLanguageHeaderGet">
            <summary>Sets the shim of SteamWeb.get_AcceptLanguageHeader()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AcceptLanguageHeaderSetString">
            <summary>Sets the shim of SteamWeb.set_AcceptLanguageHeader(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AuthenticateIEnumerableOfCookie">
            <summary>Sets the shim of SteamWeb.Authenticate(IEnumerable`1&lt;Cookie&gt; cookies)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AuthenticateStringSteamClientString">
            <summary>Sets the shim of SteamWeb.Authenticate(String myUniqueId, SteamClient client, String myLoginKey)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.CookiesGet">
            <summary>Sets the shim of SteamWeb.get_Cookies()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.CookiesSetCookieContainer">
            <summary>Sets the shim of SteamWeb.set_Cookies(CookieContainer value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.DoLoginStringStringBooleanFuncOfStringFuncOfStringStringFuncOfString">
            <summary>Sets the shim of SteamWeb.DoLogin(String username, String password, Boolean rememberLogin, Func`1&lt;String&gt; twoFactorCodeCallback, Func`2&lt;String,String&gt; captchaCallback, Func`1&lt;String&gt; emailCodeCallback)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.FetchAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.FetchAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.FetchStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Fetch(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.GetSteamId64">
            <summary>Sets the shim of SteamWeb.GetSteamId64()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.PrepareRequestStringStringNameValueCollectionBooleanStringBooleanOutStringOutHttpWebRequestOut">
            <summary>Sets the shim of SteamWeb.PrepareRequest(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean&amp; isGetMethod, String&amp; dataString, HttpWebRequest&amp; request)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.RequestAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.RequestAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.RequestStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Request(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.SessionIdGet">
            <summary>Sets the shim of SteamWeb.get_SessionId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.TokenSecureGet">
            <summary>Sets the shim of SteamWeb.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.VerifyCookies">
            <summary>Sets the shim of SteamWeb.VerifyCookies()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AuthenticateIEnumerableOfCookie">
            <summary>Sets the shim of SteamWeb.Authenticate(IEnumerable`1&lt;Cookie&gt; cookies)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AuthenticateStringSteamClientString">
            <summary>Sets the shim of SteamWeb.Authenticate(String myUniqueId, SteamClient client, String myLoginKey)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.Bind(SteamTrade.ISteamWeb)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.Constructor">
            <summary>Sets the shim of SteamWeb.SteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.CookiesGet">
            <summary>Sets the shim of SteamWeb.get_Cookies()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.CookiesSetCookieContainer">
            <summary>Sets the shim of SteamWeb.set_Cookies(CookieContainer value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.DoLoginStringStringBooleanFuncOfStringFuncOfStringStringFuncOfString">
            <summary>Sets the shim of SteamWeb.DoLogin(String username, String password, Boolean rememberLogin, Func`1&lt;String&gt; twoFactorCodeCallback, Func`2&lt;String,String&gt; captchaCallback, Func`1&lt;String&gt; emailCodeCallback)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.FetchAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.FetchAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.FetchStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Fetch(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.GetSteamId64">
            <summary>Sets the shim of SteamWeb.GetSteamId64()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.HexStringToByteArrayString">
            <summary>Sets the shim of SteamWeb.HexStringToByteArray(String hex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.RequestAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.RequestAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.RequestStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Request(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.SessionIdGet">
            <summary>Sets the shim of SteamWeb.get_SessionId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.StaticConstructor">
            <summary>Sets the shim of SteamWeb.SteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.SubmitCookiesCookieContainer">
            <summary>Sets the shim of SteamWeb.SubmitCookies(CookieContainer cookies)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.ThrowSteamWebNotLoggedInExceptionHttpWebResponse">
            <summary>Sets the shim of SteamWeb.ThrowSteamWebNotLoggedInException(HttpWebResponse httpWebResponse)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.TokenSecureGet">
            <summary>Sets the shim of SteamWeb.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.VerifyCookies">
            <summary>Sets the shim of SteamWeb.VerifyCookies()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWebLoginException">
            <summary>Shim type of SteamTrade.SteamWebLoginException</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.#ctor(SteamTrade.SteamWebLoginException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWebLoginException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.AllInstances.SteamResultGet">
            <summary>Sets the shim of SteamWebLoginException.get_SteamResult()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.AllInstances.SteamResultSetSteamResult">
            <summary>Sets the shim of SteamWebLoginException.set_SteamResult(SteamResult value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SteamWebLoginException.SteamWebLoginException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.ConstructorSteamResult">
            <summary>Sets the shim of SteamWebLoginException.SteamWebLoginException(SteamResult steamResult)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.SteamResultGet">
            <summary>Sets the shim of SteamWebLoginException.get_SteamResult()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.SteamResultSetSteamResult">
            <summary>Sets the shim of SteamWebLoginException.set_SteamResult(SteamResult value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTF2Value">
            <summary>Shim type of SteamTrade.TF2Value</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTF2Value.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.AdditionOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Addition(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTF2Value.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTF2Value.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTF2Value.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.CeilingTF2Value">
            <summary>Sets the shim of TF2Value.Ceiling(TF2Value value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.DifferenceTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.Difference(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.DivisionOpTF2ValueDouble">
            <summary>Sets the shim of TF2Value.op_Division(TF2Value val1, Double val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.DivisionOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Division(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.EqualityOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Equality(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.FloorTF2Value">
            <summary>Sets the shim of TF2Value.Floor(TF2Value value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.FromRefDouble">
            <summary>Sets the shim of TF2Value.FromRef(Double numRef)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.FromRefString">
            <summary>Sets the shim of TF2Value.FromRef(String numRefStr)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.GreaterThanOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_GreaterThan(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.GreaterThanOrEqualOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_GreaterThanOrEqual(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.InequalityOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Inequality(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.LessThanOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_LessThan(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.LessThanOrEqualOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_LessThanOrEqual(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MaxTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.Max(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MinTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.Min(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.ModulusOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Modulus(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MultiplyOpDoubleTF2Value">
            <summary>Sets the shim of TF2Value.op_Multiply(Double val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MultiplyOpTF2ValueDouble">
            <summary>Sets the shim of TF2Value.op_Multiply(TF2Value val1, Double val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.RoundTF2ValueMidpointRounding">
            <summary>Sets the shim of TF2Value.Round(TF2Value value, MidpointRounding roundingRule)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.StaticConstructor">
            <summary>Sets the shim of TF2Value.TF2Value()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.SubtractionOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Subtraction(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTag">
            <summary>Shim type of SteamTrade.Tag</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTag.#ctor(SteamTrade.Tag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.CategoryGet">
            <summary>Sets the shim of Tag.get_Category()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.CategorySetString">
            <summary>Sets the shim of Tag.set_Category(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.InternalNameGet">
            <summary>Sets the shim of Tag.get_InternalName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.InternalNameSetString">
            <summary>Sets the shim of Tag.set_InternalName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.LocalizedCategoryNameGet">
            <summary>Sets the shim of Tag.get_LocalizedCategoryName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.LocalizedCategoryNameSetString">
            <summary>Sets the shim of Tag.set_LocalizedCategoryName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.LocalizedTagNameGet">
            <summary>Sets the shim of Tag.get_LocalizedTagName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.AllInstances.LocalizedTagNameSetString">
            <summary>Sets the shim of Tag.set_LocalizedTagName(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.CategoryGet">
            <summary>Sets the shim of Tag.get_Category()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.CategorySetString">
            <summary>Sets the shim of Tag.set_Category(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.Constructor">
            <summary>Sets the shim of Tag.Tag()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.InternalNameGet">
            <summary>Sets the shim of Tag.get_InternalName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.InternalNameSetString">
            <summary>Sets the shim of Tag.set_InternalName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.LocalizedCategoryNameGet">
            <summary>Sets the shim of Tag.get_LocalizedCategoryName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.LocalizedCategoryNameSetString">
            <summary>Sets the shim of Tag.set_LocalizedCategoryName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.LocalizedTagNameGet">
            <summary>Sets the shim of Tag.get_LocalizedTagName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTag.LocalizedTagNameSetString">
            <summary>Sets the shim of Tag.set_LocalizedTagName(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTrade">
            <summary>Shim type of SteamTrade.Trade</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.#ctor(SteamTrade.Trade)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AcceptTrade">
            <summary>Sets the shim of Trade.AcceptTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AddItemTradeUserAssets">
            <summary>Sets the shim of Trade.AddItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AddItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.AddItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTrade.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.AcceptTrade">
            <summary>Sets the shim of Trade.AcceptTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.AddItemTradeUserAssets">
            <summary>Sets the shim of Trade.AddItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.AddItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.AddItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.CancelTrade">
            <summary>Sets the shim of Trade.CancelTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnAwaitingConfirmation">
            <summary>Sets the shim of Trade.FireOnAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnCloseEvent">
            <summary>Sets the shim of Trade.FireOnCloseEvent()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnErrorEventString">
            <summary>Sets the shim of Trade.FireOnErrorEvent(String message)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnStatusErrorEventTradeTradeStatusType">
            <summary>Sets the shim of Trade.FireOnStatusErrorEvent(TradeStatusType statusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnUserAddItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserAddItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnUserRemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserRemoveItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.GetItemSlotUInt64">
            <summary>Sets the shim of Trade.GetItemSlot(UInt64 itemid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.GetTradeStatusErrorStringTradeTradeStatusType">
            <summary>Sets the shim of Trade.GetTradeStatusErrorString(TradeStatusType tradeStatusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HandleTradeOngoingTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeOngoing(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HandleTradeVersionChangeTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeVersionChange(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HasTradeCompletedOkGet">
            <summary>Sets the shim of Trade.get_HasTradeCompletedOk()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HasTradeCompletedOkSetBoolean">
            <summary>Sets the shim of Trade.set_HasTradeCompletedOk(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HasTradeEndedGet">
            <summary>Sets the shim of Trade.get_HasTradeEnded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.IsTradeAwaitingConfirmationGet">
            <summary>Sets the shim of Trade.get_IsTradeAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.IsTradeAwaitingConfirmationSetBoolean">
            <summary>Sets the shim of Trade.set_IsTradeAwaitingConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MeIsReadyGet">
            <summary>Sets the shim of Trade.get_MeIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MeIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_MeIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MyOfferedItemsGet">
            <summary>Sets the shim of Trade.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MySteamIdGet">
            <summary>Sets the shim of Trade.get_MySteamId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.NextTradeSlot">
            <summary>Sets the shim of Trade.NextTradeSlot()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAfterInitAddTradeSuccessfulInit">
            <summary>Sets the shim of Trade.add_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAfterInitRemoveTradeSuccessfulInit">
            <summary>Sets the shim of Trade.remove_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAwaitingConfirmationAddTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.add_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAwaitingConfirmationRemoveTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.remove_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnCloseAddTradeCloseHandler">
            <summary>Sets the shim of Trade.add_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnCloseRemoveTradeCloseHandler">
            <summary>Sets the shim of Trade.remove_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnErrorAddTradeErrorHandler">
            <summary>Sets the shim of Trade.add_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnErrorRemoveTradeErrorHandler">
            <summary>Sets the shim of Trade.remove_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnMessageAddTradeMessageHandler">
            <summary>Sets the shim of Trade.add_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnMessageRemoveTradeMessageHandler">
            <summary>Sets the shim of Trade.remove_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnStatusErrorAddTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.add_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnStatusErrorRemoveTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.remove_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAcceptAddTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.add_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAcceptRemoveTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.remove_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAddItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAddItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserRemoveItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserRemoveItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserSetReadyAddTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.add_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserSetReadyRemoveTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.remove_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherIsReadyGet">
            <summary>Sets the shim of Trade.get_OtherIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_OtherIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherOfferedItemsGet">
            <summary>Sets the shim of Trade.get_OtherOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherSIDGet">
            <summary>Sets the shim of Trade.get_OtherSID()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherSIDSetSteamID">
            <summary>Sets the shim of Trade.set_OtherSID(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserAcceptedGet">
            <summary>Sets the shim of Trade.get_OtherUserAccepted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserAcceptedSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserAccepted(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserCancelledGet">
            <summary>Sets the shim of Trade.get_OtherUserCancelled()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserCancelledSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserCancelled(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.Poll">
            <summary>Sets the shim of Trade.Poll()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.RemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.RemoveItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.RemoveItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.RemoveItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.AllInstances.RetryWebRequestOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.Trade,System.Func{``0},``0})">
            <summary>Sets the shim of Trade.RetryWebRequest(Func`1&lt;!!0&gt; webEvent)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.SendMessageString">
            <summary>Sets the shim of Trade.SendMessage(String msg)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.SetReadyBoolean">
            <summary>Sets the shim of Trade.SetReady(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.TradeStartedGet">
            <summary>Sets the shim of Trade.get_TradeStarted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.TradeStartedSetBoolean">
            <summary>Sets the shim of Trade.set_TradeStarted(Boolean value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.CancelTrade">
            <summary>Sets the shim of Trade.CancelTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.ConstructorSteamIDSteamIDISteamWeb">
            <summary>Sets the shim of Trade.Trade(SteamID me, SteamID other, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnAwaitingConfirmation">
            <summary>Sets the shim of Trade.FireOnAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnCloseEvent">
            <summary>Sets the shim of Trade.FireOnCloseEvent()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnErrorEventString">
            <summary>Sets the shim of Trade.FireOnErrorEvent(String message)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnStatusErrorEventTradeTradeStatusType">
            <summary>Sets the shim of Trade.FireOnStatusErrorEvent(TradeStatusType statusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnUserAddItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserAddItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnUserRemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserRemoveItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.GetItemSlotUInt64">
            <summary>Sets the shim of Trade.GetItemSlot(UInt64 itemid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.GetTradeStatusErrorStringTradeTradeStatusType">
            <summary>Sets the shim of Trade.GetTradeStatusErrorString(TradeStatusType tradeStatusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HandleTradeOngoingTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeOngoing(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HandleTradeVersionChangeTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeVersionChange(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HasTradeCompletedOkGet">
            <summary>Sets the shim of Trade.get_HasTradeCompletedOk()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HasTradeCompletedOkSetBoolean">
            <summary>Sets the shim of Trade.set_HasTradeCompletedOk(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HasTradeEndedGet">
            <summary>Sets the shim of Trade.get_HasTradeEnded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.IsTradeAwaitingConfirmationGet">
            <summary>Sets the shim of Trade.get_IsTradeAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.IsTradeAwaitingConfirmationSetBoolean">
            <summary>Sets the shim of Trade.set_IsTradeAwaitingConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MeIsReadyGet">
            <summary>Sets the shim of Trade.get_MeIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MeIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_MeIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MyOfferedItemsGet">
            <summary>Sets the shim of Trade.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MySteamIdGet">
            <summary>Sets the shim of Trade.get_MySteamId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.NextTradeSlot">
            <summary>Sets the shim of Trade.NextTradeSlot()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAfterInitAddTradeSuccessfulInit">
            <summary>Sets the shim of Trade.add_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAfterInitRemoveTradeSuccessfulInit">
            <summary>Sets the shim of Trade.remove_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAwaitingConfirmationAddTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.add_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAwaitingConfirmationRemoveTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.remove_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnCloseAddTradeCloseHandler">
            <summary>Sets the shim of Trade.add_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnCloseRemoveTradeCloseHandler">
            <summary>Sets the shim of Trade.remove_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnErrorAddTradeErrorHandler">
            <summary>Sets the shim of Trade.add_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnErrorRemoveTradeErrorHandler">
            <summary>Sets the shim of Trade.remove_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnMessageAddTradeMessageHandler">
            <summary>Sets the shim of Trade.add_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnMessageRemoveTradeMessageHandler">
            <summary>Sets the shim of Trade.remove_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnStatusErrorAddTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.add_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnStatusErrorRemoveTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.remove_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAcceptAddTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.add_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAcceptRemoveTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.remove_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAddItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAddItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserRemoveItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserRemoveItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserSetReadyAddTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.add_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserSetReadyRemoveTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.remove_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherIsReadyGet">
            <summary>Sets the shim of Trade.get_OtherIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_OtherIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherOfferedItemsGet">
            <summary>Sets the shim of Trade.get_OtherOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherSIDGet">
            <summary>Sets the shim of Trade.get_OtherSID()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherSIDSetSteamID">
            <summary>Sets the shim of Trade.set_OtherSID(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserAcceptedGet">
            <summary>Sets the shim of Trade.get_OtherUserAccepted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserAcceptedSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserAccepted(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserCancelledGet">
            <summary>Sets the shim of Trade.get_OtherUserCancelled()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserCancelledSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserCancelled(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.Poll">
            <summary>Sets the shim of Trade.Poll()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.RemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.RemoveItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.RemoveItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.RemoveItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.RetryWebRequestOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of Trade.RetryWebRequest(Func`1&lt;!!0&gt; webEvent)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.SendMessageString">
            <summary>Sets the shim of Trade.SendMessage(String msg)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.SetReadyBoolean">
            <summary>Sets the shim of Trade.SetReady(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.TradeStartedGet">
            <summary>Sets the shim of Trade.get_TradeStarted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.TradeStartedSetBoolean">
            <summary>Sets the shim of Trade.set_TradeStarted(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTradeManager">
            <summary>Shim type of SteamTrade.TradeManager</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.#ctor(SteamTrade.TradeManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTradeManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.CheckTradeTimeoutTrade">
            <summary>Sets the shim of TradeManager.CheckTradeTimeout(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.CreateTradeSteamIDSteamID">
            <summary>Sets the shim of TradeManager.CreateTrade(SteamID me, SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.IsTradeThreadRunningGet">
            <summary>Sets the shim of TradeManager.get_IsTradeThreadRunning()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.IsTradeThreadRunningSetBoolean">
            <summary>Sets the shim of TradeManager.set_IsTradeThreadRunning(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxActionGapSecGet">
            <summary>Sets the shim of TradeManager.get_MaxActionGapSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxActionGapSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxActionGapSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxTradeTimeSecGet">
            <summary>Sets the shim of TradeManager.get_MaxTradeTimeSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxTradeTimeSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxTradeTimeSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.SetTradeTimeLimitsInt32Int32Int32">
            <summary>Sets the shim of TradeManager.SetTradeTimeLimits(Int32 maxTradeTime, Int32 maxActionGap, Int32 pollingInterval)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.StartTradeThreadTrade">
            <summary>Sets the shim of TradeManager.StartTradeThread(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.StopTrade">
            <summary>Sets the shim of TradeManager.StopTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.TradePollingIntervalGet">
            <summary>Sets the shim of TradeManager.get_TradePollingInterval()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.TradePollingIntervalSetInt32">
            <summary>Sets the shim of TradeManager.set_TradePollingInterval(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances._CreateTradeb__27_0">
            <summary>Sets the shim of TradeManager.&lt;CreateTrade&gt;b__27_0()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.CheckTradeTimeoutTrade">
            <summary>Sets the shim of TradeManager.CheckTradeTimeout(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.ConstructorStringISteamWeb">
            <summary>Sets the shim of TradeManager.TradeManager(String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.CreateTradeSteamIDSteamID">
            <summary>Sets the shim of TradeManager.CreateTrade(SteamID me, SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.DebugErrorString">
            <summary>Sets the shim of TradeManager.DebugError(String output)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.DebugPrintString">
            <summary>Sets the shim of TradeManager.DebugPrint(String output)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.IsTradeThreadRunningGet">
            <summary>Sets the shim of TradeManager.get_IsTradeThreadRunning()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.IsTradeThreadRunningSetBoolean">
            <summary>Sets the shim of TradeManager.set_IsTradeThreadRunning(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxActionGapSecGet">
            <summary>Sets the shim of TradeManager.get_MaxActionGapSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxActionGapSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxActionGapSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxTradeTimeSecGet">
            <summary>Sets the shim of TradeManager.get_MaxTradeTimeSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxTradeTimeSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxTradeTimeSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.SetTradeTimeLimitsInt32Int32Int32">
            <summary>Sets the shim of TradeManager.SetTradeTimeLimits(Int32 maxTradeTime, Int32 maxActionGap, Int32 pollingInterval)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.StartTradeThreadTrade">
            <summary>Sets the shim of TradeManager.StartTradeThread(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.StopTrade">
            <summary>Sets the shim of TradeManager.StopTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.TradePollingIntervalGet">
            <summary>Sets the shim of TradeManager.get_TradePollingInterval()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.TradePollingIntervalSetInt32">
            <summary>Sets the shim of TradeManager.set_TradePollingInterval(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager._CreateTradeb__27_0">
            <summary>Sets the shim of TradeManager.&lt;CreateTrade&gt;b__27_0()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTransferParameters">
            <summary>Shim type of SteamTrade.TransferParameters</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.#ctor(SteamTrade.TransferParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTransferParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.AuthGet">
            <summary>Sets the shim of TransferParameters.get_Auth()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.AuthSetString">
            <summary>Sets the shim of TransferParameters.set_Auth(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.RememberLoginGet">
            <summary>Sets the shim of TransferParameters.get_RememberLogin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.RememberLoginSetBoolean">
            <summary>Sets the shim of TransferParameters.set_RememberLogin(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.SteamidGet">
            <summary>Sets the shim of TransferParameters.get_Steamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.SteamidSetString">
            <summary>Sets the shim of TransferParameters.set_Steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenGet">
            <summary>Sets the shim of TransferParameters.get_Token()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenSecureGet">
            <summary>Sets the shim of TransferParameters.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenSecureSetString">
            <summary>Sets the shim of TransferParameters.set_TokenSecure(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenSetString">
            <summary>Sets the shim of TransferParameters.set_Token(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.WebcookieGet">
            <summary>Sets the shim of TransferParameters.get_Webcookie()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.WebcookieSetString">
            <summary>Sets the shim of TransferParameters.set_Webcookie(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AuthGet">
            <summary>Sets the shim of TransferParameters.get_Auth()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AuthSetString">
            <summary>Sets the shim of TransferParameters.set_Auth(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.Constructor">
            <summary>Sets the shim of TransferParameters.TransferParameters()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.RememberLoginGet">
            <summary>Sets the shim of TransferParameters.get_RememberLogin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.RememberLoginSetBoolean">
            <summary>Sets the shim of TransferParameters.set_RememberLogin(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.SteamidGet">
            <summary>Sets the shim of TransferParameters.get_Steamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.SteamidSetString">
            <summary>Sets the shim of TransferParameters.set_Steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenGet">
            <summary>Sets the shim of TransferParameters.get_Token()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenSecureGet">
            <summary>Sets the shim of TransferParameters.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenSecureSetString">
            <summary>Sets the shim of TransferParameters.set_TokenSecure(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenSetString">
            <summary>Sets the shim of TransferParameters.set_Token(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.WebcookieGet">
            <summary>Sets the shim of TransferParameters.get_Webcookie()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.WebcookieSetString">
            <summary>Sets the shim of TransferParameters.set_Webcookie(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubGenericInventory">
            <summary>Stub type of SteamTrade.GenericInventory</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory.#ctor(SteamTrade.ISteamWeb,System.UInt64,System.UInt32,System.UInt32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory.InitializeStub">
            <summary>Initializes a new instance of type StubGenericInventory</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubGetRsaKey">
            <summary>Stub type of SteamTrade.GetRsaKey</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGetRsaKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGetRsaKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGetRsaKey.InitializeStub">
            <summary>Initializes a new instance of type StubGetRsaKey</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGetRsaKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGetRsaKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubItemDescription">
            <summary>Stub type of SteamTrade.ItemDescription</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubItemDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubItemDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubItemDescription.InitializeStub">
            <summary>Initializes a new instance of type StubItemDescription</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubItemDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubItemDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSteamResult">
            <summary>Stub type of SteamTrade.SteamResult</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamResult.InitializeStub">
            <summary>Initializes a new instance of type StubSteamResult</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSteamWeb">
            <summary>Stub type of SteamTrade.SteamWeb</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWeb.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWeb.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWeb.InitializeStub">
            <summary>Initializes a new instance of type StubSteamWeb</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWeb.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWeb.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSteamWebLoginException">
            <summary>Stub type of SteamTrade.SteamWebLoginException</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.#ctor(SteamTrade.SteamResult)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSteamWebLoginException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSteamWebLoginException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.InitializeStub">
            <summary>Initializes a new instance of type StubSteamWebLoginException</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubTag">
            <summary>Stub type of SteamTrade.Tag</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTag.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTag.InitializeStub">
            <summary>Initializes a new instance of type StubTag</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubTradeManager">
            <summary>Stub type of SteamTrade.TradeManager</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTradeManager.#ctor(System.String,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTradeManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTradeManager.InitializeStub">
            <summary>Initializes a new instance of type StubTradeManager</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTradeManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTradeManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubTransferParameters">
            <summary>Stub type of SteamTrade.TransferParameters</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTransferParameters.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTransferParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTransferParameters.InitializeStub">
            <summary>Initializes a new instance of type StubTransferParameters</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTransferParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTransferParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1">
            <summary>Shim type of SteamTrade.TradeOffer.ApiResponse`1</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.#ctor(SteamTrade.TradeOffer.ApiResponse{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.AllInstances.ResponseGet">
            <summary>Sets the shim of ApiResponse`1.get_Response()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.AllInstances.ResponseSetT0">
            <summary>Sets the shim of ApiResponse`1.set_Response(!0 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.Constructor">
            <summary>Sets the shim of ApiResponse`1.ApiResponse`1()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.ResponseGet">
            <summary>Sets the shim of ApiResponse`1.get_Response()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.ResponseSetT0">
            <summary>Sets the shim of ApiResponse`1.set_Response(!0 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimAssetDescription">
            <summary>Shim type of SteamTrade.TradeOffer.AssetDescription</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.#ctor(SteamTrade.TradeOffer.AssetDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.AppIdGet">
            <summary>Sets the shim of AssetDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.AppIdSetInt32">
            <summary>Sets the shim of AssetDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.BackgroundColorGet">
            <summary>Sets the shim of AssetDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.BackgroundColorSetString">
            <summary>Sets the shim of AssetDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.ClassIdGet">
            <summary>Sets the shim of AssetDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.ClassIdSetString">
            <summary>Sets the shim of AssetDescription.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.DescriptionsGet">
            <summary>Sets the shim of AssetDescription.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.DescriptionsSetListOfDescription">
            <summary>Sets the shim of AssetDescription.set_Descriptions(List`1&lt;Description&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlGet">
            <summary>Sets the shim of AssetDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlLargeGet">
            <summary>Sets the shim of AssetDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlLargeSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.InstanceIdGet">
            <summary>Sets the shim of AssetDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.InstanceIdSetString">
            <summary>Sets the shim of AssetDescription.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsCurrencyGet">
            <summary>Sets the shim of AssetDescription.get_IsCurrency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsCurrencySetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsCurrency(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsTradableGet">
            <summary>Sets the shim of AssetDescription.get_IsTradable()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsTradableSetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsTradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketHashNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketHashNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameColorGet">
            <summary>Sets the shim of AssetDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameColorSetString">
            <summary>Sets the shim of AssetDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameGet">
            <summary>Sets the shim of AssetDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameSetString">
            <summary>Sets the shim of AssetDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.OwnerActionsGet">
            <summary>Sets the shim of AssetDescription.get_OwnerActions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.OwnerActionsSetListOfOwnerAction">
            <summary>Sets the shim of AssetDescription.set_OwnerActions(List`1&lt;OwnerAction&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.TypeGet">
            <summary>Sets the shim of AssetDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.TypeSetString">
            <summary>Sets the shim of AssetDescription.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AppIdGet">
            <summary>Sets the shim of AssetDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AppIdSetInt32">
            <summary>Sets the shim of AssetDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BackgroundColorGet">
            <summary>Sets the shim of AssetDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BackgroundColorSetString">
            <summary>Sets the shim of AssetDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.ClassIdGet">
            <summary>Sets the shim of AssetDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.ClassIdSetString">
            <summary>Sets the shim of AssetDescription.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.Constructor">
            <summary>Sets the shim of AssetDescription.AssetDescription()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.DescriptionsGet">
            <summary>Sets the shim of AssetDescription.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.DescriptionsSetListOfDescription">
            <summary>Sets the shim of AssetDescription.set_Descriptions(List`1&lt;Description&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlGet">
            <summary>Sets the shim of AssetDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlLargeGet">
            <summary>Sets the shim of AssetDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlLargeSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.InstanceIdGet">
            <summary>Sets the shim of AssetDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.InstanceIdSetString">
            <summary>Sets the shim of AssetDescription.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsCurrencyGet">
            <summary>Sets the shim of AssetDescription.get_IsCurrency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsCurrencySetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsCurrency(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsTradableGet">
            <summary>Sets the shim of AssetDescription.get_IsTradable()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsTradableSetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsTradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketHashNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketHashNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameColorGet">
            <summary>Sets the shim of AssetDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameColorSetString">
            <summary>Sets the shim of AssetDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameGet">
            <summary>Sets the shim of AssetDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameSetString">
            <summary>Sets the shim of AssetDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.OwnerActionsGet">
            <summary>Sets the shim of AssetDescription.get_OwnerActions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.OwnerActionsSetListOfOwnerAction">
            <summary>Sets the shim of AssetDescription.set_OwnerActions(List`1&lt;OwnerAction&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.TypeGet">
            <summary>Sets the shim of AssetDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.TypeSetString">
            <summary>Sets the shim of AssetDescription.set_Type(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimCEconAsset">
            <summary>Shim type of SteamTrade.TradeOffer.CEconAsset</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.#ctor(SteamTrade.TradeOffer.CEconAsset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AmountGet">
            <summary>Sets the shim of CEconAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AmountSetString">
            <summary>Sets the shim of CEconAsset.set_Amount(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AppIdGet">
            <summary>Sets the shim of CEconAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AppIdSetString">
            <summary>Sets the shim of CEconAsset.set_AppId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AssetIdGet">
            <summary>Sets the shim of CEconAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AssetIdSetString">
            <summary>Sets the shim of CEconAsset.set_AssetId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ClassIdGet">
            <summary>Sets the shim of CEconAsset.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ClassIdSetString">
            <summary>Sets the shim of CEconAsset.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ContextIdGet">
            <summary>Sets the shim of CEconAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ContextIdSetString">
            <summary>Sets the shim of CEconAsset.set_ContextId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.InstanceIdGet">
            <summary>Sets the shim of CEconAsset.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.InstanceIdSetString">
            <summary>Sets the shim of CEconAsset.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.IsMissingGet">
            <summary>Sets the shim of CEconAsset.get_IsMissing()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.IsMissingSetBoolean">
            <summary>Sets the shim of CEconAsset.set_IsMissing(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AmountGet">
            <summary>Sets the shim of CEconAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AmountSetString">
            <summary>Sets the shim of CEconAsset.set_Amount(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AppIdGet">
            <summary>Sets the shim of CEconAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AppIdSetString">
            <summary>Sets the shim of CEconAsset.set_AppId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AssetIdGet">
            <summary>Sets the shim of CEconAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AssetIdSetString">
            <summary>Sets the shim of CEconAsset.set_AssetId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ClassIdGet">
            <summary>Sets the shim of CEconAsset.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ClassIdSetString">
            <summary>Sets the shim of CEconAsset.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.Constructor">
            <summary>Sets the shim of CEconAsset.CEconAsset()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ContextIdGet">
            <summary>Sets the shim of CEconAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ContextIdSetString">
            <summary>Sets the shim of CEconAsset.set_ContextId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.InstanceIdGet">
            <summary>Sets the shim of CEconAsset.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.InstanceIdSetString">
            <summary>Sets the shim of CEconAsset.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.IsMissingGet">
            <summary>Sets the shim of CEconAsset.get_IsMissing()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.IsMissingSetBoolean">
            <summary>Sets the shim of CEconAsset.set_IsMissing(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimDescription">
            <summary>Shim type of SteamTrade.TradeOffer.Description</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.#ctor(SteamTrade.TradeOffer.Description)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.TypeGet">
            <summary>Sets the shim of Description.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.TypeSetString">
            <summary>Sets the shim of Description.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.ValueGet">
            <summary>Sets the shim of Description.get_Value()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.ValueSetString">
            <summary>Sets the shim of Description.set_Value(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.Constructor">
            <summary>Sets the shim of Description.Description()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.TypeGet">
            <summary>Sets the shim of Description.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.TypeSetString">
            <summary>Sets the shim of Description.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.ValueGet">
            <summary>Sets the shim of Description.get_Value()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.ValueSetString">
            <summary>Sets the shim of Description.set_Value(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimEscrow">
            <summary>Shim type of SteamTrade.TradeOffer.Escrow</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimEscrow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimEscrow.#ctor(SteamTrade.TradeOffer.Escrow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimEscrow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimEscrow.AllInstances.EscrowEndDurationSecondsGet">
            <summary>Sets the shim of Escrow.get_EscrowEndDurationSeconds()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimEscrow.AllInstances.EscrowEndDurationSecondsSetInt32">
            <summary>Sets the shim of Escrow.set_EscrowEndDurationSeconds(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimEscrow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimEscrow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimEscrow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimEscrow.Constructor">
            <summary>Sets the shim of Escrow.Escrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimEscrow.EscrowEndDurationSecondsGet">
            <summary>Sets the shim of Escrow.get_EscrowEndDurationSeconds()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimEscrow.EscrowEndDurationSecondsSetInt32">
            <summary>Sets the shim of Escrow.set_EscrowEndDurationSeconds(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions">
            <summary>Shim type of SteamTrade.TradeOffer.HtmlAgilityPackExtensions</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.GetElementsByClassNameHtmlNodeString">
            <summary>Sets the shim of HtmlAgilityPackExtensions.GetElementsByClassName(HtmlNode htmlNode, String className)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService">
            <summary>Shim type of SteamTrade.TradeOffer.LongRunningTradeOfferPollingService</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.#ctor(SteamTrade.TradeOffer.LongRunningTradeOfferPollingService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AddSteamAccountStringTradeOfferWebAPI">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.AddSteamAccount(String username, TradeOfferWebAPI tradeOfferWebApi)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances.AddSteamAccountStringTradeOfferWebAPI">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.AddSteamAccount(String username, TradeOfferWebAPI tradeOfferWebApi)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances.HandleLongPollOffersResponseITradeOfferWebAPIString">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String botUsername)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances.NewOfferReceivedAddEventHandlerOfNewOfferReceivedEventArgs">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.add_NewOfferReceived(EventHandler`1&lt;NewOfferReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances.NewOfferReceivedRemoveEventHandlerOfNewOfferReceivedEventArgs">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.remove_NewOfferReceived(EventHandler`1&lt;NewOfferReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances.RemoveSteamAccountString">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.RemoveSteamAccount(String username)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.AllInstances._HandleLongPollb__5_0Offer">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.&lt;HandleLongPoll&gt;b__5_0(Offer o)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.Bind(SteamTrade.TradeOffer.ITradeOfferStatusPollingService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.Constructor">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.LongRunningTradeOfferPollingService()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.HandleLongPollOffersResponseITradeOfferWebAPIString">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String botUsername)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.NewOfferReceivedAddEventHandlerOfNewOfferReceivedEventArgs">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.add_NewOfferReceived(EventHandler`1&lt;NewOfferReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.NewOfferReceivedRemoveEventHandlerOfNewOfferReceivedEventArgs">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.remove_NewOfferReceived(EventHandler`1&lt;NewOfferReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService.RemoveSteamAccountString">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.RemoveSteamAccount(String username)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimLongRunningTradeOfferPollingService._HandleLongPollb__5_0Offer">
            <summary>Sets the shim of LongRunningTradeOfferPollingService.&lt;HandleLongPoll&gt;b__5_0(Offer o)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs">
            <summary>Shim type of SteamTrade.TradeOffer.NewOfferReceivedEventArgs</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.#ctor(SteamTrade.TradeOffer.NewOfferReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.BotUsernameGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_BotUsername()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.BotUsernameSetString">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_BotUsername(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.OfferGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.OfferSetOffer">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_Offer(Offer value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.OffersResponseGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_OffersResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.OffersResponseSetOffersResponse">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_OffersResponse(OffersResponse value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.TradeOfferWebApiGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_TradeOfferWebApi()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.AllInstances.TradeOfferWebApiSetITradeOfferWebAPI">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_TradeOfferWebApi(ITradeOfferWebAPI value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.BotUsernameGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_BotUsername()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.BotUsernameSetString">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_BotUsername(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.Constructor">
            <summary>Sets the shim of NewOfferReceivedEventArgs.NewOfferReceivedEventArgs()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.OfferGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.OfferSetOffer">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_Offer(Offer value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.OffersResponseGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_OffersResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.OffersResponseSetOffersResponse">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_OffersResponse(OffersResponse value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.TradeOfferWebApiGet">
            <summary>Sets the shim of NewOfferReceivedEventArgs.get_TradeOfferWebApi()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewOfferReceivedEventArgs.TradeOfferWebApiSetITradeOfferWebAPI">
            <summary>Sets the shim of NewOfferReceivedEventArgs.set_TradeOfferWebApi(ITradeOfferWebAPI value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse">
            <summary>Shim type of SteamTrade.TradeOffer.NewTradeOfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.#ctor(SteamTrade.TradeOffer.NewTradeOfferResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsEmailConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsEmailConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsEmailConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsEmailConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsMobileConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsMobileConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsMobileConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsMobileConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeErrorGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeErrorSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeOfferIdGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeOfferIdSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeOfferId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.Constructor">
            <summary>Sets the shim of NewTradeOfferResponse.NewTradeOfferResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsEmailConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsEmailConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsEmailConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsEmailConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsMobileConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsMobileConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsMobileConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsMobileConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeErrorGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeErrorSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeOfferIdGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeOfferIdSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeOfferId(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffer">
            <summary>Shim type of SteamTrade.TradeOffer.Offer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.#ctor(SteamTrade.TradeOffer.Offer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AccountIdOtherGet">
            <summary>Sets the shim of Offer.get_AccountIdOther()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AccountIdOtherSetInt32">
            <summary>Sets the shim of Offer.set_AccountIdOther(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.AccountIdOtherGet">
            <summary>Sets the shim of Offer.get_AccountIdOther()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.AccountIdOtherSetInt32">
            <summary>Sets the shim of Offer.set_AccountIdOther(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ConfirmationMethodGet">
            <summary>Sets the shim of Offer.get_ConfirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ConfirmationMethodSetTradeOfferConfirmationMethod">
            <summary>Sets the shim of Offer.set_ConfirmationMethod(TradeOfferConfirmationMethod value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.EscrowEndDateGet">
            <summary>Sets the shim of Offer.get_EscrowEndDate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.EscrowEndDateSetInt32">
            <summary>Sets the shim of Offer.set_EscrowEndDate(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ExpirationTimeGet">
            <summary>Sets the shim of Offer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ExpirationTimeSetInt32">
            <summary>Sets the shim of Offer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.FromRealTimeTradeGet">
            <summary>Sets the shim of Offer.get_FromRealTimeTrade()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.FromRealTimeTradeSetBoolean">
            <summary>Sets the shim of Offer.set_FromRealTimeTrade(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.IsOurOfferGet">
            <summary>Sets the shim of Offer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.IsOurOfferSetBoolean">
            <summary>Sets the shim of Offer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToGiveGet">
            <summary>Sets the shim of Offer.get_ItemsToGive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToGiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToGive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToReceiveGet">
            <summary>Sets the shim of Offer.get_ItemsToReceive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToReceiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToReceive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.MessageGet">
            <summary>Sets the shim of Offer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.MessageSetString">
            <summary>Sets the shim of Offer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeCreatedGet">
            <summary>Sets the shim of Offer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeCreatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeUpdatedGet">
            <summary>Sets the shim of Offer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeUpdatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferIdGet">
            <summary>Sets the shim of Offer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferIdSetString">
            <summary>Sets the shim of Offer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferStateGet">
            <summary>Sets the shim of Offer.get_TradeOfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferStateSetTradeOfferState">
            <summary>Sets the shim of Offer.set_TradeOfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.confirmationMethodGet">
            <summary>Sets the shim of Offer.get_confirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.confirmationMethodSetInt32">
            <summary>Sets the shim of Offer.set_confirmationMethod(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ConfirmationMethodGet">
            <summary>Sets the shim of Offer.get_ConfirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ConfirmationMethodSetTradeOfferConfirmationMethod">
            <summary>Sets the shim of Offer.set_ConfirmationMethod(TradeOfferConfirmationMethod value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.Constructor">
            <summary>Sets the shim of Offer.Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.EscrowEndDateGet">
            <summary>Sets the shim of Offer.get_EscrowEndDate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.EscrowEndDateSetInt32">
            <summary>Sets the shim of Offer.set_EscrowEndDate(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ExpirationTimeGet">
            <summary>Sets the shim of Offer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ExpirationTimeSetInt32">
            <summary>Sets the shim of Offer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.FromRealTimeTradeGet">
            <summary>Sets the shim of Offer.get_FromRealTimeTrade()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.FromRealTimeTradeSetBoolean">
            <summary>Sets the shim of Offer.set_FromRealTimeTrade(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.IsOurOfferGet">
            <summary>Sets the shim of Offer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.IsOurOfferSetBoolean">
            <summary>Sets the shim of Offer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToGiveGet">
            <summary>Sets the shim of Offer.get_ItemsToGive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToGiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToGive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToReceiveGet">
            <summary>Sets the shim of Offer.get_ItemsToReceive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToReceiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToReceive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.MessageGet">
            <summary>Sets the shim of Offer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.MessageSetString">
            <summary>Sets the shim of Offer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeCreatedGet">
            <summary>Sets the shim of Offer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeCreatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeUpdatedGet">
            <summary>Sets the shim of Offer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeUpdatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferIdGet">
            <summary>Sets the shim of Offer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferIdSetString">
            <summary>Sets the shim of Offer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferStateGet">
            <summary>Sets the shim of Offer.get_TradeOfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferStateSetTradeOfferState">
            <summary>Sets the shim of Offer.set_TradeOfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.confirmationMethodGet">
            <summary>Sets the shim of Offer.get_confirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.confirmationMethodSetInt32">
            <summary>Sets the shim of Offer.set_confirmationMethod(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken">
            <summary>Shim type of SteamTrade.TradeOffer.OfferAccessToken</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.#ctor(SteamTrade.TradeOffer.OfferAccessToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.AllInstances.TradeOfferAccessTokenGet">
            <summary>Sets the shim of OfferAccessToken.get_TradeOfferAccessToken()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.AllInstances.TradeOfferAccessTokenSetString">
            <summary>Sets the shim of OfferAccessToken.set_TradeOfferAccessToken(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.Constructor">
            <summary>Sets the shim of OfferAccessToken.OfferAccessToken()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.TradeOfferAccessTokenGet">
            <summary>Sets the shim of OfferAccessToken.get_TradeOfferAccessToken()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.TradeOfferAccessTokenSetString">
            <summary>Sets the shim of OfferAccessToken.set_TradeOfferAccessToken(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferResponse">
            <summary>Shim type of SteamTrade.TradeOffer.OfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.#ctor(SteamTrade.TradeOffer.OfferResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.DescriptionsGet">
            <summary>Sets the shim of OfferResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OfferResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.OfferGet">
            <summary>Sets the shim of OfferResponse.get_Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.OfferSetOffer">
            <summary>Sets the shim of OfferResponse.set_Offer(Offer value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.Constructor">
            <summary>Sets the shim of OfferResponse.OfferResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.DescriptionsGet">
            <summary>Sets the shim of OfferResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OfferResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.OfferGet">
            <summary>Sets the shim of OfferResponse.get_Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.OfferSetOffer">
            <summary>Sets the shim of OfferResponse.set_Offer(Offer value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferSession">
            <summary>Shim type of SteamTrade.TradeOffer.OfferSession</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.#ctor(SteamTrade.TradeOffer.OfferSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AcceptString">
            <summary>Sets the shim of OfferSession.Accept(String tradeOfferId)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.AcceptString">
            <summary>Sets the shim of OfferSession.Accept(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.CancelString">
            <summary>Sets the shim of OfferSession.Cancel(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.CounterOfferStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.CounterOffer(String message, SteamID otherSteamId, TradeStatus status, String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.CounterOfferStringSteamIDTradeOfferTradeStatusStringOutString">
            <summary>Sets the shim of OfferSession.CounterOffer(String message, SteamID otherSteamId, TradeStatus status, String&amp; newTradeOfferId, String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.DeclineString">
            <summary>Sets the shim of OfferSession.Decline(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.JsonSerializerSettingsGet">
            <summary>Sets the shim of OfferSession.get_JsonSerializerSettings()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.JsonSerializerSettingsSetJsonSerializerSettings">
            <summary>Sets the shim of OfferSession.set_JsonSerializerSettings(JsonSerializerSettings value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.RequestStringNameValueCollectionString">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.RequestStringNameValueCollectionStringStringStringOut">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer, String tradeOfferId, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferStringSteamIDTradeOfferTradeStatus">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferStringSteamIDTradeOfferTradeStatusStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusStringStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.CancelString">
            <summary>Sets the shim of OfferSession.Cancel(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.ConstructorITradeOfferWebAPIISteamWeb">
            <summary>Sets the shim of OfferSession.OfferSession(ITradeOfferWebAPI webApi, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.CounterOfferStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.CounterOffer(String message, SteamID otherSteamId, TradeStatus status, String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.DeclineString">
            <summary>Sets the shim of OfferSession.Decline(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.JsonSerializerSettingsGet">
            <summary>Sets the shim of OfferSession.get_JsonSerializerSettings()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.JsonSerializerSettingsSetJsonSerializerSettings">
            <summary>Sets the shim of OfferSession.set_JsonSerializerSettings(JsonSerializerSettings value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.RequestStringNameValueCollectionString">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.RequestStringNameValueCollectionStringStringStringOut">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer, String tradeOfferId, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferStringSteamIDTradeOfferTradeStatus">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferStringSteamIDTradeOfferTradeStatusStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusStringStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.TryParseHtmlTradeErrorStringStringOut">
            <summary>Sets the shim of OfferSession.TryParseHtmlTradeError(String response, String&amp; tradeError)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffersResponse">
            <summary>Shim type of SteamTrade.TradeOffer.OffersResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.#ctor(SteamTrade.TradeOffer.OffersResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.AllOffersGet">
            <summary>Sets the shim of OffersResponse.get_AllOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.DescriptionsGet">
            <summary>Sets the shim of OffersResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OffersResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersReceivedGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersReceived()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersReceivedSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersReceived(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersSentGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersSent()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersSentSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersSent(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllOffersGet">
            <summary>Sets the shim of OffersResponse.get_AllOffers()</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.Constructor">
            <summary>Sets the shim of OffersResponse.OffersResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.DescriptionsGet">
            <summary>Sets the shim of OffersResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OffersResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersReceivedGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersReceived()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersReceivedSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersReceived(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersSentGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersSent()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersSentSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersSent(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOwnerAction">
            <summary>Shim type of SteamTrade.TradeOffer.OwnerAction</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.#ctor(SteamTrade.TradeOffer.OwnerAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.LinkGet">
            <summary>Sets the shim of OwnerAction.get_Link()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.LinkSetString">
            <summary>Sets the shim of OwnerAction.set_Link(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.NameGet">
            <summary>Sets the shim of OwnerAction.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.NameSetString">
            <summary>Sets the shim of OwnerAction.set_Name(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.Constructor">
            <summary>Sets the shim of OwnerAction.OwnerAction()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.LinkGet">
            <summary>Sets the shim of OwnerAction.get_Link()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.LinkSetString">
            <summary>Sets the shim of OwnerAction.set_Link(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.NameGet">
            <summary>Sets the shim of OwnerAction.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.NameSetString">
            <summary>Sets the shim of OwnerAction.set_Name(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations">
            <summary>Shim type of SteamTrade.TradeOffer.TradeHoldDurations</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.#ctor(SteamTrade.TradeOffer.TradeHoldDurations)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances.BothEscrowGet">
            <summary>Sets the shim of TradeHoldDurations.get_BothEscrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances.BothEscrowSetEscrow">
            <summary>Sets the shim of TradeHoldDurations.set_BothEscrow(Escrow value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances.MyEscrowGet">
            <summary>Sets the shim of TradeHoldDurations.get_MyEscrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances.MyEscrowSetEscrow">
            <summary>Sets the shim of TradeHoldDurations.set_MyEscrow(Escrow value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances.TheirEscrowGet">
            <summary>Sets the shim of TradeHoldDurations.get_TheirEscrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.AllInstances.TheirEscrowSetEscrow">
            <summary>Sets the shim of TradeHoldDurations.set_TheirEscrow(Escrow value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.BothEscrowGet">
            <summary>Sets the shim of TradeHoldDurations.get_BothEscrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.BothEscrowSetEscrow">
            <summary>Sets the shim of TradeHoldDurations.set_BothEscrow(Escrow value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.Constructor">
            <summary>Sets the shim of TradeHoldDurations.TradeHoldDurations()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.MyEscrowGet">
            <summary>Sets the shim of TradeHoldDurations.get_MyEscrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.MyEscrowSetEscrow">
            <summary>Sets the shim of TradeHoldDurations.set_MyEscrow(Escrow value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.TheirEscrowGet">
            <summary>Sets the shim of TradeHoldDurations.get_TheirEscrow()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeHoldDurations.TheirEscrowSetEscrow">
            <summary>Sets the shim of TradeHoldDurations.set_TheirEscrow(Escrow value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.#ctor(SteamTrade.TradeOffer.TradeOffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Accept">
            <summary>Sets the shim of TradeOffer.Accept()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AcceptStringOut">
            <summary>Sets the shim of TradeOffer.Accept(String&amp; tradeId)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.Accept">
            <summary>Sets the shim of TradeOffer.Accept()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.AcceptStringOut">
            <summary>Sets the shim of TradeOffer.Accept(String&amp; tradeId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.Cancel">
            <summary>Sets the shim of TradeOffer.Cancel()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.CounterOfferStringOutString">
            <summary>Sets the shim of TradeOffer.CounterOffer(String&amp; newTradeOfferId, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.Decline">
            <summary>Sets the shim of TradeOffer.Decline()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ExpirationTimeGet">
            <summary>Sets the shim of TradeOffer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ExpirationTimeSetInt32">
            <summary>Sets the shim of TradeOffer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.IsFirstOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsFirstOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.IsOurOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.IsOurOfferSetBoolean">
            <summary>Sets the shim of TradeOffer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ItemsGet">
            <summary>Sets the shim of TradeOffer.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ItemsSetTradeOfferTradeStatus">
            <summary>Sets the shim of TradeOffer.set_Items(TradeStatus value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.MessageGet">
            <summary>Sets the shim of TradeOffer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.MessageSetString">
            <summary>Sets the shim of TradeOffer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.OfferStateGet">
            <summary>Sets the shim of TradeOffer.get_OfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.OfferStateSetTradeOfferState">
            <summary>Sets the shim of TradeOffer.set_OfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.PartnerSteamIdGet">
            <summary>Sets the shim of TradeOffer.get_PartnerSteamId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.PartnerSteamIdSetSteamID">
            <summary>Sets the shim of TradeOffer.set_PartnerSteamId(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendString">
            <summary>Sets the shim of TradeOffer.Send(String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendStringOutString">
            <summary>Sets the shim of TradeOffer.Send(String&amp; offerId, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendWithTokenStringOutStringString">
            <summary>Sets the shim of TradeOffer.SendWithToken(String&amp; offerId, String token, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendWithTokenStringString">
            <summary>Sets the shim of TradeOffer.SendWithToken(String token, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SessionGet">
            <summary>Sets the shim of TradeOffer.get_Session()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SessionSetOfferSession">
            <summary>Sets the shim of TradeOffer.set_Session(OfferSession value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeCreatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeCreatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeUpdatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeUpdatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TradeOfferIdGet">
            <summary>Sets the shim of TradeOffer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TradeOfferIdSetString">
            <summary>Sets the shim of TradeOffer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Cancel">
            <summary>Sets the shim of TradeOffer.Cancel()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ConstructorOfferSessionOffer">
            <summary>Sets the shim of TradeOffer.TradeOffer(OfferSession session, Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ConstructorOfferSessionSteamID">
            <summary>Sets the shim of TradeOffer.TradeOffer(OfferSession session, SteamID partnerSteamdId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Decline">
            <summary>Sets the shim of TradeOffer.Decline()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ExpirationTimeGet">
            <summary>Sets the shim of TradeOffer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ExpirationTimeSetInt32">
            <summary>Sets the shim of TradeOffer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.IsFirstOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsFirstOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.IsOurOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.IsOurOfferSetBoolean">
            <summary>Sets the shim of TradeOffer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ItemsGet">
            <summary>Sets the shim of TradeOffer.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ItemsSetTradeOfferTradeStatus">
            <summary>Sets the shim of TradeOffer.set_Items(TradeStatus value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.MessageGet">
            <summary>Sets the shim of TradeOffer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.MessageSetString">
            <summary>Sets the shim of TradeOffer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.OfferStateGet">
            <summary>Sets the shim of TradeOffer.get_OfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.OfferStateSetTradeOfferState">
            <summary>Sets the shim of TradeOffer.set_OfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.PartnerSteamIdGet">
            <summary>Sets the shim of TradeOffer.get_PartnerSteamId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.PartnerSteamIdSetSteamID">
            <summary>Sets the shim of TradeOffer.set_PartnerSteamId(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SendString">
            <summary>Sets the shim of TradeOffer.Send(String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SendWithTokenStringString">
            <summary>Sets the shim of TradeOffer.SendWithToken(String token, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SessionGet">
            <summary>Sets the shim of TradeOffer.get_Session()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SessionSetOfferSession">
            <summary>Sets the shim of TradeOffer.set_Session(OfferSession value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeAssetsConverter</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeAssetsConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances.CanConvertType">
            <summary>Sets the shim of TradeAssetsConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.CanConvertType">
            <summary>Sets the shim of TradeAssetsConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.Constructor">
            <summary>Sets the shim of TradeAssetsConverter.TradeAssetsConverter()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatus</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.GetMyItems">
            <summary>Sets the shim of TradeStatus.GetMyItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.GetTheirItems">
            <summary>Sets the shim of TradeStatus.GetTheirItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.MyOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.MyOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_MyOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.NewVersionGet">
            <summary>Sets the shim of TradeStatus.get_NewVersion()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.NewVersionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_NewVersion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.ShouldUpdateBoolean">
            <summary>Sets the shim of TradeStatus.ShouldUpdate(Boolean check)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TheirOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_TheirOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TheirOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_TheirOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetMyCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetMyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetTheirCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetTheirItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.VersionGet">
            <summary>Sets the shim of TradeStatus.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.VersionSetInt32">
            <summary>Sets the shim of TradeStatus.set_Version(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.Constructor">
            <summary>Sets the shim of TradeStatus.TradeStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.ConstructorListOfTradeStatusUserTradeOfferTradeAssetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatus.TradeStatus(List`1&lt;TradeAsset&gt; myItems, List`1&lt;TradeAsset&gt; theirItems)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.GetMyItems">
            <summary>Sets the shim of TradeStatus.GetMyItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.GetTheirItems">
            <summary>Sets the shim of TradeStatus.GetTheirItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.MyOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.MyOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_MyOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.NewVersionGet">
            <summary>Sets the shim of TradeStatus.get_NewVersion()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.NewVersionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_NewVersion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.ShouldUpdateBoolean">
            <summary>Sets the shim of TradeStatus.ShouldUpdate(Boolean check)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TheirOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_TheirOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TheirOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_TheirOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetMyCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetMyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetTheirCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetTheirItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.VersionGet">
            <summary>Sets the shim of TradeStatus.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.VersionSetInt32">
            <summary>Sets the shim of TradeStatus.set_Version(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatusUser</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatusUser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AddCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AddItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddItem(TradeAsset asset)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AddCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AddItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AssetsGet">
            <summary>Sets the shim of TradeStatusUser.get_Assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AssetsSetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Assets(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.ContainsItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.ContainsItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.CurrencyGet">
            <summary>Sets the shim of TradeStatusUser.get_Currency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.CurrencySetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Currency(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.IsReadyGet">
            <summary>Sets the shim of TradeStatusUser.get_IsReady()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.IsReadySetBoolean">
            <summary>Sets the shim of TradeStatusUser.set_IsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.RemoveCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.RemoveItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AssetsGet">
            <summary>Sets the shim of TradeStatusUser.get_Assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AssetsSetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Assets(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.Constructor">
            <summary>Sets the shim of TradeStatusUser.TradeStatusUser()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ContainsItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.ContainsItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.CurrencyGet">
            <summary>Sets the shim of TradeStatusUser.get_Currency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.CurrencySetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Currency(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.IsReadyGet">
            <summary>Sets the shim of TradeStatusUser.get_IsReady()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.IsReadySetBoolean">
            <summary>Sets the shim of TradeStatusUser.set_IsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.RemoveCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.RemoveItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveItem(TradeAsset asset)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatusUser+TradeAsset</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatusUser.TradeAsset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AmountGet">
            <summary>Sets the shim of TradeAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AmountSetInt64">
            <summary>Sets the shim of TradeAsset.set_Amount(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AppIdGet">
            <summary>Sets the shim of TradeAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AppIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AppId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AssetIdGet">
            <summary>Sets the shim of TradeAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AssetIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AssetId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ContextIdGet">
            <summary>Sets the shim of TradeAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ContextIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_ContextId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CreateCurrencyAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateCurrencyAsset(Int64 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CreateItemAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateItemAsset(Int64 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CurrencyIdGet">
            <summary>Sets the shim of TradeAsset.get_CurrencyId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CurrencyIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_CurrencyId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.EqualsTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeAsset.Equals(TradeAsset other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ShouldSerializeAssetId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeAssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ShouldSerializeCurrencyId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeCurrencyId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AmountGet">
            <summary>Sets the shim of TradeAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AmountSetInt64">
            <summary>Sets the shim of TradeAsset.set_Amount(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AppIdGet">
            <summary>Sets the shim of TradeAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AppIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AppId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AssetIdGet">
            <summary>Sets the shim of TradeAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AssetIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AssetId(Int64 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.Bind(System.IEquatable{SteamTrade.TradeOffer.TradeOffer.TradeStatusUser.TradeAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.Constructor">
            <summary>Sets the shim of TradeAsset.TradeAsset()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ContextIdGet">
            <summary>Sets the shim of TradeAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ContextIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_ContextId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CreateCurrencyAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateCurrencyAsset(Int64 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CreateItemAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateItemAsset(Int64 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CurrencyIdGet">
            <summary>Sets the shim of TradeAsset.get_CurrencyId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CurrencyIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_CurrencyId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.EqualsTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeAsset.Equals(TradeAsset other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ShouldSerializeAssetId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeAssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ShouldSerializeCurrencyId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeCurrencyId()</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatusUser+ValueStringConverter</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatusUser.ValueStringConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances.CanConvertType">
            <summary>Sets the shim of ValueStringConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.CanConvertType">
            <summary>Sets the shim of ValueStringConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.Constructor">
            <summary>Sets the shim of ValueStringConverter.ValueStringConverter()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeCreatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeCreatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeUpdatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeUpdatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TradeOfferIdGet">
            <summary>Sets the shim of TradeOffer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TradeOfferIdSetString">
            <summary>Sets the shim of TradeOffer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferAcceptResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.#ctor(SteamTrade.TradeOffer.TradeOfferAcceptResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AcceptedGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_Accepted()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AcceptedSetBoolean">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_Accepted(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.AcceptedGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_Accepted()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.AcceptedSetBoolean">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_Accepted(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeErrorGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeErrorSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeIdGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeIdSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.Constructor">
            <summary>Sets the shim of TradeOfferAcceptResponse.TradeOfferAcceptResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeErrorGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeErrorSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeIdGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeIdSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeId(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferManager</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.#ctor(SteamTrade.TradeOffer.TradeOfferManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AddTradeOffersToQueueOffersResponse">
            <summary>Sets the shim of TradeOfferManager.AddTradeOffersToQueue(OffersResponse offers)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.AddTradeOffersToQueueOffersResponse">
            <summary>Sets the shim of TradeOfferManager.AddTradeOffersToQueue(OffersResponse offers)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.EnqueueUpdatedOffers">
            <summary>Sets the shim of TradeOfferManager.EnqueueUpdatedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.GetUnixTimeStampDateTime">
            <summary>Sets the shim of TradeOfferManager.GetUnixTimeStamp(DateTime dateTime)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.HandleNextPendingTradeOfferUpdate">
            <summary>Sets the shim of TradeOfferManager.HandleNextPendingTradeOfferUpdate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.HandleTradeOfferUpdateOffer">
            <summary>Sets the shim of TradeOfferManager.HandleTradeOfferUpdate(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.IsOfferValidOffer">
            <summary>Sets the shim of TradeOfferManager.IsOfferValid(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.LastTimeCheckedOffersGet">
            <summary>Sets the shim of TradeOfferManager.get_LastTimeCheckedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.LastTimeCheckedOffersSetDateTime">
            <summary>Sets the shim of TradeOfferManager.set_LastTimeCheckedOffers(DateTime value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.NewOfferSteamID">
            <summary>Sets the shim of TradeOfferManager.NewOffer(SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.OnTradeOfferUpdatedAddTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.add_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.OnTradeOfferUpdatedRemoveTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.remove_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.SendOfferToHandlerOffer">
            <summary>Sets the shim of TradeOfferManager.SendOfferToHandler(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.TryGetOfferStringTradeOfferOut">
            <summary>Sets the shim of TradeOfferManager.TryGetOffer(String offerId, TradeOffer&amp; tradeOffer)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.ConstructorStringISteamWeb">
            <summary>Sets the shim of TradeOfferManager.TradeOfferManager(String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.EnqueueUpdatedOffers">
            <summary>Sets the shim of TradeOfferManager.EnqueueUpdatedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.GetUnixTimeStampDateTime">
            <summary>Sets the shim of TradeOfferManager.GetUnixTimeStamp(DateTime dateTime)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.HandleNextPendingTradeOfferUpdate">
            <summary>Sets the shim of TradeOfferManager.HandleNextPendingTradeOfferUpdate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.HandleTradeOfferUpdateOffer">
            <summary>Sets the shim of TradeOfferManager.HandleTradeOfferUpdate(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.IsOfferValidOffer">
            <summary>Sets the shim of TradeOfferManager.IsOfferValid(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.LastTimeCheckedOffersGet">
            <summary>Sets the shim of TradeOfferManager.get_LastTimeCheckedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.LastTimeCheckedOffersSetDateTime">
            <summary>Sets the shim of TradeOfferManager.set_LastTimeCheckedOffers(DateTime value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.NewOfferSteamID">
            <summary>Sets the shim of TradeOfferManager.NewOffer(SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.OnTradeOfferUpdatedAddTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.add_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.OnTradeOfferUpdatedRemoveTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.remove_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.SendOfferToHandlerOffer">
            <summary>Sets the shim of TradeOfferManager.SendOfferToHandler(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.TryGetOfferStringTradeOfferOut">
            <summary>Sets the shim of TradeOfferManager.TryGetOffer(String offerId, TradeOffer&amp; tradeOffer)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferStatusPollingService</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.#ctor(SteamTrade.TradeOffer.TradeOfferStatusPollingService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.ActiveOnlyGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_ActiveOnly()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.ActiveOnlySetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_ActiveOnly(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.ActiveOnlyGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_ActiveOnly()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.ActiveOnlySetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_ActiveOnly(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.GetReceivedOffersGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_GetReceivedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.GetReceivedOffersSetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_GetReceivedOffers(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.GetSentOffersGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_GetSentOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.GetSentOffersSetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_GetSentOffers(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.HandleLongPollOffersResponseITradeOfferWebAPIString">
            <summary>Sets the shim of TradeOfferStatusPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String firstRequestItem2)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.HistoricalOnlyGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_HistoricalOnly()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.HistoricalOnlySetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_HistoricalOnly(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.PollStatusesAsync">
            <summary>Sets the shim of TradeOfferStatusPollingService.PollStatusesAsync()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.TradeOfferStatePollingIntervalGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_TradeOfferStatePollingInterval()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.TradeOfferStatePollingIntervalSetTimeSpan">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_TradeOfferStatePollingInterval(TimeSpan value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.AllInstances.WaitForStatusChangeAsyncITradeOfferWebAPIStringStringTradeOfferStateDateTimeCancellationToken">
            <summary>Sets the shim of TradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.Bind(SteamTrade.TradeOffer.ITradeOfferStatusPollingService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.Constructor">
            <summary>Sets the shim of TradeOfferStatusPollingService.TradeOfferStatusPollingService()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.GetReceivedOffersGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_GetReceivedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.GetReceivedOffersSetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_GetReceivedOffers(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.GetSentOffersGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_GetSentOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.GetSentOffersSetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_GetSentOffers(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.HandleLongPollOffersResponseITradeOfferWebAPIString">
            <summary>Sets the shim of TradeOfferStatusPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String firstRequestItem2)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.HistoricalOnlyGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_HistoricalOnly()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.HistoricalOnlySetBoolean">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_HistoricalOnly(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.PollStatusesAsync">
            <summary>Sets the shim of TradeOfferStatusPollingService.PollStatusesAsync()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.StaticConstructor">
            <summary>Sets the shim of TradeOfferStatusPollingService.TradeOfferStatusPollingService()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.ToUnixTimeSecondsDateTime">
            <summary>Sets the shim of TradeOfferStatusPollingService.ToUnixTimeSeconds(DateTime dateTime)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.TradeOfferStatePollingIntervalGet">
            <summary>Sets the shim of TradeOfferStatusPollingService.get_TradeOfferStatePollingInterval()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.TradeOfferStatePollingIntervalSetTimeSpan">
            <summary>Sets the shim of TradeOfferStatusPollingService.set_TradeOfferStatePollingInterval(TimeSpan value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferStatusPollingService.WaitForStatusChangeAsyncITradeOfferWebAPIStringStringTradeOfferStateDateTimeCancellationToken">
            <summary>Sets the shim of TradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferTimeoutException</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.#ctor(SteamTrade.TradeOffer.TradeOfferTimeoutException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferTimeoutException.Constructor">
            <summary>Sets the shim of TradeOfferTimeoutException.TradeOfferTimeoutException()</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferWeb</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.#ctor(SteamTrade.TradeOffer.TradeOfferWeb)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWeb.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWeb.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetEnglishSteamWeb">
            <summary>Sets the shim of TradeOfferWeb.GetEnglishSteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWeb.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeUrlsIfNull">
            <summary>Sets the shim of TradeOfferWeb.GetTradeUrlsIfNull()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetUnixTimestampDateTime">
            <summary>Sets the shim of TradeOfferWeb.GetUnixTimestamp(DateTime timeUpdated)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.ParseTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.ParseTradeOffer(String html)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.Bind(SteamTrade.TradeOffer.ITradeOfferWebAPI)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.ConstructorISteamWeb">
            <summary>Sets the shim of TradeOfferWeb.TradeOfferWeb(ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWeb.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWeb.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetEnglishSteamWeb">
            <summary>Sets the shim of TradeOfferWeb.GetEnglishSteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWeb.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeUrlsIfNull">
            <summary>Sets the shim of TradeOfferWeb.GetTradeUrlsIfNull()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetUnixTimestampDateTime">
            <summary>Sets the shim of TradeOfferWeb.GetUnixTimestamp(DateTime timeUpdated)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.ParseTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.ParseTradeOffer(String html)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferWebAPI</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.#ctor(SteamTrade.TradeOffer.TradeOfferWebAPI)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeHoldDurationsInt64String">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeHoldDurations(Int64 steamId64, String tradeOfferAccessToken)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.Bind(SteamTrade.TradeOffer.ITradeOfferWebAPI)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.BoolConverterBoolean">
            <summary>Sets the shim of TradeOfferWebAPI.BoolConverter(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.ConstructorStringISteamWeb">
            <summary>Sets the shim of TradeOfferWebAPI.TradeOfferWebAPI(String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeHoldDurationsInt64String">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeHoldDurations(Int64 steamId64, String tradeOfferAccessToken)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffersSummary</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.#ctor(SteamTrade.TradeOffer.TradeOffersSummary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewlyAcceptedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewlyAcceptedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewlyAcceptedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewlyAcceptedSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedSentCount(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.Constructor">
            <summary>Sets the shim of TradeOffersSummary.TradeOffersSummary()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewlyAcceptedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewlyAcceptedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewlyAcceptedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewlyAcceptedSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedSentCount(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubApiResponse`1">
            <summary>Stub type of SteamTrade.TradeOffer.ApiResponse`1</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.InitializeStub">
            <summary>Initializes a new instance of type StubApiResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubAssetDescription">
            <summary>Stub type of SteamTrade.TradeOffer.AssetDescription</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubAssetDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubAssetDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubAssetDescription.InitializeStub">
            <summary>Initializes a new instance of type StubAssetDescription</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubAssetDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubAssetDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubCEconAsset">
            <summary>Stub type of SteamTrade.TradeOffer.CEconAsset</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubCEconAsset.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubCEconAsset.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubCEconAsset.InitializeStub">
            <summary>Initializes a new instance of type StubCEconAsset</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubCEconAsset.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubCEconAsset.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubDescription">
            <summary>Stub type of SteamTrade.TradeOffer.Description</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubDescription.InitializeStub">
            <summary>Initializes a new instance of type StubDescription</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubEscrow">
            <summary>Stub type of SteamTrade.TradeOffer.Escrow</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubEscrow.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubEscrow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubEscrow.InitializeStub">
            <summary>Initializes a new instance of type StubEscrow</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubEscrow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubEscrow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubITradeOfferStatusPollingService">
            <summary>Stub type of SteamTrade.TradeOffer.ITradeOfferStatusPollingService</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferStatusPollingService.#ctor">
            <summary>Initializes a new instance of type StubITradeOfferStatusPollingService</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferStatusPollingService.SteamTrade#TradeOffer#ITradeOfferStatusPollingService#WaitForStatusChangeAsync(SteamTrade.TradeOffer.ITradeOfferWebAPI,System.String,System.String,SteamTrade.TradeOffer.TradeOfferState,System.DateTime,System.Threading.CancellationToken)">
            <summary>Sets the stub of ITradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferStatusPollingService.WaitForStatusChangeAsyncITradeOfferWebAPIStringStringTradeOfferStateDateTimeCancellationToken">
            <summary>Sets the stub of ITradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI">
            <summary>Stub type of SteamTrade.TradeOffer.ITradeOfferWebAPI</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.#ctor">
            <summary>Initializes a new instance of type StubITradeOfferWebAPI</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetAllTradeOffersStringString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetOfferStateString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetTradeOfferString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetTradeOffersSummaryUInt32">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetActiveTradeOffers(System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetAllTradeOffers(System.String,System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetOfferState(System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetTradeOffer(System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetTradeOffers(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetTradeOffersSummary(System.UInt32)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService">
            <summary>Stub type of SteamTrade.TradeOffer.LongRunningTradeOfferPollingService</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.HandleLongPoll(SteamTrade.TradeOffer.OffersResponse,SteamTrade.TradeOffer.ITradeOfferWebAPI,System.String)">
            <summary>Sets the stub of LongRunningTradeOfferPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String botUsername)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.HandleLongPollOffersResponseITradeOfferWebAPIString">
            <summary>Sets the stub of LongRunningTradeOfferPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String botUsername)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.InitializeStub">
            <summary>Initializes a new instance of type StubLongRunningTradeOfferPollingService</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.WaitForStatusChangeAsync(SteamTrade.TradeOffer.ITradeOfferWebAPI,System.String,System.String,SteamTrade.TradeOffer.TradeOfferState,System.DateTime,System.Threading.CancellationToken)">
            <summary>Sets the stub of TradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubLongRunningTradeOfferPollingService.WaitForStatusChangeAsyncITradeOfferWebAPIStringStringTradeOfferStateDateTimeCancellationToken">
            <summary>Sets the stub of TradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubNewOfferReceivedEventArgs">
            <summary>Stub type of SteamTrade.TradeOffer.NewOfferReceivedEventArgs</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubNewOfferReceivedEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewOfferReceivedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubNewOfferReceivedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubNewOfferReceivedEventArgs</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewOfferReceivedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewOfferReceivedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse">
            <summary>Stub type of SteamTrade.TradeOffer.NewTradeOfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.InitializeStub">
            <summary>Initializes a new instance of type StubNewTradeOfferResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOffer">
            <summary>Stub type of SteamTrade.TradeOffer.Offer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffer.InitializeStub">
            <summary>Initializes a new instance of type StubOffer</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken">
            <summary>Stub type of SteamTrade.TradeOffer.OfferAccessToken</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.InitializeStub">
            <summary>Initializes a new instance of type StubOfferAccessToken</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOfferResponse">
            <summary>Stub type of SteamTrade.TradeOffer.OfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferResponse.InitializeStub">
            <summary>Initializes a new instance of type StubOfferResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOfferSession">
            <summary>Stub type of SteamTrade.TradeOffer.OfferSession</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferSession.#ctor(SteamTrade.TradeOffer.ITradeOfferWebAPI,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferSession.InitializeStub">
            <summary>Initializes a new instance of type StubOfferSession</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOffersResponse">
            <summary>Stub type of SteamTrade.TradeOffer.OffersResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffersResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffersResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffersResponse.InitializeStub">
            <summary>Initializes a new instance of type StubOffersResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffersResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffersResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOwnerAction">
            <summary>Stub type of SteamTrade.TradeOffer.OwnerAction</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOwnerAction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOwnerAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOwnerAction.InitializeStub">
            <summary>Initializes a new instance of type StubOwnerAction</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOwnerAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOwnerAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeHoldDurations">
            <summary>Stub type of SteamTrade.TradeOffer.TradeHoldDurations</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeHoldDurations.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeHoldDurations.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeHoldDurations.InitializeStub">
            <summary>Initializes a new instance of type StubTradeHoldDurations</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeHoldDurations.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeHoldDurations.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOffer">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOffer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffer.#ctor(SteamTrade.TradeOffer.OfferSession,SteamTrade.TradeOffer.Offer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffer.#ctor(SteamTrade.TradeOffer.OfferSession,SteamKit2.SteamID)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffer.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOffer</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferAcceptResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferAcceptResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferManager</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.#ctor(System.String,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferManager</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferStatusPollingService</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.HandleLongPoll(SteamTrade.TradeOffer.OffersResponse,SteamTrade.TradeOffer.ITradeOfferWebAPI,System.String)">
            <summary>Sets the stub of TradeOfferStatusPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String firstRequestItem2)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.HandleLongPollOffersResponseITradeOfferWebAPIString">
            <summary>Sets the stub of TradeOfferStatusPollingService.HandleLongPoll(OffersResponse offerResponse, ITradeOfferWebAPI api, String firstRequestItem2)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferStatusPollingService</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.WaitForStatusChangeAsync(SteamTrade.TradeOffer.ITradeOfferWebAPI,System.String,System.String,SteamTrade.TradeOffer.TradeOfferState,System.DateTime,System.Threading.CancellationToken)">
            <summary>Sets the stub of TradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferStatusPollingService.WaitForStatusChangeAsyncITradeOfferWebAPIStringStringTradeOfferStateDateTimeCancellationToken">
            <summary>Sets the stub of TradeOfferStatusPollingService.WaitForStatusChangeAsync(ITradeOfferWebAPI tradeOfferWebApi, String botUsername, String tradeOfferId, TradeOfferState originalState, DateTime timeoutTime, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferTimeoutException</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTradeOfferTimeoutException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTradeOfferTimeoutException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferTimeoutException</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubTradeOfferTimeoutException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferWeb</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.#ctor(SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferWeb</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferWebAPI</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.#ctor(System.String,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferWebAPI</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOffersSummary</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOffersSummary</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeEvent</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.#ctor(SteamTrade.TradeWebAPI.TradeEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.EqualsTradeEvent">
            <summary>Sets the shim of TradeEvent.Equals(TradeEvent other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.actionGet">
            <summary>Sets the shim of TradeEvent.get_action()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.actionSetInt32">
            <summary>Sets the shim of TradeEvent.set_action(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.appidGet">
            <summary>Sets the shim of TradeEvent.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.appidSetInt32">
            <summary>Sets the shim of TradeEvent.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.assetidGet">
            <summary>Sets the shim of TradeEvent.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.assetidSetUInt64">
            <summary>Sets the shim of TradeEvent.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.contextidGet">
            <summary>Sets the shim of TradeEvent.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.contextidSetInt64">
            <summary>Sets the shim of TradeEvent.set_contextid(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.steamidGet">
            <summary>Sets the shim of TradeEvent.get_steamid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.steamidSetString">
            <summary>Sets the shim of TradeEvent.set_steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.textGet">
            <summary>Sets the shim of TradeEvent.get_text()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.textSetString">
            <summary>Sets the shim of TradeEvent.set_text(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.timestampGet">
            <summary>Sets the shim of TradeEvent.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.timestampSetUInt64">
            <summary>Sets the shim of TradeEvent.set_timestamp(UInt64 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeEvent})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.Constructor">
            <summary>Sets the shim of TradeEvent.TradeEvent()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.EqualsTradeEvent">
            <summary>Sets the shim of TradeEvent.Equals(TradeEvent other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.actionGet">
            <summary>Sets the shim of TradeEvent.get_action()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.actionSetInt32">
            <summary>Sets the shim of TradeEvent.set_action(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.appidGet">
            <summary>Sets the shim of TradeEvent.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.appidSetInt32">
            <summary>Sets the shim of TradeEvent.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.assetidGet">
            <summary>Sets the shim of TradeEvent.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.assetidSetUInt64">
            <summary>Sets the shim of TradeEvent.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.contextidGet">
            <summary>Sets the shim of TradeEvent.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.contextidSetInt64">
            <summary>Sets the shim of TradeEvent.set_contextid(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.steamidGet">
            <summary>Sets the shim of TradeEvent.get_steamid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.steamidSetString">
            <summary>Sets the shim of TradeEvent.set_steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.textGet">
            <summary>Sets the shim of TradeEvent.get_text()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.textSetString">
            <summary>Sets the shim of TradeEvent.set_text(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.timestampGet">
            <summary>Sets the shim of TradeEvent.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.timestampSetUInt64">
            <summary>Sets the shim of TradeEvent.set_timestamp(UInt64 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeSession</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.#ctor(SteamTrade.TradeWebAPI.TradeSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AcceptTradeWebCmd">
            <summary>Sets the shim of TradeSession.AcceptTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AddItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.AddItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.AcceptTradeWebCmd">
            <summary>Sets the shim of TradeSession.AcceptTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.AddItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.AddItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.CancelTradeWebCmd">
            <summary>Sets the shim of TradeSession.CancelTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.FetchStringStringNameValueCollection">
            <summary>Sets the shim of TradeSession.Fetch(String url, String method, NameValueCollection data)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.GetForeignInventorySteamID">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.GetForeignInventorySteamIDInt64Int32">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId, Int64 contextId, Int32 appid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.GetStatus">
            <summary>Sets the shim of TradeSession.GetStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.Init">
            <summary>Sets the shim of TradeSession.Init()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.IsSuccessObject">
            <summary>Sets the shim of TradeSession.IsSuccess(Object json)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.LogPosGet">
            <summary>Sets the shim of TradeSession.get_LogPos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.LogPosSetInt32">
            <summary>Sets the shim of TradeSession.set_LogPos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.RemoveItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.RemoveItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.SendMessageWebCmdString">
            <summary>Sets the shim of TradeSession.SendMessageWebCmd(String msg)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.SetReadyWebCmdBoolean">
            <summary>Sets the shim of TradeSession.SetReadyWebCmd(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.VersionGet">
            <summary>Sets the shim of TradeSession.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.VersionSetInt32">
            <summary>Sets the shim of TradeSession.set_Version(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.CancelTradeWebCmd">
            <summary>Sets the shim of TradeSession.CancelTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.ConstructorSteamIDISteamWeb">
            <summary>Sets the shim of TradeSession.TradeSession(SteamID otherSid, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.FetchStringStringNameValueCollection">
            <summary>Sets the shim of TradeSession.Fetch(String url, String method, NameValueCollection data)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.GetForeignInventorySteamID">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.GetForeignInventorySteamIDInt64Int32">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId, Int64 contextId, Int32 appid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.GetStatus">
            <summary>Sets the shim of TradeSession.GetStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.Init">
            <summary>Sets the shim of TradeSession.Init()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.IsSuccessObject">
            <summary>Sets the shim of TradeSession.IsSuccess(Object json)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.LogPosGet">
            <summary>Sets the shim of TradeSession.get_LogPos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.LogPosSetInt32">
            <summary>Sets the shim of TradeSession.set_LogPos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.RemoveItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.RemoveItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.SendMessageWebCmdString">
            <summary>Sets the shim of TradeSession.SendMessageWebCmd(String msg)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.SetReadyWebCmdBoolean">
            <summary>Sets the shim of TradeSession.SetReadyWebCmd(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.VersionGet">
            <summary>Sets the shim of TradeSession.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.VersionSetInt32">
            <summary>Sets the shim of TradeSession.set_Version(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeStatus</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.#ctor(SteamTrade.TradeWebAPI.TradeStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.GetAllEvents">
            <summary>Sets the shim of TradeStatus.GetAllEvents()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.GetLastEvent">
            <summary>Sets the shim of TradeStatus.GetLastEvent()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.errorGet">
            <summary>Sets the shim of TradeStatus.get_error()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.errorSetString">
            <summary>Sets the shim of TradeStatus.set_error(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.eventsGet">
            <summary>Sets the shim of TradeStatus.get_events()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.eventsSetTradeEventArray">
            <summary>Sets the shim of TradeStatus.set_events(TradeEvent[] value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.logposGet">
            <summary>Sets the shim of TradeStatus.get_logpos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.logposSetInt32">
            <summary>Sets the shim of TradeStatus.set_logpos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.meGet">
            <summary>Sets the shim of TradeStatus.get_me()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.meSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_me(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.newversionGet">
            <summary>Sets the shim of TradeStatus.get_newversion()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.newversionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_newversion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.successGet">
            <summary>Sets the shim of TradeStatus.get_success()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.successSetBoolean">
            <summary>Sets the shim of TradeStatus.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.themGet">
            <summary>Sets the shim of TradeStatus.get_them()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.themSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_them(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.trade_statusGet">
            <summary>Sets the shim of TradeStatus.get_trade_status()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.trade_statusSetInt64">
            <summary>Sets the shim of TradeStatus.set_trade_status(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.tradeidGet">
            <summary>Sets the shim of TradeStatus.get_tradeid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.tradeidSetString">
            <summary>Sets the shim of TradeStatus.set_tradeid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.versionGet">
            <summary>Sets the shim of TradeStatus.get_version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.versionSetInt32">
            <summary>Sets the shim of TradeStatus.set_version(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.Constructor">
            <summary>Sets the shim of TradeStatus.TradeStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.GetAllEvents">
            <summary>Sets the shim of TradeStatus.GetAllEvents()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.GetLastEvent">
            <summary>Sets the shim of TradeStatus.GetLastEvent()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.errorGet">
            <summary>Sets the shim of TradeStatus.get_error()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.errorSetString">
            <summary>Sets the shim of TradeStatus.set_error(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.eventsGet">
            <summary>Sets the shim of TradeStatus.get_events()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.eventsSetTradeEventArray">
            <summary>Sets the shim of TradeStatus.set_events(TradeEvent[] value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.logposGet">
            <summary>Sets the shim of TradeStatus.get_logpos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.logposSetInt32">
            <summary>Sets the shim of TradeStatus.set_logpos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.meGet">
            <summary>Sets the shim of TradeStatus.get_me()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.meSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_me(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.newversionGet">
            <summary>Sets the shim of TradeStatus.get_newversion()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.newversionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_newversion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.successGet">
            <summary>Sets the shim of TradeStatus.get_success()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.successSetBoolean">
            <summary>Sets the shim of TradeStatus.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.themGet">
            <summary>Sets the shim of TradeStatus.get_them()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.themSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_them(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.trade_statusGet">
            <summary>Sets the shim of TradeStatus.get_trade_status()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.trade_statusSetInt64">
            <summary>Sets the shim of TradeStatus.set_trade_status(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.tradeidGet">
            <summary>Sets the shim of TradeStatus.get_tradeid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.tradeidSetString">
            <summary>Sets the shim of TradeStatus.set_tradeid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.versionGet">
            <summary>Sets the shim of TradeStatus.get_version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.versionSetInt32">
            <summary>Sets the shim of TradeStatus.set_version(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeUserAssets</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.#ctor(SteamTrade.TradeWebAPI.TradeUserAssets)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.CompareToTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.CompareTo(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.EqualsObject">
            <summary>Sets the shim of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.EqualsTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.Equals(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.GetHashCode01">
            <summary>Sets the shim of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.ToString01">
            <summary>Sets the shim of TradeUserAssets.ToString()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.amountGet">
            <summary>Sets the shim of TradeUserAssets.get_amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.amountSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_amount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.appidGet">
            <summary>Sets the shim of TradeUserAssets.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.appidSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.assetidGet">
            <summary>Sets the shim of TradeUserAssets.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.assetidSetUInt64">
            <summary>Sets the shim of TradeUserAssets.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.contextidGet">
            <summary>Sets the shim of TradeUserAssets.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.contextidSetInt64">
            <summary>Sets the shim of TradeUserAssets.set_contextid(Int64 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.Bind(System.IComparable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.CompareToTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.CompareTo(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.ConstructorInt32Int64UInt64Int32">
            <summary>Sets the shim of TradeUserAssets.TradeUserAssets(Int32 appid, Int64 contextid, UInt64 assetid, Int32 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.EqualsObject">
            <summary>Sets the shim of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.EqualsTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.Equals(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.GetHashCode">
            <summary>Sets the shim of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.ToString">
            <summary>Sets the shim of TradeUserAssets.ToString()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.amountGet">
            <summary>Sets the shim of TradeUserAssets.get_amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.amountSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_amount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.appidGet">
            <summary>Sets the shim of TradeUserAssets.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.appidSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.assetidGet">
            <summary>Sets the shim of TradeUserAssets.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.assetidSetUInt64">
            <summary>Sets the shim of TradeUserAssets.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.contextidGet">
            <summary>Sets the shim of TradeUserAssets.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.contextidSetInt64">
            <summary>Sets the shim of TradeUserAssets.set_contextid(Int64 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeUserObj</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.#ctor(SteamTrade.TradeWebAPI.TradeUserObj)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.GetAssets">
            <summary>Sets the shim of TradeUserObj.GetAssets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.assetsGet">
            <summary>Sets the shim of TradeUserObj.get_assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.assetsSetObject">
            <summary>Sets the shim of TradeUserObj.set_assets(Object value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.confirmedGet">
            <summary>Sets the shim of TradeUserObj.get_confirmed()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.confirmedSetInt32">
            <summary>Sets the shim of TradeUserObj.set_confirmed(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.connection_pendingGet">
            <summary>Sets the shim of TradeUserObj.get_connection_pending()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.connection_pendingSetBoolean">
            <summary>Sets the shim of TradeUserObj.set_connection_pending(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.readyGet">
            <summary>Sets the shim of TradeUserObj.get_ready()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.readySetInt32">
            <summary>Sets the shim of TradeUserObj.set_ready(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.sec_since_touchGet">
            <summary>Sets the shim of TradeUserObj.get_sec_since_touch()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.sec_since_touchSetInt32">
            <summary>Sets the shim of TradeUserObj.set_sec_since_touch(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.Constructor">
            <summary>Sets the shim of TradeUserObj.TradeUserObj()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.GetAssets">
            <summary>Sets the shim of TradeUserObj.GetAssets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.assetsGet">
            <summary>Sets the shim of TradeUserObj.get_assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.assetsSetObject">
            <summary>Sets the shim of TradeUserObj.set_assets(Object value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.confirmedGet">
            <summary>Sets the shim of TradeUserObj.get_confirmed()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.confirmedSetInt32">
            <summary>Sets the shim of TradeUserObj.set_confirmed(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.connection_pendingGet">
            <summary>Sets the shim of TradeUserObj.get_connection_pending()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.connection_pendingSetBoolean">
            <summary>Sets the shim of TradeUserObj.set_connection_pending(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.readyGet">
            <summary>Sets the shim of TradeUserObj.get_ready()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.readySetInt32">
            <summary>Sets the shim of TradeUserObj.set_ready(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.sec_since_touchGet">
            <summary>Sets the shim of TradeUserObj.get_sec_since_touch()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.sec_since_touchSetInt32">
            <summary>Sets the shim of TradeUserObj.set_sec_since_touch(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeEvent</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTradeEvent</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeSession">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeSession</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.#ctor(SteamKit2.SteamID,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.InitializeStub">
            <summary>Initializes a new instance of type StubTradeSession</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeStatus</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.InitializeStub">
            <summary>Initializes a new instance of type StubTradeStatus</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeUserAssets</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.#ctor(System.Int32,System.Int64,System.UInt64,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.Equals(System.Object)">
            <summary>Sets the stub of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="F:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.EqualsObject">
            <summary>Sets the stub of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.GetHashCode">
            <summary>Sets the stub of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="F:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.GetHashCode01">
            <summary>Sets the stub of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.InitializeStub">
            <summary>Initializes a new instance of type StubTradeUserAssets</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.ToString">
            <summary>Sets the stub of TradeUserAssets.ToString()</summary>
        </member>
        <member name="F:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.ToString01">
            <summary>Sets the stub of TradeUserAssets.ToString()</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeUserObj</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.InitializeStub">
            <summary>Initializes a new instance of type StubTradeUserObj</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
