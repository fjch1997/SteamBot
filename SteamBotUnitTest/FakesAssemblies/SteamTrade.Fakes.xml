<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SteamTrade.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SteamTradeDelegates">
            <summary>Contains custom delegates used for the stubs and shims of SteamTrade</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException">
            <summary>Shim type of SteamTrade.Exceptions.InventoryFetchException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.#ctor(SteamTrade.Exceptions.InventoryFetchException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.AllInstances.FailingSteamIdGet">
            <summary>Sets the shim of InventoryFetchException.get_FailingSteamId()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.AllInstances.FailingSteamIdSetSteamID">
            <summary>Sets the shim of InventoryFetchException.set_FailingSteamId(SteamID value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.Constructor">
            <summary>Sets the shim of InventoryFetchException.InventoryFetchException()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.ConstructorSteamID">
            <summary>Sets the shim of InventoryFetchException.InventoryFetchException(SteamID steamId)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.FailingSteamIdGet">
            <summary>Sets the shim of InventoryFetchException.get_FailingSteamId()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimInventoryFetchException.FailingSteamIdSetSteamID">
            <summary>Sets the shim of InventoryFetchException.set_FailingSteamId(SteamID value)</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException">
            <summary>Shim type of SteamTrade.Exceptions.SteamWebNotLoggedInException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.#ctor(SteamTrade.Exceptions.SteamWebNotLoggedInException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.Constructor">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.ConstructorString">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException(String message)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimSteamWebNotLoggedInException.ConstructorStringException">
            <summary>Sets the shim of SteamWebNotLoggedInException.SteamWebNotLoggedInException(String message, Exception inner)</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeException">
            <summary>Shim type of SteamTrade.Exceptions.TradeException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.#ctor(SteamTrade.Exceptions.TradeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.Constructor">
            <summary>Sets the shim of TradeException.TradeException()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.ConstructorString">
            <summary>Sets the shim of TradeException.TradeException(String message)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeException.ConstructorStringException">
            <summary>Sets the shim of TradeException.TradeException(String message, Exception inner)</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeJsonException">
            <summary>Shim type of SteamTrade.Exceptions.TradeJsonException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.#ctor(SteamTrade.Exceptions.TradeJsonException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances.OriginalServerResponseGet">
            <summary>Sets the shim of TradeJsonException.get_OriginalServerResponse()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances.OriginalServerResponseSetString">
            <summary>Sets the shim of TradeJsonException.set_OriginalServerResponse(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.AllInstances.ToString01">
            <summary>Sets the shim of TradeJsonException.ToString()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ConstructorString">
            <summary>Sets the shim of TradeJsonException.TradeJsonException(String originalServerResponse)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ConstructorStringExceptionString">
            <summary>Sets the shim of TradeJsonException.TradeJsonException(String message, Exception inner, String originalServerResponse)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ConstructorStringString">
            <summary>Sets the shim of TradeJsonException.TradeJsonException(String message, String originalServerResponse)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.OriginalServerResponseGet">
            <summary>Sets the shim of TradeJsonException.get_OriginalServerResponse()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.OriginalServerResponseSetString">
            <summary>Sets the shim of TradeJsonException.set_OriginalServerResponse(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.ShimTradeJsonException.ToString">
            <summary>Sets the shim of TradeJsonException.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubInventoryFetchException">
            <summary>Stub type of SteamTrade.Exceptions.InventoryFetchException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.#ctor(SteamKit2.SteamID)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInventoryFetchException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInventoryFetchException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.InitializeStub">
            <summary>Initializes a new instance of type StubInventoryFetchException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubInventoryFetchException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException">
            <summary>Stub type of SteamTrade.Exceptions.SteamWebNotLoggedInException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSteamWebNotLoggedInException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSteamWebNotLoggedInException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.InitializeStub">
            <summary>Initializes a new instance of type StubSteamWebNotLoggedInException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubSteamWebNotLoggedInException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubTradeException">
            <summary>Stub type of SteamTrade.Exceptions.TradeException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTradeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTradeException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.InitializeStub">
            <summary>Initializes a new instance of type StubTradeException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Exceptions.Fakes.StubTradeJsonException">
            <summary>Stub type of SteamTrade.Exceptions.TradeJsonException</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.#ctor(System.String,System.Exception,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTradeJsonException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTradeJsonException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.InitializeStub">
            <summary>Initializes a new instance of type StubTradeJsonException</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Exceptions.Fakes.StubTradeJsonException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Exceptions.Fakes.StubTradeJsonException.ToString">
            <summary>Sets the stub of TradeJsonException.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Exceptions.Fakes.StubTradeJsonException.ToString01">
            <summary>Sets the stub of TradeJsonException.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimForeignInventory">
            <summary>Shim type of SteamTrade.ForeignInventory</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimForeignInventory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimForeignInventory.#ctor(SteamTrade.ForeignInventory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimForeignInventory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.AllInstances.GetClassIdForItemIdUInt64">
            <summary>Sets the shim of ForeignInventory.GetClassIdForItemId(UInt64 itemId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.AllInstances.GetDefIndexUInt64">
            <summary>Sets the shim of ForeignInventory.GetDefIndex(UInt64 itemId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.AllInstances.GetInstanceIdForItemIdUInt64">
            <summary>Sets the shim of ForeignInventory.GetInstanceIdForItemId(UInt64 itemId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.AllInstances.InventoryValidGet">
            <summary>Sets the shim of ForeignInventory.get_InventoryValid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.AllInstances.InventoryValidSetBoolean">
            <summary>Sets the shim of ForeignInventory.set_InventoryValid(Boolean value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimForeignInventory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimForeignInventory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.ConstructorObject">
            <summary>Sets the shim of ForeignInventory.ForeignInventory(Object rawJson)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.GetClassIdForItemIdUInt64">
            <summary>Sets the shim of ForeignInventory.GetClassIdForItemId(UInt64 itemId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.GetDefIndexUInt64">
            <summary>Sets the shim of ForeignInventory.GetDefIndex(UInt64 itemId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.GetInstanceIdForItemIdUInt64">
            <summary>Sets the shim of ForeignInventory.GetInstanceIdForItemId(UInt64 itemId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.InventoryValidGet">
            <summary>Sets the shim of ForeignInventory.get_InventoryValid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimForeignInventory.InventoryValidSetBoolean">
            <summary>Sets the shim of ForeignInventory.set_InventoryValid(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory`1">
            <summary>Shim type of SteamTrade.GenericInventory`1</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.#ctor(SteamTrade.GenericInventory{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.DescriptionsGet">
            <summary>Sets the shim of GenericInventory`1.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.ErrorsGet">
            <summary>Sets the shim of GenericInventory`1.get_Errors()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.GetDescriptionUInt64">
            <summary>Sets the shim of GenericInventory`1.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.IsLoadedGet">
            <summary>Sets the shim of GenericInventory`1.get_IsLoaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.IsLoadedSetBoolean">
            <summary>Sets the shim of GenericInventory`1.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.ItemsGet">
            <summary>Sets the shim of GenericInventory`1.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.LoadAsyncInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the shim of GenericInventory`1.LoadAsync(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.LoadImplementationInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the shim of GenericInventory`1.LoadImplementation(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.LoadInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the shim of GenericInventory`1.Load(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.descriptionsGet">
            <summary>Sets the shim of GenericInventory`1.get_descriptions()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.errorsGet">
            <summary>Sets the shim of GenericInventory`1.get_errors()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.getDescriptionUInt64">
            <summary>Sets the shim of GenericInventory`1.getDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.isLoadedGet">
            <summary>Sets the shim of GenericInventory`1.get_isLoaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.itemsGet">
            <summary>Sets the shim of GenericInventory`1.get_items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.loadImplementationInt32IEnumerableOfInt64SteamID">
            <summary>Sets the shim of GenericInventory`1.loadImplementation(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.AllInstances.loadInt32IEnumerableOfInt64SteamID">
            <summary>Sets the shim of GenericInventory`1.load(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ConstructorISteamWeb">
            <summary>Sets the shim of GenericInventory`1.GenericInventory`1(ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.DescriptionsGet">
            <summary>Sets the shim of GenericInventory`1.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ErrorsGet">
            <summary>Sets the shim of GenericInventory`1.get_Errors()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.GetDescriptionUInt64">
            <summary>Sets the shim of GenericInventory`1.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.IsLoadedGet">
            <summary>Sets the shim of GenericInventory`1.get_IsLoaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.IsLoadedSetBoolean">
            <summary>Sets the shim of GenericInventory`1.set_IsLoaded(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ItemsGet">
            <summary>Sets the shim of GenericInventory`1.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.LoadAsyncInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the shim of GenericInventory`1.LoadAsync(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.LoadImplementationInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the shim of GenericInventory`1.LoadImplementation(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.LoadInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the shim of GenericInventory`1.Load(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem">
            <summary>Shim type of SteamTrade.GenericInventory`1+Item</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.#ctor(SteamTrade.GenericInventory{`0}.Item)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.AllInstances.DescriptionIdGet">
            <summary>Sets the shim of Item.get_DescriptionId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.AllInstances.DescriptionIdSetString">
            <summary>Sets the shim of Item.set_DescriptionId(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.AllInstances.ToString01">
            <summary>Sets the shim of Item.ToString()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.AllInstances.descriptionidGet">
            <summary>Sets the shim of Item.get_descriptionid()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.Bind(System.IComparable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.ConstructorInt32Int64UInt64StringInt32">
            <summary>Sets the shim of Item.Item(Int32 appid, Int64 contextid, UInt64 assetid, String descriptionid, Int32 amount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.DescriptionIdGet">
            <summary>Sets the shim of Item.get_DescriptionId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.DescriptionIdSetString">
            <summary>Sets the shim of Item.set_DescriptionId(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.ToString">
            <summary>Sets the shim of Item.ToString()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.ShimItem.descriptionidGet">
            <summary>Sets the shim of Item.get_descriptionid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.descriptionsGet">
            <summary>Sets the shim of GenericInventory`1.get_descriptions()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.errorsGet">
            <summary>Sets the shim of GenericInventory`1.get_errors()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.getDescriptionUInt64">
            <summary>Sets the shim of GenericInventory`1.getDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.isLoadedGet">
            <summary>Sets the shim of GenericInventory`1.get_isLoaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.itemsGet">
            <summary>Sets the shim of GenericInventory`1.get_items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.loadImplementationInt32IEnumerableOfInt64SteamID">
            <summary>Sets the shim of GenericInventory`1.loadImplementation(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory`1.loadInt32IEnumerableOfInt64SteamID">
            <summary>Sets the shim of GenericInventory`1.load(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory2">
            <summary>Shim type of SteamTrade.GenericInventory2</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.#ctor(SteamTrade.GenericInventory2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.AppIdGet">
            <summary>Sets the shim of GenericInventory2.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.ContextIdGet">
            <summary>Sets the shim of GenericInventory2.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetDescriptionGenericInventory2Item">
            <summary>Sets the shim of GenericInventory2.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetDescriptionOf1GenericInventory2Item``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory2,SteamTrade.GenericInventory2.Item,``0})">
            <summary>Sets the shim of GenericInventory2.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetDescriptionOf1UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory2,System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetDescriptionOf1UInt64UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory2,System.UInt64,System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetDescriptionUInt64">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetDescriptionUInt64UInt64">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetEnumerator">
            <summary>Sets the shim of GenericInventory2.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetItemCount">
            <summary>Sets the shim of GenericInventory2.GetItemCount()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.GetItemUInt64">
            <summary>Sets the shim of GenericInventory2.GetItem(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.LoadAsyncInt32">
            <summary>Sets the shim of GenericInventory2.LoadAsync(Int32 start)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.LoadedGet">
            <summary>Sets the shim of GenericInventory2.get_Loaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of GenericInventory2.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.RawDownloadAsyncListOfJObjectUInt64Int32Int32">
            <summary>Sets the shim of GenericInventory2.RawDownloadAsync(List`1&lt;JObject&gt; responses, UInt64 startAssetId, Int32 counter, Int32 maxItemCount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.RemoveItemGenericInventory2Item">
            <summary>Sets the shim of GenericInventory2.RemoveItem(Item item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.RemoveItemUInt64">
            <summary>Sets the shim of GenericInventory2.RemoveItem(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of GenericInventory2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.Wait">
            <summary>Sets the shim of GenericInventory2.Wait()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.WaitAsync">
            <summary>Sets the shim of GenericInventory2.WaitAsync()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.WarningsGet">
            <summary>Sets the shim of GenericInventory2.get_Warnings()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AllInstances.WarningsSetListOfString">
            <summary>Sets the shim of GenericInventory2.set_Warnings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.AppIdGet">
            <summary>Sets the shim of GenericInventory2.get_AppId()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.Bind(System.Collections.Generic.IEnumerable{SteamTrade.GenericInventory2.Item})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ConstructorISteamWebUInt64UInt32UInt32String">
            <summary>Sets the shim of GenericInventory2.GenericInventory2(ISteamWeb steamWeb, UInt64 steamId64, UInt32 appId, UInt32 contextId, String language)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ContextIdGet">
            <summary>Sets the shim of GenericInventory2.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.GetDescriptionGenericInventory2Item">
            <summary>Sets the shim of GenericInventory2.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.GetDescriptionOf1GenericInventory2Item``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.GenericInventory2.Item,``0})">
            <summary>Sets the shim of GenericInventory2.GetDescription(Item item)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.GetDescriptionOf1UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.GetDescriptionOf1UInt64UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.UInt64,System.UInt64,``0})">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.GetDescriptionUInt64">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.GetDescriptionUInt64UInt64">
            <summary>Sets the shim of GenericInventory2.GetDescription(UInt64 classId, UInt64 instanceId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.GetEnumerator">
            <summary>Sets the shim of GenericInventory2.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.GetItemCount">
            <summary>Sets the shim of GenericInventory2.GetItemCount()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.GetItemUInt64">
            <summary>Sets the shim of GenericInventory2.GetItem(UInt64 assetId)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.LoadAsyncInt32">
            <summary>Sets the shim of GenericInventory2.LoadAsync(Int32 start)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.LoadedGet">
            <summary>Sets the shim of GenericInventory2.get_Loaded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.OnSerializingStreamingContext">
            <summary>Sets the shim of GenericInventory2.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.RawDownloadAsyncListOfJObjectUInt64Int32Int32">
            <summary>Sets the shim of GenericInventory2.RawDownloadAsync(List`1&lt;JObject&gt; responses, UInt64 startAssetId, Int32 counter, Int32 maxItemCount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.RemoveItemGenericInventory2Item">
            <summary>Sets the shim of GenericInventory2.RemoveItem(Item item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.RemoveItemUInt64">
            <summary>Sets the shim of GenericInventory2.RemoveItem(UInt64 assetId)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory2.ShimItem">
            <summary>Shim type of SteamTrade.GenericInventory2+Item</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.#ctor(SteamTrade.GenericInventory2.Item)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.AllInstances.ClassIdGet">
            <summary>Sets the shim of Item.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.AllInstances.ClassIdSetUInt64">
            <summary>Sets the shim of Item.set_ClassId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.AllInstances.InstanceIdGet">
            <summary>Sets the shim of Item.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.AllInstances.InstanceIdSetUInt64">
            <summary>Sets the shim of Item.set_InstanceId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.AllInstances.ToString01">
            <summary>Sets the shim of Item.ToString()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.Bind(System.IComparable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.ClassIdGet">
            <summary>Sets the shim of Item.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.ClassIdSetUInt64">
            <summary>Sets the shim of Item.set_ClassId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.ConstructorUInt32UInt32UInt64UInt64UInt64Int32">
            <summary>Sets the shim of Item.Item(UInt32 appid, UInt32 contextid, UInt64 assetid, UInt64 classId, UInt64 instanceId, Int32 amount)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.InstanceIdGet">
            <summary>Sets the shim of Item.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.InstanceIdSetUInt64">
            <summary>Sets the shim of Item.set_InstanceId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.ShimItem.ToString">
            <summary>Sets the shim of Item.ToString()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of GenericInventory2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.Wait">
            <summary>Sets the shim of GenericInventory2.Wait()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.WaitAsync">
            <summary>Sets the shim of GenericInventory2.WaitAsync()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.WarningsGet">
            <summary>Sets the shim of GenericInventory2.get_Warnings()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGenericInventory2.WarningsSetListOfString">
            <summary>Sets the shim of GenericInventory2.set_Warnings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGetRsaKey">
            <summary>Shim type of SteamTrade.GetRsaKey</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.#ctor(SteamTrade.GetRsaKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimGetRsaKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_expGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_exp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_expSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_exp(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_modGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_mod()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.publickey_modSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_mod(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.successGet">
            <summary>Sets the shim of GetRsaKey.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.successSetBoolean">
            <summary>Sets the shim of GetRsaKey.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.timestampGet">
            <summary>Sets the shim of GetRsaKey.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.AllInstances.timestampSetString">
            <summary>Sets the shim of GetRsaKey.set_timestamp(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimGetRsaKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.Constructor">
            <summary>Sets the shim of GetRsaKey.GetRsaKey()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_expGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_exp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_expSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_exp(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_modGet">
            <summary>Sets the shim of GetRsaKey.get_publickey_mod()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.publickey_modSetString">
            <summary>Sets the shim of GetRsaKey.set_publickey_mod(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.successGet">
            <summary>Sets the shim of GetRsaKey.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.successSetBoolean">
            <summary>Sets the shim of GetRsaKey.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.timestampGet">
            <summary>Sets the shim of GetRsaKey.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimGetRsaKey.timestampSetString">
            <summary>Sets the shim of GetRsaKey.set_timestamp(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory">
            <summary>Shim type of SteamTrade.Inventory</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.#ctor(SteamTrade.Inventory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.GetItemUInt64">
            <summary>Sets the shim of Inventory.GetItem(UInt64 id)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.GetItemsByDefindexInt32">
            <summary>Sets the shim of Inventory.GetItemsByDefindex(Int32 defindex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.IsFreeToPlay">
            <summary>Sets the shim of Inventory.IsFreeToPlay()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.IsGoodGet">
            <summary>Sets the shim of Inventory.get_IsGood()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.IsGoodSetBoolean">
            <summary>Sets the shim of Inventory.set_IsGood(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.IsPrivateGet">
            <summary>Sets the shim of Inventory.get_IsPrivate()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.IsPrivateSetBoolean">
            <summary>Sets the shim of Inventory.set_IsPrivate(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.ItemsGet">
            <summary>Sets the shim of Inventory.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.ItemsSetInventoryItemArray">
            <summary>Sets the shim of Inventory.set_Items(Item[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.NumSlotsGet">
            <summary>Sets the shim of Inventory.get_NumSlots()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.AllInstances.NumSlotsSetUInt32">
            <summary>Sets the shim of Inventory.set_NumSlots(UInt32 value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.FetchInventoryUInt64StringISteamWeb">
            <summary>Sets the shim of Inventory.FetchInventory(UInt64 steamId, String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.GetInventorySteamIDISteamWeb">
            <summary>Sets the shim of Inventory.GetInventory(SteamID steamid, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.GetItemUInt64">
            <summary>Sets the shim of Inventory.GetItem(UInt64 id)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.GetItemsByDefindexInt32">
            <summary>Sets the shim of Inventory.GetItemsByDefindex(Int32 defindex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.IsFreeToPlay">
            <summary>Sets the shim of Inventory.IsFreeToPlay()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.IsGoodGet">
            <summary>Sets the shim of Inventory.get_IsGood()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.IsGoodSetBoolean">
            <summary>Sets the shim of Inventory.set_IsGood(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.IsPrivateGet">
            <summary>Sets the shim of Inventory.get_IsPrivate()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.IsPrivateSetBoolean">
            <summary>Sets the shim of Inventory.set_IsPrivate(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ItemsGet">
            <summary>Sets the shim of Inventory.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ItemsSetInventoryItemArray">
            <summary>Sets the shim of Inventory.set_Items(Item[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.NumSlotsGet">
            <summary>Sets the shim of Inventory.get_NumSlots()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.NumSlotsSetUInt32">
            <summary>Sets the shim of Inventory.set_NumSlots(UInt32 value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.ShimAccountInfo">
            <summary>Shim type of SteamTrade.Inventory+AccountInfo</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.#ctor(SteamTrade.Inventory.AccountInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.AllInstances.PersonaNameGet">
            <summary>Sets the shim of AccountInfo.get_PersonaName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.AllInstances.PersonaNameSetString">
            <summary>Sets the shim of AccountInfo.set_PersonaName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.AllInstances.SteamIDGet">
            <summary>Sets the shim of AccountInfo.get_SteamID()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.AllInstances.SteamIDSetUInt64">
            <summary>Sets the shim of AccountInfo.set_SteamID(UInt64 value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.Constructor">
            <summary>Sets the shim of AccountInfo.AccountInfo()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.PersonaNameGet">
            <summary>Sets the shim of AccountInfo.get_PersonaName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.PersonaNameSetString">
            <summary>Sets the shim of AccountInfo.set_PersonaName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.SteamIDGet">
            <summary>Sets the shim of AccountInfo.get_SteamID()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimAccountInfo.SteamIDSetUInt64">
            <summary>Sets the shim of AccountInfo.set_SteamID(UInt64 value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.ShimItem">
            <summary>Shim type of SteamTrade.Inventory+Item</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItem.#ctor(SteamTrade.Inventory.Item)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.AttributesGet">
            <summary>Sets the shim of Item.get_Attributes()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.AttributesSetInventoryItemAttributeArray">
            <summary>Sets the shim of Item.set_Attributes(ItemAttribute[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.ContainedItemGet">
            <summary>Sets the shim of Item.get_ContainedItem()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.ContainedItemSetInventoryItem">
            <summary>Sets the shim of Item.set_ContainedItem(Item value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.CustomDescriptionGet">
            <summary>Sets the shim of Item.get_CustomDescription()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.CustomDescriptionSetString">
            <summary>Sets the shim of Item.set_CustomDescription(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.CustomNameGet">
            <summary>Sets the shim of Item.get_CustomName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.CustomNameSetString">
            <summary>Sets the shim of Item.set_CustomName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.DefindexGet">
            <summary>Sets the shim of Item.get_Defindex()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.DefindexSetUInt16">
            <summary>Sets the shim of Item.set_Defindex(UInt16 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.IdGet">
            <summary>Sets the shim of Item.get_Id()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.IdSetUInt64">
            <summary>Sets the shim of Item.set_Id(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.IsNotCraftableGet">
            <summary>Sets the shim of Item.get_IsNotCraftable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.IsNotCraftableSetBoolean">
            <summary>Sets the shim of Item.set_IsNotCraftable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.IsNotTradeableGet">
            <summary>Sets the shim of Item.get_IsNotTradeable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.IsNotTradeableSetBoolean">
            <summary>Sets the shim of Item.set_IsNotTradeable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.LevelGet">
            <summary>Sets the shim of Item.get_Level()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.LevelSetByte">
            <summary>Sets the shim of Item.set_Level(Byte value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.OriginGet">
            <summary>Sets the shim of Item.get_Origin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.OriginSetInt32">
            <summary>Sets the shim of Item.set_Origin(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.OriginalIdGet">
            <summary>Sets the shim of Item.get_OriginalId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.OriginalIdSetUInt64">
            <summary>Sets the shim of Item.set_OriginalId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.QualityGet">
            <summary>Sets the shim of Item.get_Quality()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.QualitySetInt32">
            <summary>Sets the shim of Item.set_Quality(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.RemainingUsesGet">
            <summary>Sets the shim of Item.get_RemainingUses()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AllInstances.RemainingUsesSetInt32">
            <summary>Sets the shim of Item.set_RemainingUses(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AttributesGet">
            <summary>Sets the shim of Item.get_Attributes()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.AttributesSetInventoryItemAttributeArray">
            <summary>Sets the shim of Item.set_Attributes(ItemAttribute[] value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.Constructor">
            <summary>Sets the shim of Item.Item()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.ContainedItemGet">
            <summary>Sets the shim of Item.get_ContainedItem()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.ContainedItemSetInventoryItem">
            <summary>Sets the shim of Item.set_ContainedItem(Item value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.CustomDescriptionGet">
            <summary>Sets the shim of Item.get_CustomDescription()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.CustomDescriptionSetString">
            <summary>Sets the shim of Item.set_CustomDescription(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.CustomNameGet">
            <summary>Sets the shim of Item.get_CustomName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.CustomNameSetString">
            <summary>Sets the shim of Item.set_CustomName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.DefindexGet">
            <summary>Sets the shim of Item.get_Defindex()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.DefindexSetUInt16">
            <summary>Sets the shim of Item.set_Defindex(UInt16 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.IdGet">
            <summary>Sets the shim of Item.get_Id()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.IdSetUInt64">
            <summary>Sets the shim of Item.set_Id(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.IsNotCraftableGet">
            <summary>Sets the shim of Item.get_IsNotCraftable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.IsNotCraftableSetBoolean">
            <summary>Sets the shim of Item.set_IsNotCraftable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.IsNotTradeableGet">
            <summary>Sets the shim of Item.get_IsNotTradeable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.IsNotTradeableSetBoolean">
            <summary>Sets the shim of Item.set_IsNotTradeable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.LevelGet">
            <summary>Sets the shim of Item.get_Level()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.LevelSetByte">
            <summary>Sets the shim of Item.set_Level(Byte value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.OriginGet">
            <summary>Sets the shim of Item.get_Origin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.OriginSetInt32">
            <summary>Sets the shim of Item.set_Origin(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.OriginalIdGet">
            <summary>Sets the shim of Item.get_OriginalId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.OriginalIdSetUInt64">
            <summary>Sets the shim of Item.set_OriginalId(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.QualityGet">
            <summary>Sets the shim of Item.get_Quality()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.QualitySetInt32">
            <summary>Sets the shim of Item.set_Quality(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.RemainingUsesGet">
            <summary>Sets the shim of Item.get_RemainingUses()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItem.RemainingUsesSetInt32">
            <summary>Sets the shim of Item.set_RemainingUses(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.ShimItemAttribute">
            <summary>Shim type of SteamTrade.Inventory+ItemAttribute</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.#ctor(SteamTrade.Inventory.ItemAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AccountInfoGet">
            <summary>Sets the shim of ItemAttribute.get_AccountInfo()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AccountInfoSetInventoryAccountInfo">
            <summary>Sets the shim of ItemAttribute.set_AccountInfo(AccountInfo value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.AccountInfoGet">
            <summary>Sets the shim of ItemAttribute.get_AccountInfo()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.AccountInfoSetInventoryAccountInfo">
            <summary>Sets the shim of ItemAttribute.set_AccountInfo(AccountInfo value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.DefindexGet">
            <summary>Sets the shim of ItemAttribute.get_Defindex()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.DefindexSetUInt16">
            <summary>Sets the shim of ItemAttribute.set_Defindex(UInt16 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.FloatValueGet">
            <summary>Sets the shim of ItemAttribute.get_FloatValue()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.FloatValueSetSingle">
            <summary>Sets the shim of ItemAttribute.set_FloatValue(Single value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ItemAttribute.get_Value()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.AllInstances.ValueSetString">
            <summary>Sets the shim of ItemAttribute.set_Value(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.Constructor">
            <summary>Sets the shim of ItemAttribute.ItemAttribute()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.DefindexGet">
            <summary>Sets the shim of ItemAttribute.get_Defindex()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.DefindexSetUInt16">
            <summary>Sets the shim of ItemAttribute.set_Defindex(UInt16 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.FloatValueGet">
            <summary>Sets the shim of ItemAttribute.get_FloatValue()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.FloatValueSetSingle">
            <summary>Sets the shim of ItemAttribute.set_FloatValue(Single value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.ValueGet">
            <summary>Sets the shim of ItemAttribute.get_Value()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimInventory.ShimItemAttribute.ValueSetString">
            <summary>Sets the shim of ItemAttribute.set_Value(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimItemDescription">
            <summary>Shim type of SteamTrade.ItemDescription</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.#ctor(SteamTrade.ItemDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimItemDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.AppIdGet">
            <summary>Sets the shim of ItemDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.AppIdSetInt32">
            <summary>Sets the shim of ItemDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.BackgroundColorGet">
            <summary>Sets the shim of ItemDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.BackgroundColorSetString">
            <summary>Sets the shim of ItemDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.ClassIdGet">
            <summary>Sets the shim of ItemDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.ClassIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_ClassId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.CommodityGet">
            <summary>Sets the shim of ItemDescription.get_Commodity()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.CommoditySetString">
            <summary>Sets the shim of ItemDescription.set_Commodity(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconDragUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconDragUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconDragUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconDragUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlLargeGet">
            <summary>Sets the shim of ItemDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlLargeSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.IconUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.InstanceIdGet">
            <summary>Sets the shim of ItemDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.InstanceIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_InstanceId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketHashNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketHashNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketMarketableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketMarketableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketMarketableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketMarketableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketTradableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketTradableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketTradableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketTradableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketableGet">
            <summary>Sets the shim of ItemDescription.get_Marketable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.MarketableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Marketable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameColorGet">
            <summary>Sets the shim of ItemDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameColorSetString">
            <summary>Sets the shim of ItemDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameGet">
            <summary>Sets the shim of ItemDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.NameSetString">
            <summary>Sets the shim of ItemDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TradableGet">
            <summary>Sets the shim of ItemDescription.get_Tradable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TradableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Tradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TypeGet">
            <summary>Sets the shim of ItemDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.TypeSetString">
            <summary>Sets the shim of ItemDescription.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.UrlGet">
            <summary>Sets the shim of ItemDescription.get_Url()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AllInstances.UrlSetString">
            <summary>Sets the shim of ItemDescription.set_Url(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AppIdGet">
            <summary>Sets the shim of ItemDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.AppIdSetInt32">
            <summary>Sets the shim of ItemDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.BackgroundColorGet">
            <summary>Sets the shim of ItemDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.BackgroundColorSetString">
            <summary>Sets the shim of ItemDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimItemDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.ClassIdGet">
            <summary>Sets the shim of ItemDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.ClassIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_ClassId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.CommodityGet">
            <summary>Sets the shim of ItemDescription.get_Commodity()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.CommoditySetString">
            <summary>Sets the shim of ItemDescription.set_Commodity(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.Constructor">
            <summary>Sets the shim of ItemDescription.ItemDescription()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconDragUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconDragUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconDragUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconDragUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlGet">
            <summary>Sets the shim of ItemDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlLargeGet">
            <summary>Sets the shim of ItemDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlLargeSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.IconUrlSetString">
            <summary>Sets the shim of ItemDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.InstanceIdGet">
            <summary>Sets the shim of ItemDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.InstanceIdSetInt64">
            <summary>Sets the shim of ItemDescription.set_InstanceId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketHashNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketHashNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketMarketableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketMarketableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketMarketableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketMarketableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketNameGet">
            <summary>Sets the shim of ItemDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketNameSetString">
            <summary>Sets the shim of ItemDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketTradableRestrictionGet">
            <summary>Sets the shim of ItemDescription.get_MarketTradableRestriction()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketTradableRestrictionSetString">
            <summary>Sets the shim of ItemDescription.set_MarketTradableRestriction(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketableGet">
            <summary>Sets the shim of ItemDescription.get_Marketable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.MarketableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Marketable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameColorGet">
            <summary>Sets the shim of ItemDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameColorSetString">
            <summary>Sets the shim of ItemDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameGet">
            <summary>Sets the shim of ItemDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.NameSetString">
            <summary>Sets the shim of ItemDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TradableGet">
            <summary>Sets the shim of ItemDescription.get_Tradable()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TradableSetBoolean">
            <summary>Sets the shim of ItemDescription.set_Tradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TypeGet">
            <summary>Sets the shim of ItemDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.TypeSetString">
            <summary>Sets the shim of ItemDescription.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.UrlGet">
            <summary>Sets the shim of ItemDescription.get_Url()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimItemDescription.UrlSetString">
            <summary>Sets the shim of ItemDescription.set_Url(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSchema">
            <summary>Shim type of SteamTrade.Schema</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.#ctor(SteamTrade.Schema)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSchema.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.GetItemInt32">
            <summary>Sets the shim of Schema.GetItem(Int32 defindex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.GetItems">
            <summary>Sets the shim of Schema.GetItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.GetItemsByCraftingMaterialString">
            <summary>Sets the shim of Schema.GetItemsByCraftingMaterial(String material)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.ItemsGameUrlGet">
            <summary>Sets the shim of Schema.get_ItemsGameUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.ItemsGameUrlSetString">
            <summary>Sets the shim of Schema.set_ItemsGameUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.ItemsGet">
            <summary>Sets the shim of Schema.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.ItemsSetSchemaItemArray">
            <summary>Sets the shim of Schema.set_Items(Item[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.OriginNamesGet">
            <summary>Sets the shim of Schema.get_OriginNames()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.OriginNamesSetSchemaItemOriginArray">
            <summary>Sets the shim of Schema.set_OriginNames(ItemOrigin[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.StatusGet">
            <summary>Sets the shim of Schema.get_Status()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.AllInstances.StatusSetInt32">
            <summary>Sets the shim of Schema.set_Status(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.CacheFileFullNameGet">
            <summary>Sets the shim of Schema.get_CacheFileFullName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.CacheFileFullNameSetString">
            <summary>Sets the shim of Schema.set_CacheFileFullName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.Constructor">
            <summary>Sets the shim of Schema.Schema()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.FetchSchemaStringString">
            <summary>Sets the shim of Schema.FetchSchema(String apiKey, String schemaLang)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.GetItemInt32">
            <summary>Sets the shim of Schema.GetItem(Int32 defindex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.GetItems">
            <summary>Sets the shim of Schema.GetItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.GetItemsByCraftingMaterialString">
            <summary>Sets the shim of Schema.GetItemsByCraftingMaterial(String material)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.GetSchemaStringHttpWebResponseDateTime">
            <summary>Sets the shim of Schema.GetSchemaString(HttpWebResponse response, DateTime schemaLastModified)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ItemsGameUrlGet">
            <summary>Sets the shim of Schema.get_ItemsGameUrl()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ItemsGameUrlSetString">
            <summary>Sets the shim of Schema.set_ItemsGameUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ItemsGet">
            <summary>Sets the shim of Schema.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ItemsSetSchemaItemArray">
            <summary>Sets the shim of Schema.set_Items(Item[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.OriginNamesGet">
            <summary>Sets the shim of Schema.get_OriginNames()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.OriginNamesSetSchemaItemOriginArray">
            <summary>Sets the shim of Schema.set_OriginNames(ItemOrigin[] value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSchema.ShimItem">
            <summary>Shim type of SteamTrade.Schema+Item</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItem.#ctor(SteamTrade.Schema.Item)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.CraftClassGet">
            <summary>Sets the shim of Item.get_CraftClass()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.CraftClassSetString">
            <summary>Sets the shim of Item.set_CraftClass(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.CraftMaterialTypeGet">
            <summary>Sets the shim of Item.get_CraftMaterialType()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.CraftMaterialTypeSetString">
            <summary>Sets the shim of Item.set_CraftMaterialType(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.DefindexGet">
            <summary>Sets the shim of Item.get_Defindex()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.DefindexSetUInt16">
            <summary>Sets the shim of Item.set_Defindex(UInt16 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemClassGet">
            <summary>Sets the shim of Item.get_ItemClass()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemClassSetString">
            <summary>Sets the shim of Item.set_ItemClass(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemNameGet">
            <summary>Sets the shim of Item.get_ItemName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemNameSetString">
            <summary>Sets the shim of Item.set_ItemName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemQualityGet">
            <summary>Sets the shim of Item.get_ItemQuality()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemQualitySetInt32">
            <summary>Sets the shim of Item.set_ItemQuality(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemSlotGet">
            <summary>Sets the shim of Item.get_ItemSlot()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemSlotSetString">
            <summary>Sets the shim of Item.set_ItemSlot(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemTypeNameGet">
            <summary>Sets the shim of Item.get_ItemTypeName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.ItemTypeNameSetString">
            <summary>Sets the shim of Item.set_ItemTypeName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.NameGet">
            <summary>Sets the shim of Item.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.NameSetString">
            <summary>Sets the shim of Item.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.UsableByClassesGet">
            <summary>Sets the shim of Item.get_UsableByClasses()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.AllInstances.UsableByClassesSetStringArray">
            <summary>Sets the shim of Item.set_UsableByClasses(String[] value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.Constructor">
            <summary>Sets the shim of Item.Item()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.CraftClassGet">
            <summary>Sets the shim of Item.get_CraftClass()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.CraftClassSetString">
            <summary>Sets the shim of Item.set_CraftClass(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.CraftMaterialTypeGet">
            <summary>Sets the shim of Item.get_CraftMaterialType()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.CraftMaterialTypeSetString">
            <summary>Sets the shim of Item.set_CraftMaterialType(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.DefindexGet">
            <summary>Sets the shim of Item.get_Defindex()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.DefindexSetUInt16">
            <summary>Sets the shim of Item.set_Defindex(UInt16 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemClassGet">
            <summary>Sets the shim of Item.get_ItemClass()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemClassSetString">
            <summary>Sets the shim of Item.set_ItemClass(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemNameGet">
            <summary>Sets the shim of Item.get_ItemName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemNameSetString">
            <summary>Sets the shim of Item.set_ItemName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemQualityGet">
            <summary>Sets the shim of Item.get_ItemQuality()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemQualitySetInt32">
            <summary>Sets the shim of Item.set_ItemQuality(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemSlotGet">
            <summary>Sets the shim of Item.get_ItemSlot()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemSlotSetString">
            <summary>Sets the shim of Item.set_ItemSlot(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemTypeNameGet">
            <summary>Sets the shim of Item.get_ItemTypeName()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.ItemTypeNameSetString">
            <summary>Sets the shim of Item.set_ItemTypeName(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.NameGet">
            <summary>Sets the shim of Item.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.NameSetString">
            <summary>Sets the shim of Item.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.UsableByClassesGet">
            <summary>Sets the shim of Item.get_UsableByClasses()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItem.UsableByClassesSetStringArray">
            <summary>Sets the shim of Item.set_UsableByClasses(String[] value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSchema.ShimItemOrigin">
            <summary>Shim type of SteamTrade.Schema+ItemOrigin</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.#ctor(SteamTrade.Schema.ItemOrigin)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.AllInstances.NameGet">
            <summary>Sets the shim of ItemOrigin.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.AllInstances.NameSetString">
            <summary>Sets the shim of ItemOrigin.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.AllInstances.OriginGet">
            <summary>Sets the shim of ItemOrigin.get_Origin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.AllInstances.OriginSetInt32">
            <summary>Sets the shim of ItemOrigin.set_Origin(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.Constructor">
            <summary>Sets the shim of ItemOrigin.ItemOrigin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.NameGet">
            <summary>Sets the shim of ItemOrigin.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.NameSetString">
            <summary>Sets the shim of ItemOrigin.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.OriginGet">
            <summary>Sets the shim of ItemOrigin.get_Origin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.ShimItemOrigin.OriginSetInt32">
            <summary>Sets the shim of ItemOrigin.set_Origin(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.StaticConstructor">
            <summary>Sets the shim of Schema.Schema()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.StatusGet">
            <summary>Sets the shim of Schema.get_Status()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSchema.StatusSetInt32">
            <summary>Sets the shim of Schema.set_Status(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamResult">
            <summary>Shim type of SteamTrade.SteamResult</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.#ctor(SteamTrade.SteamResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.LoginCompleteGet">
            <summary>Sets the shim of SteamResult.get_LoginComplete()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.LoginCompleteSetBoolean">
            <summary>Sets the shim of SteamResult.set_LoginComplete(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferParametersGet">
            <summary>Sets the shim of SteamResult.get_TransferParameters()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferParametersSetTransferParameters">
            <summary>Sets the shim of SteamResult.set_TransferParameters(TransferParameters value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferUrlsGet">
            <summary>Sets the shim of SteamResult.get_TransferUrls()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.TransferUrlsSetStringArray">
            <summary>Sets the shim of SteamResult.set_TransferUrls(String[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_gidGet">
            <summary>Sets the shim of SteamResult.get_captcha_gid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_gidSetString">
            <summary>Sets the shim of SteamResult.set_captcha_gid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_neededGet">
            <summary>Sets the shim of SteamResult.get_captcha_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.captcha_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_captcha_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailauth_neededGet">
            <summary>Sets the shim of SteamResult.get_emailauth_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailauth_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_emailauth_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailsteamidGet">
            <summary>Sets the shim of SteamResult.get_emailsteamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.emailsteamidSetString">
            <summary>Sets the shim of SteamResult.set_emailsteamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.messageGet">
            <summary>Sets the shim of SteamResult.get_message()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.messageSetString">
            <summary>Sets the shim of SteamResult.set_message(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.requires_twofactorGet">
            <summary>Sets the shim of SteamResult.get_requires_twofactor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.requires_twofactorSetBoolean">
            <summary>Sets the shim of SteamResult.set_requires_twofactor(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.successGet">
            <summary>Sets the shim of SteamResult.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.AllInstances.successSetBoolean">
            <summary>Sets the shim of SteamResult.set_success(Boolean value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.Constructor">
            <summary>Sets the shim of SteamResult.SteamResult()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.LoginCompleteGet">
            <summary>Sets the shim of SteamResult.get_LoginComplete()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.LoginCompleteSetBoolean">
            <summary>Sets the shim of SteamResult.set_LoginComplete(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferParametersGet">
            <summary>Sets the shim of SteamResult.get_TransferParameters()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferParametersSetTransferParameters">
            <summary>Sets the shim of SteamResult.set_TransferParameters(TransferParameters value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferUrlsGet">
            <summary>Sets the shim of SteamResult.get_TransferUrls()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.TransferUrlsSetStringArray">
            <summary>Sets the shim of SteamResult.set_TransferUrls(String[] value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_gidGet">
            <summary>Sets the shim of SteamResult.get_captcha_gid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_gidSetString">
            <summary>Sets the shim of SteamResult.set_captcha_gid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_neededGet">
            <summary>Sets the shim of SteamResult.get_captcha_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.captcha_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_captcha_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailauth_neededGet">
            <summary>Sets the shim of SteamResult.get_emailauth_needed()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailauth_neededSetBoolean">
            <summary>Sets the shim of SteamResult.set_emailauth_needed(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailsteamidGet">
            <summary>Sets the shim of SteamResult.get_emailsteamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.emailsteamidSetString">
            <summary>Sets the shim of SteamResult.set_emailsteamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.messageGet">
            <summary>Sets the shim of SteamResult.get_message()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.messageSetString">
            <summary>Sets the shim of SteamResult.set_message(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.requires_twofactorGet">
            <summary>Sets the shim of SteamResult.get_requires_twofactor()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.requires_twofactorSetBoolean">
            <summary>Sets the shim of SteamResult.set_requires_twofactor(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.successGet">
            <summary>Sets the shim of SteamResult.get_success()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamResult.successSetBoolean">
            <summary>Sets the shim of SteamResult.set_success(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWeb">
            <summary>Shim type of SteamTrade.SteamWeb</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.#ctor(SteamTrade.SteamWeb)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AcceptLanguageHeaderGet">
            <summary>Sets the shim of SteamWeb.get_AcceptLanguageHeader()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AcceptLanguageHeaderSetString">
            <summary>Sets the shim of SteamWeb.set_AcceptLanguageHeader(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWeb.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AcceptLanguageHeaderGet">
            <summary>Sets the shim of SteamWeb.get_AcceptLanguageHeader()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AcceptLanguageHeaderSetString">
            <summary>Sets the shim of SteamWeb.set_AcceptLanguageHeader(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AuthenticateIEnumerableOfCookie">
            <summary>Sets the shim of SteamWeb.Authenticate(IEnumerable`1&lt;Cookie&gt; cookies)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.AuthenticateStringSteamClientString">
            <summary>Sets the shim of SteamWeb.Authenticate(String myUniqueId, SteamClient client, String myLoginKey)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.CookiesGet">
            <summary>Sets the shim of SteamWeb.get_Cookies()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.CookiesSetCookieContainer">
            <summary>Sets the shim of SteamWeb.set_Cookies(CookieContainer value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.DoLoginStringStringBooleanFuncOfStringFuncOfStringStringFuncOfString">
            <summary>Sets the shim of SteamWeb.DoLogin(String username, String password, Boolean rememberLogin, Func`1&lt;String&gt; twoFactorCodeCallback, Func`2&lt;String,String&gt; captchaCallback, Func`1&lt;String&gt; emailCodeCallback)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.FetchAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.FetchAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.FetchStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Fetch(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.GetHexValChar">
            <summary>Sets the shim of SteamWeb.GetHexVal(Char hex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.HexToByteString">
            <summary>Sets the shim of SteamWeb.HexToByte(String hex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.PrepairRequestStringStringNameValueCollectionBooleanStringBooleanOutStringOutHttpWebRequestOut">
            <summary>Sets the shim of SteamWeb.PrepairRequest(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean&amp; isGetMethod, String&amp; dataString, HttpWebRequest&amp; request)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.RequestAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.RequestAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.RequestStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Request(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.SessionIdGet">
            <summary>Sets the shim of SteamWeb.get_SessionId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.TokenGet">
            <summary>Sets the shim of SteamWeb.get_Token()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.TokenSecureGet">
            <summary>Sets the shim of SteamWeb.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AllInstances.VerifyCookies">
            <summary>Sets the shim of SteamWeb.VerifyCookies()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AuthenticateIEnumerableOfCookie">
            <summary>Sets the shim of SteamWeb.Authenticate(IEnumerable`1&lt;Cookie&gt; cookies)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.AuthenticateStringSteamClientString">
            <summary>Sets the shim of SteamWeb.Authenticate(String myUniqueId, SteamClient client, String myLoginKey)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWeb.Bind(SteamTrade.ISteamWeb)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.Constructor">
            <summary>Sets the shim of SteamWeb.SteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.CookiesGet">
            <summary>Sets the shim of SteamWeb.get_Cookies()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.CookiesSetCookieContainer">
            <summary>Sets the shim of SteamWeb.set_Cookies(CookieContainer value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.DoLoginStringStringBooleanFuncOfStringFuncOfStringStringFuncOfString">
            <summary>Sets the shim of SteamWeb.DoLogin(String username, String password, Boolean rememberLogin, Func`1&lt;String&gt; twoFactorCodeCallback, Func`2&lt;String,String&gt; captchaCallback, Func`1&lt;String&gt; emailCodeCallback)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.FetchAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.FetchAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.FetchStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Fetch(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.GetHexValChar">
            <summary>Sets the shim of SteamWeb.GetHexVal(Char hex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.HexStringToByteArrayString">
            <summary>Sets the shim of SteamWeb.HexStringToByteArray(String hex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.HexToByteString">
            <summary>Sets the shim of SteamWeb.HexToByte(String hex)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.RequestAsyncStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.RequestAsync(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.RequestStringStringNameValueCollectionBooleanStringBoolean">
            <summary>Sets the shim of SteamWeb.Request(String url, String method, NameValueCollection data, Boolean ajax, String referer, Boolean fetchError)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.SessionIdGet">
            <summary>Sets the shim of SteamWeb.get_SessionId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.SubmitCookiesCookieContainer">
            <summary>Sets the shim of SteamWeb.SubmitCookies(CookieContainer cookies)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.TokenGet">
            <summary>Sets the shim of SteamWeb.get_Token()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.TokenSecureGet">
            <summary>Sets the shim of SteamWeb.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWeb.VerifyCookies">
            <summary>Sets the shim of SteamWeb.VerifyCookies()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWebLoginException">
            <summary>Shim type of SteamTrade.SteamWebLoginException</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.#ctor(SteamTrade.SteamWebLoginException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimSteamWebLoginException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.AllInstances.SteamResultGet">
            <summary>Sets the shim of SteamWebLoginException.get_SteamResult()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.AllInstances.SteamResultSetSteamResult">
            <summary>Sets the shim of SteamWebLoginException.set_SteamResult(SteamResult value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimSteamWebLoginException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SteamWebLoginException.SteamWebLoginException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.ConstructorSteamResult">
            <summary>Sets the shim of SteamWebLoginException.SteamWebLoginException(SteamResult steamResult)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.SteamResultGet">
            <summary>Sets the shim of SteamWebLoginException.get_SteamResult()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimSteamWebLoginException.SteamResultSetSteamResult">
            <summary>Sets the shim of SteamWebLoginException.set_SteamResult(SteamResult value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTF2Value">
            <summary>Shim type of SteamTrade.TF2Value</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTF2Value.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.AdditionOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Addition(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTF2Value.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTF2Value.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTF2Value.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.CeilingTF2Value">
            <summary>Sets the shim of TF2Value.Ceiling(TF2Value value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.DifferenceTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.Difference(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.DivisionOpTF2ValueDouble">
            <summary>Sets the shim of TF2Value.op_Division(TF2Value val1, Double val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.DivisionOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Division(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.EqualityOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Equality(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.FloorTF2Value">
            <summary>Sets the shim of TF2Value.Floor(TF2Value value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.FromRefDouble">
            <summary>Sets the shim of TF2Value.FromRef(Double numRef)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.FromRefString">
            <summary>Sets the shim of TF2Value.FromRef(String numRefStr)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.GreaterThanOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_GreaterThan(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.GreaterThanOrEqualOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_GreaterThanOrEqual(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.InequalityOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Inequality(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.LessThanOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_LessThan(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.LessThanOrEqualOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_LessThanOrEqual(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MaxTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.Max(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MinTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.Min(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.ModulusOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Modulus(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MultiplyOpDoubleTF2Value">
            <summary>Sets the shim of TF2Value.op_Multiply(Double val1, TF2Value val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.MultiplyOpTF2ValueDouble">
            <summary>Sets the shim of TF2Value.op_Multiply(TF2Value val1, Double val2)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.RoundTF2ValueMidpointRounding">
            <summary>Sets the shim of TF2Value.Round(TF2Value value, MidpointRounding roundingRule)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.StaticConstructor">
            <summary>Sets the shim of TF2Value.TF2Value()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTF2Value.SubtractionOpTF2ValueTF2Value">
            <summary>Sets the shim of TF2Value.op_Subtraction(TF2Value val1, TF2Value val2)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTrade">
            <summary>Shim type of SteamTrade.Trade</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.#ctor(SteamTrade.Trade)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AcceptTrade">
            <summary>Sets the shim of Trade.AcceptTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AddItemTradeUserAssets">
            <summary>Sets the shim of Trade.AddItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AddItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.AddItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTrade.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.AcceptTrade">
            <summary>Sets the shim of Trade.AcceptTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.AddItemTradeUserAssets">
            <summary>Sets the shim of Trade.AddItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.AddItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.AddItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.CancelTrade">
            <summary>Sets the shim of Trade.CancelTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnAwaitingConfirmation">
            <summary>Sets the shim of Trade.FireOnAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnCloseEvent">
            <summary>Sets the shim of Trade.FireOnCloseEvent()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnErrorEventString">
            <summary>Sets the shim of Trade.FireOnErrorEvent(String message)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnStatusErrorEventTradeTradeStatusType">
            <summary>Sets the shim of Trade.FireOnStatusErrorEvent(TradeStatusType statusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnUserAddItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserAddItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.FireOnUserRemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserRemoveItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.GetItemFromPrivateBpTradeUserAssets">
            <summary>Sets the shim of Trade.GetItemFromPrivateBp(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.GetItemSlotUInt64">
            <summary>Sets the shim of Trade.GetItemSlot(UInt64 itemid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.GetTradeStatusErrorStringTradeTradeStatusType">
            <summary>Sets the shim of Trade.GetTradeStatusErrorString(TradeStatusType tradeStatusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HandleTradeOngoingTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeOngoing(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HandleTradeVersionChangeTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeVersionChange(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HasTradeCompletedOkGet">
            <summary>Sets the shim of Trade.get_HasTradeCompletedOk()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HasTradeCompletedOkSetBoolean">
            <summary>Sets the shim of Trade.set_HasTradeCompletedOk(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.HasTradeEndedGet">
            <summary>Sets the shim of Trade.get_HasTradeEnded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.IsTradeAwaitingConfirmationGet">
            <summary>Sets the shim of Trade.get_IsTradeAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.IsTradeAwaitingConfirmationSetBoolean">
            <summary>Sets the shim of Trade.set_IsTradeAwaitingConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MeIsReadyGet">
            <summary>Sets the shim of Trade.get_MeIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MeIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_MeIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MyOfferedItemsGet">
            <summary>Sets the shim of Trade.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.MySteamIdGet">
            <summary>Sets the shim of Trade.get_MySteamId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.NextTradeSlot">
            <summary>Sets the shim of Trade.NextTradeSlot()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAfterInitAddTradeSuccessfulInit">
            <summary>Sets the shim of Trade.add_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAfterInitRemoveTradeSuccessfulInit">
            <summary>Sets the shim of Trade.remove_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAwaitingConfirmationAddTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.add_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnAwaitingConfirmationRemoveTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.remove_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnCloseAddTradeCloseHandler">
            <summary>Sets the shim of Trade.add_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnCloseRemoveTradeCloseHandler">
            <summary>Sets the shim of Trade.remove_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnErrorAddTradeErrorHandler">
            <summary>Sets the shim of Trade.add_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnErrorRemoveTradeErrorHandler">
            <summary>Sets the shim of Trade.remove_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnMessageAddTradeMessageHandler">
            <summary>Sets the shim of Trade.add_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnMessageRemoveTradeMessageHandler">
            <summary>Sets the shim of Trade.remove_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnStatusErrorAddTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.add_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnStatusErrorRemoveTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.remove_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAcceptAddTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.add_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAcceptRemoveTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.remove_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAddItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserAddItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserRemoveItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserRemoveItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserSetReadyAddTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.add_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OnUserSetReadyRemoveTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.remove_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherIsReadyGet">
            <summary>Sets the shim of Trade.get_OtherIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_OtherIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherOfferedItemsGet">
            <summary>Sets the shim of Trade.get_OtherOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherPrivateInventoryGet">
            <summary>Sets the shim of Trade.get_OtherPrivateInventory()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherPrivateInventorySetForeignInventory">
            <summary>Sets the shim of Trade.set_OtherPrivateInventory(ForeignInventory value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherSIDGet">
            <summary>Sets the shim of Trade.get_OtherSID()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherSIDSetSteamID">
            <summary>Sets the shim of Trade.set_OtherSID(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserAcceptedGet">
            <summary>Sets the shim of Trade.get_OtherUserAccepted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserAcceptedSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserAccepted(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserCancelledGet">
            <summary>Sets the shim of Trade.get_OtherUserCancelled()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.OtherUserCancelledSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserCancelled(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.Poll">
            <summary>Sets the shim of Trade.Poll()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.RemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.RemoveItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.RemoveItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.RemoveItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.AllInstances.RetryWebRequestOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SteamTrade.Trade,System.Func{``0},``0})">
            <summary>Sets the shim of Trade.RetryWebRequest(Func`1&lt;!!0&gt; webEvent)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.SendMessageString">
            <summary>Sets the shim of Trade.SendMessage(String msg)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.SetReadyBoolean">
            <summary>Sets the shim of Trade.SetReady(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.TradeStartedGet">
            <summary>Sets the shim of Trade.get_TradeStarted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.AllInstances.TradeStartedSetBoolean">
            <summary>Sets the shim of Trade.set_TradeStarted(Boolean value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.CancelTrade">
            <summary>Sets the shim of Trade.CancelTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.ConstructorSteamIDSteamIDISteamWeb">
            <summary>Sets the shim of Trade.Trade(SteamID me, SteamID other, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnAwaitingConfirmation">
            <summary>Sets the shim of Trade.FireOnAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnCloseEvent">
            <summary>Sets the shim of Trade.FireOnCloseEvent()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnErrorEventString">
            <summary>Sets the shim of Trade.FireOnErrorEvent(String message)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnStatusErrorEventTradeTradeStatusType">
            <summary>Sets the shim of Trade.FireOnStatusErrorEvent(TradeStatusType statusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnUserAddItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserAddItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.FireOnUserRemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.FireOnUserRemoveItem(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.GetItemFromPrivateBpTradeUserAssets">
            <summary>Sets the shim of Trade.GetItemFromPrivateBp(TradeUserAssets asset)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.GetItemSlotUInt64">
            <summary>Sets the shim of Trade.GetItemSlot(UInt64 itemid)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.GetTradeStatusErrorStringTradeTradeStatusType">
            <summary>Sets the shim of Trade.GetTradeStatusErrorString(TradeStatusType tradeStatusType)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HandleTradeOngoingTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeOngoing(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HandleTradeVersionChangeTradeStatus">
            <summary>Sets the shim of Trade.HandleTradeVersionChange(TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HasTradeCompletedOkGet">
            <summary>Sets the shim of Trade.get_HasTradeCompletedOk()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HasTradeCompletedOkSetBoolean">
            <summary>Sets the shim of Trade.set_HasTradeCompletedOk(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.HasTradeEndedGet">
            <summary>Sets the shim of Trade.get_HasTradeEnded()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.IsTradeAwaitingConfirmationGet">
            <summary>Sets the shim of Trade.get_IsTradeAwaitingConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.IsTradeAwaitingConfirmationSetBoolean">
            <summary>Sets the shim of Trade.set_IsTradeAwaitingConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MeIsReadyGet">
            <summary>Sets the shim of Trade.get_MeIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MeIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_MeIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MyOfferedItemsGet">
            <summary>Sets the shim of Trade.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.MySteamIdGet">
            <summary>Sets the shim of Trade.get_MySteamId()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.NextTradeSlot">
            <summary>Sets the shim of Trade.NextTradeSlot()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAfterInitAddTradeSuccessfulInit">
            <summary>Sets the shim of Trade.add_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAfterInitRemoveTradeSuccessfulInit">
            <summary>Sets the shim of Trade.remove_OnAfterInit(SuccessfulInit value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAwaitingConfirmationAddTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.add_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnAwaitingConfirmationRemoveTradeWaitingForEmailHandler">
            <summary>Sets the shim of Trade.remove_OnAwaitingConfirmation(WaitingForEmailHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnCloseAddTradeCloseHandler">
            <summary>Sets the shim of Trade.add_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnCloseRemoveTradeCloseHandler">
            <summary>Sets the shim of Trade.remove_OnClose(CloseHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnErrorAddTradeErrorHandler">
            <summary>Sets the shim of Trade.add_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnErrorRemoveTradeErrorHandler">
            <summary>Sets the shim of Trade.remove_OnError(ErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnMessageAddTradeMessageHandler">
            <summary>Sets the shim of Trade.add_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnMessageRemoveTradeMessageHandler">
            <summary>Sets the shim of Trade.remove_OnMessage(MessageHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnStatusErrorAddTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.add_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnStatusErrorRemoveTradeStatusErrorHandler">
            <summary>Sets the shim of Trade.remove_OnStatusError(StatusErrorHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAcceptAddTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.add_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAcceptRemoveTradeUserAcceptHandler">
            <summary>Sets the shim of Trade.remove_OnUserAccept(UserAcceptHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAddItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserAddItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserAddItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserRemoveItemAddTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.add_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserRemoveItemRemoveTradeUserAddItemHandler">
            <summary>Sets the shim of Trade.remove_OnUserRemoveItem(UserAddItemHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserSetReadyAddTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.add_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OnUserSetReadyRemoveTradeUserSetReadyStateHandler">
            <summary>Sets the shim of Trade.remove_OnUserSetReady(UserSetReadyStateHandler value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherIsReadyGet">
            <summary>Sets the shim of Trade.get_OtherIsReady()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherIsReadySetBoolean">
            <summary>Sets the shim of Trade.set_OtherIsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherOfferedItemsGet">
            <summary>Sets the shim of Trade.get_OtherOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherPrivateInventoryGet">
            <summary>Sets the shim of Trade.get_OtherPrivateInventory()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherPrivateInventorySetForeignInventory">
            <summary>Sets the shim of Trade.set_OtherPrivateInventory(ForeignInventory value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherSIDGet">
            <summary>Sets the shim of Trade.get_OtherSID()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherSIDSetSteamID">
            <summary>Sets the shim of Trade.set_OtherSID(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserAcceptedGet">
            <summary>Sets the shim of Trade.get_OtherUserAccepted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserAcceptedSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserAccepted(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserCancelledGet">
            <summary>Sets the shim of Trade.get_OtherUserCancelled()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.OtherUserCancelledSetBoolean">
            <summary>Sets the shim of Trade.set_OtherUserCancelled(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.Poll">
            <summary>Sets the shim of Trade.Poll()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.RemoveItemTradeUserAssets">
            <summary>Sets the shim of Trade.RemoveItem(TradeUserAssets item)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.RemoveItemUInt64Int32Int64">
            <summary>Sets the shim of Trade.RemoveItem(UInt64 itemid, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTrade.RetryWebRequestOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Sets the shim of Trade.RetryWebRequest(Func`1&lt;!!0&gt; webEvent)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.SendMessageString">
            <summary>Sets the shim of Trade.SendMessage(String msg)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.SetReadyBoolean">
            <summary>Sets the shim of Trade.SetReady(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.StaticConstructor">
            <summary>Sets the shim of Trade.Trade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.TradeStartedGet">
            <summary>Sets the shim of Trade.get_TradeStarted()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTrade.TradeStartedSetBoolean">
            <summary>Sets the shim of Trade.set_TradeStarted(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTradeManager">
            <summary>Shim type of SteamTrade.TradeManager</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.#ctor(SteamTrade.TradeManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTradeManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.CheckTradeTimeoutTrade">
            <summary>Sets the shim of TradeManager.CheckTradeTimeout(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.CreateTradeSteamIDSteamID">
            <summary>Sets the shim of TradeManager.CreateTrade(SteamID me, SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.IsTradeThreadRunningGet">
            <summary>Sets the shim of TradeManager.get_IsTradeThreadRunning()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.IsTradeThreadRunningSetBoolean">
            <summary>Sets the shim of TradeManager.set_IsTradeThreadRunning(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxActionGapSecGet">
            <summary>Sets the shim of TradeManager.get_MaxActionGapSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxActionGapSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxActionGapSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxTradeTimeSecGet">
            <summary>Sets the shim of TradeManager.get_MaxTradeTimeSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.MaxTradeTimeSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxTradeTimeSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.SetTradeTimeLimitsInt32Int32Int32">
            <summary>Sets the shim of TradeManager.SetTradeTimeLimits(Int32 maxTradeTime, Int32 maxActionGap, Int32 pollingInterval)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.StartTradeThreadTrade">
            <summary>Sets the shim of TradeManager.StartTradeThread(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.StopTrade">
            <summary>Sets the shim of TradeManager.StopTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.TradePollingIntervalGet">
            <summary>Sets the shim of TradeManager.get_TradePollingInterval()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances.TradePollingIntervalSetInt32">
            <summary>Sets the shim of TradeManager.set_TradePollingInterval(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.AllInstances._CreateTradeb__27_0">
            <summary>Sets the shim of TradeManager.&lt;CreateTrade&gt;b__27_0()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTradeManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.CheckTradeTimeoutTrade">
            <summary>Sets the shim of TradeManager.CheckTradeTimeout(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.ConstructorStringISteamWeb">
            <summary>Sets the shim of TradeManager.TradeManager(String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.CreateTradeSteamIDSteamID">
            <summary>Sets the shim of TradeManager.CreateTrade(SteamID me, SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.DebugErrorString">
            <summary>Sets the shim of TradeManager.DebugError(String output)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.DebugPrintString">
            <summary>Sets the shim of TradeManager.DebugPrint(String output)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.IsTradeThreadRunningGet">
            <summary>Sets the shim of TradeManager.get_IsTradeThreadRunning()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.IsTradeThreadRunningSetBoolean">
            <summary>Sets the shim of TradeManager.set_IsTradeThreadRunning(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxActionGapSecGet">
            <summary>Sets the shim of TradeManager.get_MaxActionGapSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxActionGapSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxActionGapSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxTradeTimeSecGet">
            <summary>Sets the shim of TradeManager.get_MaxTradeTimeSec()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.MaxTradeTimeSecSetInt32">
            <summary>Sets the shim of TradeManager.set_MaxTradeTimeSec(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.SetTradeTimeLimitsInt32Int32Int32">
            <summary>Sets the shim of TradeManager.SetTradeTimeLimits(Int32 maxTradeTime, Int32 maxActionGap, Int32 pollingInterval)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.StartTradeThreadTrade">
            <summary>Sets the shim of TradeManager.StartTradeThread(Trade trade)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.StopTrade">
            <summary>Sets the shim of TradeManager.StopTrade()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.TradePollingIntervalGet">
            <summary>Sets the shim of TradeManager.get_TradePollingInterval()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager.TradePollingIntervalSetInt32">
            <summary>Sets the shim of TradeManager.set_TradePollingInterval(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTradeManager._CreateTradeb__27_0">
            <summary>Sets the shim of TradeManager.&lt;CreateTrade&gt;b__27_0()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTransferParameters">
            <summary>Shim type of SteamTrade.TransferParameters</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.#ctor(SteamTrade.TransferParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.Fakes.ShimTransferParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.AuthGet">
            <summary>Sets the shim of TransferParameters.get_Auth()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.AuthSetString">
            <summary>Sets the shim of TransferParameters.set_Auth(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.RememberLoginGet">
            <summary>Sets the shim of TransferParameters.get_RememberLogin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.RememberLoginSetBoolean">
            <summary>Sets the shim of TransferParameters.set_RememberLogin(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.SteamidGet">
            <summary>Sets the shim of TransferParameters.get_Steamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.SteamidSetString">
            <summary>Sets the shim of TransferParameters.set_Steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenGet">
            <summary>Sets the shim of TransferParameters.get_Token()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenSecureGet">
            <summary>Sets the shim of TransferParameters.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenSecureSetString">
            <summary>Sets the shim of TransferParameters.set_TokenSecure(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.TokenSetString">
            <summary>Sets the shim of TransferParameters.set_Token(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.WebcookieGet">
            <summary>Sets the shim of TransferParameters.get_Webcookie()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AllInstances.WebcookieSetString">
            <summary>Sets the shim of TransferParameters.set_Webcookie(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AuthGet">
            <summary>Sets the shim of TransferParameters.get_Auth()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.AuthSetString">
            <summary>Sets the shim of TransferParameters.set_Auth(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.Fakes.ShimTransferParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.Constructor">
            <summary>Sets the shim of TransferParameters.TransferParameters()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.RememberLoginGet">
            <summary>Sets the shim of TransferParameters.get_RememberLogin()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.RememberLoginSetBoolean">
            <summary>Sets the shim of TransferParameters.set_RememberLogin(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.SteamidGet">
            <summary>Sets the shim of TransferParameters.get_Steamid()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.SteamidSetString">
            <summary>Sets the shim of TransferParameters.set_Steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenGet">
            <summary>Sets the shim of TransferParameters.get_Token()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenSecureGet">
            <summary>Sets the shim of TransferParameters.get_TokenSecure()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenSecureSetString">
            <summary>Sets the shim of TransferParameters.set_TokenSecure(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.TokenSetString">
            <summary>Sets the shim of TransferParameters.set_Token(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.WebcookieGet">
            <summary>Sets the shim of TransferParameters.get_Webcookie()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.ShimTransferParameters.WebcookieSetString">
            <summary>Sets the shim of TransferParameters.set_Webcookie(String value)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubForeignInventory">
            <summary>Stub type of SteamTrade.ForeignInventory</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubForeignInventory.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubForeignInventory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubForeignInventory.InitializeStub">
            <summary>Initializes a new instance of type StubForeignInventory</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubForeignInventory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubForeignInventory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubGenericInventory`1">
            <summary>Stub type of SteamTrade.GenericInventory`1</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory`1.#ctor(SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory`1.InitializeStub">
            <summary>Initializes a new instance of type StubGenericInventory</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory`1.LoadImplementation(System.Int32,System.Collections.Generic.IEnumerable{System.Int64},SteamKit2.SteamID,System.Int32)">
            <summary>Sets the stub of GenericInventory`1.LoadImplementation(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubGenericInventory`1.LoadImplementationInt32IEnumerableOfInt64SteamIDInt32">
            <summary>Sets the stub of GenericInventory`1.LoadImplementation(Int32 appid, IEnumerable`1&lt;Int64&gt; contextIds, SteamID steamid, Int32 maxRetryCountForWebExceptions)</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubGenericInventory2">
            <summary>Stub type of SteamTrade.GenericInventory2</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory2.#ctor(SteamTrade.ISteamWeb,System.UInt64,System.UInt32,System.UInt32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGenericInventory2.InitializeStub">
            <summary>Initializes a new instance of type StubGenericInventory2</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGenericInventory2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubGetRsaKey">
            <summary>Stub type of SteamTrade.GetRsaKey</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGetRsaKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGetRsaKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubGetRsaKey.InitializeStub">
            <summary>Initializes a new instance of type StubGetRsaKey</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGetRsaKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubGetRsaKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubInventory">
            <summary>Stub type of SteamTrade.Inventory</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubInventory.#ctor(SteamTrade.Inventory.InventoryResult)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubInventory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubInventory.InitializeStub">
            <summary>Initializes a new instance of type StubInventory</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubInventory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubInventory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubItemDescription">
            <summary>Stub type of SteamTrade.ItemDescription</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubItemDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubItemDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubItemDescription.InitializeStub">
            <summary>Initializes a new instance of type StubItemDescription</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubItemDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubItemDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSchema">
            <summary>Stub type of SteamTrade.Schema</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSchema.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSchema.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSchema.InitializeStub">
            <summary>Initializes a new instance of type StubSchema</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSchema.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSchema.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSteamResult">
            <summary>Stub type of SteamTrade.SteamResult</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamResult.InitializeStub">
            <summary>Initializes a new instance of type StubSteamResult</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSteamWeb">
            <summary>Stub type of SteamTrade.SteamWeb</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWeb.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWeb.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWeb.InitializeStub">
            <summary>Initializes a new instance of type StubSteamWeb</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWeb.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWeb.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubSteamWebLoginException">
            <summary>Stub type of SteamTrade.SteamWebLoginException</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.#ctor(SteamTrade.SteamResult)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSteamWebLoginException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSteamWebLoginException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.InitializeStub">
            <summary>Initializes a new instance of type StubSteamWebLoginException</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubSteamWebLoginException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubSteamWebLoginException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SteamTrade.Fakes.StubSteamWebLoginException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubTradeManager">
            <summary>Stub type of SteamTrade.TradeManager</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTradeManager.#ctor(System.String,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTradeManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTradeManager.InitializeStub">
            <summary>Initializes a new instance of type StubTradeManager</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTradeManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTradeManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.Fakes.StubTransferParameters">
            <summary>Stub type of SteamTrade.TransferParameters</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTransferParameters.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTransferParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.Fakes.StubTransferParameters.InitializeStub">
            <summary>Initializes a new instance of type StubTransferParameters</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTransferParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.Fakes.StubTransferParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1">
            <summary>Shim type of SteamTrade.TradeOffer.ApiResponse`1</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.#ctor(SteamTrade.TradeOffer.ApiResponse{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.AllInstances.ResponseGet">
            <summary>Sets the shim of ApiResponse`1.get_Response()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.AllInstances.ResponseSetT0">
            <summary>Sets the shim of ApiResponse`1.set_Response(!0 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.Constructor">
            <summary>Sets the shim of ApiResponse`1.ApiResponse`1()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.ResponseGet">
            <summary>Sets the shim of ApiResponse`1.get_Response()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimApiResponse`1.ResponseSetT0">
            <summary>Sets the shim of ApiResponse`1.set_Response(!0 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimAssetDescription">
            <summary>Shim type of SteamTrade.TradeOffer.AssetDescription</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.#ctor(SteamTrade.TradeOffer.AssetDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.AppIdGet">
            <summary>Sets the shim of AssetDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.AppIdSetInt32">
            <summary>Sets the shim of AssetDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.BackgroundColorGet">
            <summary>Sets the shim of AssetDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.BackgroundColorSetString">
            <summary>Sets the shim of AssetDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.ClassIdGet">
            <summary>Sets the shim of AssetDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.ClassIdSetString">
            <summary>Sets the shim of AssetDescription.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.DescriptionsGet">
            <summary>Sets the shim of AssetDescription.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.DescriptionsSetListOfDescription">
            <summary>Sets the shim of AssetDescription.set_Descriptions(List`1&lt;Description&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlGet">
            <summary>Sets the shim of AssetDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlLargeGet">
            <summary>Sets the shim of AssetDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlLargeSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IconUrlSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.InstanceIdGet">
            <summary>Sets the shim of AssetDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.InstanceIdSetString">
            <summary>Sets the shim of AssetDescription.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsCurrencyGet">
            <summary>Sets the shim of AssetDescription.get_IsCurrency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsCurrencySetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsCurrency(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsTradableGet">
            <summary>Sets the shim of AssetDescription.get_IsTradable()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.IsTradableSetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsTradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketHashNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketHashNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.MarketNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameColorGet">
            <summary>Sets the shim of AssetDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameColorSetString">
            <summary>Sets the shim of AssetDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameGet">
            <summary>Sets the shim of AssetDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.NameSetString">
            <summary>Sets the shim of AssetDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.OwnerActionsGet">
            <summary>Sets the shim of AssetDescription.get_OwnerActions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.OwnerActionsSetListOfOwnerAction">
            <summary>Sets the shim of AssetDescription.set_OwnerActions(List`1&lt;OwnerAction&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.TypeGet">
            <summary>Sets the shim of AssetDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AllInstances.TypeSetString">
            <summary>Sets the shim of AssetDescription.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AppIdGet">
            <summary>Sets the shim of AssetDescription.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.AppIdSetInt32">
            <summary>Sets the shim of AssetDescription.set_AppId(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BackgroundColorGet">
            <summary>Sets the shim of AssetDescription.get_BackgroundColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BackgroundColorSetString">
            <summary>Sets the shim of AssetDescription.set_BackgroundColor(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.ClassIdGet">
            <summary>Sets the shim of AssetDescription.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.ClassIdSetString">
            <summary>Sets the shim of AssetDescription.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.Constructor">
            <summary>Sets the shim of AssetDescription.AssetDescription()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.DescriptionsGet">
            <summary>Sets the shim of AssetDescription.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.DescriptionsSetListOfDescription">
            <summary>Sets the shim of AssetDescription.set_Descriptions(List`1&lt;Description&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlGet">
            <summary>Sets the shim of AssetDescription.get_IconUrl()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlLargeGet">
            <summary>Sets the shim of AssetDescription.get_IconUrlLarge()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlLargeSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrlLarge(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IconUrlSetString">
            <summary>Sets the shim of AssetDescription.set_IconUrl(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.InstanceIdGet">
            <summary>Sets the shim of AssetDescription.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.InstanceIdSetString">
            <summary>Sets the shim of AssetDescription.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsCurrencyGet">
            <summary>Sets the shim of AssetDescription.get_IsCurrency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsCurrencySetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsCurrency(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsTradableGet">
            <summary>Sets the shim of AssetDescription.get_IsTradable()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.IsTradableSetBoolean">
            <summary>Sets the shim of AssetDescription.set_IsTradable(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketHashNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketHashName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketHashNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketHashName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketNameGet">
            <summary>Sets the shim of AssetDescription.get_MarketName()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.MarketNameSetString">
            <summary>Sets the shim of AssetDescription.set_MarketName(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameColorGet">
            <summary>Sets the shim of AssetDescription.get_NameColor()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameColorSetString">
            <summary>Sets the shim of AssetDescription.set_NameColor(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameGet">
            <summary>Sets the shim of AssetDescription.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.NameSetString">
            <summary>Sets the shim of AssetDescription.set_Name(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.OwnerActionsGet">
            <summary>Sets the shim of AssetDescription.get_OwnerActions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.OwnerActionsSetListOfOwnerAction">
            <summary>Sets the shim of AssetDescription.set_OwnerActions(List`1&lt;OwnerAction&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.TypeGet">
            <summary>Sets the shim of AssetDescription.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimAssetDescription.TypeSetString">
            <summary>Sets the shim of AssetDescription.set_Type(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimCEconAsset">
            <summary>Shim type of SteamTrade.TradeOffer.CEconAsset</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.#ctor(SteamTrade.TradeOffer.CEconAsset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AmountGet">
            <summary>Sets the shim of CEconAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AmountSetString">
            <summary>Sets the shim of CEconAsset.set_Amount(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AppIdGet">
            <summary>Sets the shim of CEconAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AppIdSetString">
            <summary>Sets the shim of CEconAsset.set_AppId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AssetIdGet">
            <summary>Sets the shim of CEconAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.AssetIdSetString">
            <summary>Sets the shim of CEconAsset.set_AssetId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ClassIdGet">
            <summary>Sets the shim of CEconAsset.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ClassIdSetString">
            <summary>Sets the shim of CEconAsset.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ContextIdGet">
            <summary>Sets the shim of CEconAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.ContextIdSetString">
            <summary>Sets the shim of CEconAsset.set_ContextId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.InstanceIdGet">
            <summary>Sets the shim of CEconAsset.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.InstanceIdSetString">
            <summary>Sets the shim of CEconAsset.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.IsMissingGet">
            <summary>Sets the shim of CEconAsset.get_IsMissing()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AllInstances.IsMissingSetBoolean">
            <summary>Sets the shim of CEconAsset.set_IsMissing(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AmountGet">
            <summary>Sets the shim of CEconAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AmountSetString">
            <summary>Sets the shim of CEconAsset.set_Amount(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AppIdGet">
            <summary>Sets the shim of CEconAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AppIdSetString">
            <summary>Sets the shim of CEconAsset.set_AppId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AssetIdGet">
            <summary>Sets the shim of CEconAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.AssetIdSetString">
            <summary>Sets the shim of CEconAsset.set_AssetId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ClassIdGet">
            <summary>Sets the shim of CEconAsset.get_ClassId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ClassIdSetString">
            <summary>Sets the shim of CEconAsset.set_ClassId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.Constructor">
            <summary>Sets the shim of CEconAsset.CEconAsset()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ContextIdGet">
            <summary>Sets the shim of CEconAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.ContextIdSetString">
            <summary>Sets the shim of CEconAsset.set_ContextId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.InstanceIdGet">
            <summary>Sets the shim of CEconAsset.get_InstanceId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.InstanceIdSetString">
            <summary>Sets the shim of CEconAsset.set_InstanceId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.IsMissingGet">
            <summary>Sets the shim of CEconAsset.get_IsMissing()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimCEconAsset.IsMissingSetBoolean">
            <summary>Sets the shim of CEconAsset.set_IsMissing(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimDescription">
            <summary>Shim type of SteamTrade.TradeOffer.Description</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.#ctor(SteamTrade.TradeOffer.Description)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.TypeGet">
            <summary>Sets the shim of Description.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.TypeSetString">
            <summary>Sets the shim of Description.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.ValueGet">
            <summary>Sets the shim of Description.get_Value()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.AllInstances.ValueSetString">
            <summary>Sets the shim of Description.set_Value(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.Constructor">
            <summary>Sets the shim of Description.Description()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.TypeGet">
            <summary>Sets the shim of Description.get_Type()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.TypeSetString">
            <summary>Sets the shim of Description.set_Type(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.ValueGet">
            <summary>Sets the shim of Description.get_Value()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimDescription.ValueSetString">
            <summary>Sets the shim of Description.set_Value(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions">
            <summary>Shim type of SteamTrade.TradeOffer.HtmlAgilityPackExtensions</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimHtmlAgilityPackExtensions.GetElementsByClassNameHtmlNodeString">
            <summary>Sets the shim of HtmlAgilityPackExtensions.GetElementsByClassName(HtmlNode htmlNode, String className)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse">
            <summary>Shim type of SteamTrade.TradeOffer.NewTradeOfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.#ctor(SteamTrade.TradeOffer.NewTradeOfferResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsEmailConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsEmailConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsEmailConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsEmailConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsMobileConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsMobileConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.NeedsMobileConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsMobileConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeErrorGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeErrorSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeOfferIdGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.AllInstances.TradeOfferIdSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeOfferId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.Constructor">
            <summary>Sets the shim of NewTradeOfferResponse.NewTradeOfferResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsEmailConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsEmailConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsEmailConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsEmailConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsMobileConfirmationGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_NeedsMobileConfirmation()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.NeedsMobileConfirmationSetBoolean">
            <summary>Sets the shim of NewTradeOfferResponse.set_NeedsMobileConfirmation(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeErrorGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeErrorSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeOfferIdGet">
            <summary>Sets the shim of NewTradeOfferResponse.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimNewTradeOfferResponse.TradeOfferIdSetString">
            <summary>Sets the shim of NewTradeOfferResponse.set_TradeOfferId(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffer">
            <summary>Shim type of SteamTrade.TradeOffer.Offer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.#ctor(SteamTrade.TradeOffer.Offer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AccountIdOtherGet">
            <summary>Sets the shim of Offer.get_AccountIdOther()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AccountIdOtherSetInt32">
            <summary>Sets the shim of Offer.set_AccountIdOther(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.AccountIdOtherGet">
            <summary>Sets the shim of Offer.get_AccountIdOther()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.AccountIdOtherSetInt32">
            <summary>Sets the shim of Offer.set_AccountIdOther(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ConfirmationMethodGet">
            <summary>Sets the shim of Offer.get_ConfirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ConfirmationMethodSetTradeOfferConfirmationMethod">
            <summary>Sets the shim of Offer.set_ConfirmationMethod(TradeOfferConfirmationMethod value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.EscrowEndDateGet">
            <summary>Sets the shim of Offer.get_EscrowEndDate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.EscrowEndDateSetInt32">
            <summary>Sets the shim of Offer.set_EscrowEndDate(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ExpirationTimeGet">
            <summary>Sets the shim of Offer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ExpirationTimeSetInt32">
            <summary>Sets the shim of Offer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.FromRealTimeTradeGet">
            <summary>Sets the shim of Offer.get_FromRealTimeTrade()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.FromRealTimeTradeSetBoolean">
            <summary>Sets the shim of Offer.set_FromRealTimeTrade(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.IsOurOfferGet">
            <summary>Sets the shim of Offer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.IsOurOfferSetBoolean">
            <summary>Sets the shim of Offer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToGiveGet">
            <summary>Sets the shim of Offer.get_ItemsToGive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToGiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToGive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToReceiveGet">
            <summary>Sets the shim of Offer.get_ItemsToReceive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.ItemsToReceiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToReceive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.MessageGet">
            <summary>Sets the shim of Offer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.MessageSetString">
            <summary>Sets the shim of Offer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeCreatedGet">
            <summary>Sets the shim of Offer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeCreatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeUpdatedGet">
            <summary>Sets the shim of Offer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TimeUpdatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferIdGet">
            <summary>Sets the shim of Offer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferIdSetString">
            <summary>Sets the shim of Offer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferStateGet">
            <summary>Sets the shim of Offer.get_TradeOfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.TradeOfferStateSetTradeOfferState">
            <summary>Sets the shim of Offer.set_TradeOfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.confirmationMethodGet">
            <summary>Sets the shim of Offer.get_confirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.AllInstances.confirmationMethodSetInt32">
            <summary>Sets the shim of Offer.set_confirmationMethod(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ConfirmationMethodGet">
            <summary>Sets the shim of Offer.get_ConfirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ConfirmationMethodSetTradeOfferConfirmationMethod">
            <summary>Sets the shim of Offer.set_ConfirmationMethod(TradeOfferConfirmationMethod value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.Constructor">
            <summary>Sets the shim of Offer.Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.EscrowEndDateGet">
            <summary>Sets the shim of Offer.get_EscrowEndDate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.EscrowEndDateSetInt32">
            <summary>Sets the shim of Offer.set_EscrowEndDate(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ExpirationTimeGet">
            <summary>Sets the shim of Offer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ExpirationTimeSetInt32">
            <summary>Sets the shim of Offer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.FromRealTimeTradeGet">
            <summary>Sets the shim of Offer.get_FromRealTimeTrade()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.FromRealTimeTradeSetBoolean">
            <summary>Sets the shim of Offer.set_FromRealTimeTrade(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.IsOurOfferGet">
            <summary>Sets the shim of Offer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.IsOurOfferSetBoolean">
            <summary>Sets the shim of Offer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToGiveGet">
            <summary>Sets the shim of Offer.get_ItemsToGive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToGiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToGive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToReceiveGet">
            <summary>Sets the shim of Offer.get_ItemsToReceive()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.ItemsToReceiveSetListOfCEconAsset">
            <summary>Sets the shim of Offer.set_ItemsToReceive(List`1&lt;CEconAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.MessageGet">
            <summary>Sets the shim of Offer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.MessageSetString">
            <summary>Sets the shim of Offer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeCreatedGet">
            <summary>Sets the shim of Offer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeCreatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeUpdatedGet">
            <summary>Sets the shim of Offer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TimeUpdatedSetInt32">
            <summary>Sets the shim of Offer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferIdGet">
            <summary>Sets the shim of Offer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferIdSetString">
            <summary>Sets the shim of Offer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferStateGet">
            <summary>Sets the shim of Offer.get_TradeOfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.TradeOfferStateSetTradeOfferState">
            <summary>Sets the shim of Offer.set_TradeOfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.confirmationMethodGet">
            <summary>Sets the shim of Offer.get_confirmationMethod()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffer.confirmationMethodSetInt32">
            <summary>Sets the shim of Offer.set_confirmationMethod(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken">
            <summary>Shim type of SteamTrade.TradeOffer.OfferAccessToken</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.#ctor(SteamTrade.TradeOffer.OfferAccessToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.AllInstances.TradeOfferAccessTokenGet">
            <summary>Sets the shim of OfferAccessToken.get_TradeOfferAccessToken()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.AllInstances.TradeOfferAccessTokenSetString">
            <summary>Sets the shim of OfferAccessToken.set_TradeOfferAccessToken(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.Constructor">
            <summary>Sets the shim of OfferAccessToken.OfferAccessToken()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.TradeOfferAccessTokenGet">
            <summary>Sets the shim of OfferAccessToken.get_TradeOfferAccessToken()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferAccessToken.TradeOfferAccessTokenSetString">
            <summary>Sets the shim of OfferAccessToken.set_TradeOfferAccessToken(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferResponse">
            <summary>Shim type of SteamTrade.TradeOffer.OfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.#ctor(SteamTrade.TradeOffer.OfferResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.DescriptionsGet">
            <summary>Sets the shim of OfferResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OfferResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.OfferGet">
            <summary>Sets the shim of OfferResponse.get_Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.AllInstances.OfferSetOffer">
            <summary>Sets the shim of OfferResponse.set_Offer(Offer value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.Constructor">
            <summary>Sets the shim of OfferResponse.OfferResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.DescriptionsGet">
            <summary>Sets the shim of OfferResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OfferResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.OfferGet">
            <summary>Sets the shim of OfferResponse.get_Offer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferResponse.OfferSetOffer">
            <summary>Sets the shim of OfferResponse.set_Offer(Offer value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferSession">
            <summary>Shim type of SteamTrade.TradeOffer.OfferSession</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.#ctor(SteamTrade.TradeOffer.OfferSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AcceptString">
            <summary>Sets the shim of OfferSession.Accept(String tradeOfferId)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.AcceptString">
            <summary>Sets the shim of OfferSession.Accept(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.CancelString">
            <summary>Sets the shim of OfferSession.Cancel(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.CounterOfferStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.CounterOffer(String message, SteamID otherSteamId, TradeStatus status, String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.CounterOfferStringSteamIDTradeOfferTradeStatusStringOutString">
            <summary>Sets the shim of OfferSession.CounterOffer(String message, SteamID otherSteamId, TradeStatus status, String&amp; newTradeOfferId, String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.DeclineString">
            <summary>Sets the shim of OfferSession.Decline(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.JsonSerializerSettingsGet">
            <summary>Sets the shim of OfferSession.get_JsonSerializerSettings()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.JsonSerializerSettingsSetJsonSerializerSettings">
            <summary>Sets the shim of OfferSession.set_JsonSerializerSettings(JsonSerializerSettings value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.RequestStringNameValueCollectionString">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.RequestStringNameValueCollectionStringStringStringOut">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer, String tradeOfferId, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferStringSteamIDTradeOfferTradeStatus">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferStringSteamIDTradeOfferTradeStatusStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.AllInstances.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusStringStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOfferSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.CancelString">
            <summary>Sets the shim of OfferSession.Cancel(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.ConstructorITradeOfferWebAPIISteamWeb">
            <summary>Sets the shim of OfferSession.OfferSession(ITradeOfferWebAPI webApi, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.CounterOfferStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.CounterOffer(String message, SteamID otherSteamId, TradeStatus status, String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.DeclineString">
            <summary>Sets the shim of OfferSession.Decline(String tradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.JsonSerializerSettingsGet">
            <summary>Sets the shim of OfferSession.get_JsonSerializerSettings()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.JsonSerializerSettingsSetJsonSerializerSettings">
            <summary>Sets the shim of OfferSession.set_JsonSerializerSettings(JsonSerializerSettings value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.RequestStringNameValueCollectionString">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.RequestStringNameValueCollectionStringStringStringOut">
            <summary>Sets the shim of OfferSession.Request(String url, NameValueCollection data, String referer, String tradeOfferId, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferStringSteamIDTradeOfferTradeStatus">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferStringSteamIDTradeOfferTradeStatusStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOffer(String message, SteamID otherSteamId, TradeStatus status, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusString">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.SendTradeOfferWithTokenStringSteamIDTradeOfferTradeStatusStringStringOut">
            <summary>Sets the shim of OfferSession.SendTradeOfferWithToken(String message, SteamID otherSteamId, TradeStatus status, String token, String&amp; newTradeOfferId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOfferSession.TryParseHtmlTradeErrorStringStringOut">
            <summary>Sets the shim of OfferSession.TryParseHtmlTradeError(String response, String&amp; tradeError)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffersResponse">
            <summary>Shim type of SteamTrade.TradeOffer.OffersResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.#ctor(SteamTrade.TradeOffer.OffersResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.AllOffersGet">
            <summary>Sets the shim of OffersResponse.get_AllOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.DescriptionsGet">
            <summary>Sets the shim of OffersResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OffersResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersReceivedGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersReceived()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersReceivedSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersReceived(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersSentGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersSent()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllInstances.TradeOffersSentSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersSent(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.AllOffersGet">
            <summary>Sets the shim of OffersResponse.get_AllOffers()</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.Constructor">
            <summary>Sets the shim of OffersResponse.OffersResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.DescriptionsGet">
            <summary>Sets the shim of OffersResponse.get_Descriptions()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.DescriptionsSetListOfAssetDescription">
            <summary>Sets the shim of OffersResponse.set_Descriptions(List`1&lt;AssetDescription&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersReceivedGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersReceived()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersReceivedSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersReceived(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersSentGet">
            <summary>Sets the shim of OffersResponse.get_TradeOffersSent()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOffersResponse.TradeOffersSentSetListOfOffer">
            <summary>Sets the shim of OffersResponse.set_TradeOffersSent(List`1&lt;Offer&gt; value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOwnerAction">
            <summary>Shim type of SteamTrade.TradeOffer.OwnerAction</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.#ctor(SteamTrade.TradeOffer.OwnerAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.LinkGet">
            <summary>Sets the shim of OwnerAction.get_Link()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.LinkSetString">
            <summary>Sets the shim of OwnerAction.set_Link(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.NameGet">
            <summary>Sets the shim of OwnerAction.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.AllInstances.NameSetString">
            <summary>Sets the shim of OwnerAction.set_Name(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.Constructor">
            <summary>Sets the shim of OwnerAction.OwnerAction()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.LinkGet">
            <summary>Sets the shim of OwnerAction.get_Link()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.LinkSetString">
            <summary>Sets the shim of OwnerAction.set_Link(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.NameGet">
            <summary>Sets the shim of OwnerAction.get_Name()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimOwnerAction.NameSetString">
            <summary>Sets the shim of OwnerAction.set_Name(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.#ctor(SteamTrade.TradeOffer.TradeOffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Accept">
            <summary>Sets the shim of TradeOffer.Accept()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AcceptStringOut">
            <summary>Sets the shim of TradeOffer.Accept(String&amp; tradeId)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.Accept">
            <summary>Sets the shim of TradeOffer.Accept()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.AcceptStringOut">
            <summary>Sets the shim of TradeOffer.Accept(String&amp; tradeId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.Cancel">
            <summary>Sets the shim of TradeOffer.Cancel()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.CounterOfferStringOutString">
            <summary>Sets the shim of TradeOffer.CounterOffer(String&amp; newTradeOfferId, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.Decline">
            <summary>Sets the shim of TradeOffer.Decline()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ExpirationTimeGet">
            <summary>Sets the shim of TradeOffer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ExpirationTimeSetInt32">
            <summary>Sets the shim of TradeOffer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.IsFirstOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsFirstOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.IsOurOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.IsOurOfferSetBoolean">
            <summary>Sets the shim of TradeOffer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ItemsGet">
            <summary>Sets the shim of TradeOffer.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.ItemsSetTradeOfferTradeStatus">
            <summary>Sets the shim of TradeOffer.set_Items(TradeStatus value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.MessageGet">
            <summary>Sets the shim of TradeOffer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.MessageSetString">
            <summary>Sets the shim of TradeOffer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.OfferStateGet">
            <summary>Sets the shim of TradeOffer.get_OfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.OfferStateSetTradeOfferState">
            <summary>Sets the shim of TradeOffer.set_OfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.PartnerSteamIdGet">
            <summary>Sets the shim of TradeOffer.get_PartnerSteamId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.PartnerSteamIdSetSteamID">
            <summary>Sets the shim of TradeOffer.set_PartnerSteamId(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendString">
            <summary>Sets the shim of TradeOffer.Send(String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendStringOutString">
            <summary>Sets the shim of TradeOffer.Send(String&amp; offerId, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendWithTokenStringOutStringString">
            <summary>Sets the shim of TradeOffer.SendWithToken(String&amp; offerId, String token, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SendWithTokenStringString">
            <summary>Sets the shim of TradeOffer.SendWithToken(String token, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SessionGet">
            <summary>Sets the shim of TradeOffer.get_Session()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.SessionSetOfferSession">
            <summary>Sets the shim of TradeOffer.set_Session(OfferSession value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeCreatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeCreatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeUpdatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TimeUpdatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TradeOfferIdGet">
            <summary>Sets the shim of TradeOffer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.AllInstances.TradeOfferIdSetString">
            <summary>Sets the shim of TradeOffer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Cancel">
            <summary>Sets the shim of TradeOffer.Cancel()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ConstructorOfferSessionOffer">
            <summary>Sets the shim of TradeOffer.TradeOffer(OfferSession session, Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ConstructorOfferSessionSteamID">
            <summary>Sets the shim of TradeOffer.TradeOffer(OfferSession session, SteamID partnerSteamdId)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.Decline">
            <summary>Sets the shim of TradeOffer.Decline()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ExpirationTimeGet">
            <summary>Sets the shim of TradeOffer.get_ExpirationTime()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ExpirationTimeSetInt32">
            <summary>Sets the shim of TradeOffer.set_ExpirationTime(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.IsFirstOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsFirstOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.IsOurOfferGet">
            <summary>Sets the shim of TradeOffer.get_IsOurOffer()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.IsOurOfferSetBoolean">
            <summary>Sets the shim of TradeOffer.set_IsOurOffer(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ItemsGet">
            <summary>Sets the shim of TradeOffer.get_Items()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ItemsSetTradeOfferTradeStatus">
            <summary>Sets the shim of TradeOffer.set_Items(TradeStatus value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.MessageGet">
            <summary>Sets the shim of TradeOffer.get_Message()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.MessageSetString">
            <summary>Sets the shim of TradeOffer.set_Message(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.OfferStateGet">
            <summary>Sets the shim of TradeOffer.get_OfferState()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.OfferStateSetTradeOfferState">
            <summary>Sets the shim of TradeOffer.set_OfferState(TradeOfferState value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.PartnerSteamIdGet">
            <summary>Sets the shim of TradeOffer.get_PartnerSteamId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.PartnerSteamIdSetSteamID">
            <summary>Sets the shim of TradeOffer.set_PartnerSteamId(SteamID value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SendString">
            <summary>Sets the shim of TradeOffer.Send(String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SendWithTokenStringString">
            <summary>Sets the shim of TradeOffer.SendWithToken(String token, String message)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SessionGet">
            <summary>Sets the shim of TradeOffer.get_Session()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.SessionSetOfferSession">
            <summary>Sets the shim of TradeOffer.set_Session(OfferSession value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeAssetsConverter</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeAssetsConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances.CanConvertType">
            <summary>Sets the shim of TradeAssetsConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.CanConvertType">
            <summary>Sets the shim of TradeAssetsConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.Constructor">
            <summary>Sets the shim of TradeAssetsConverter.TradeAssetsConverter()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeAssetsConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of TradeAssetsConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatus</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AddTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.AddTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.AddTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.GetMyItems">
            <summary>Sets the shim of TradeStatus.GetMyItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.GetTheirItems">
            <summary>Sets the shim of TradeStatus.GetTheirItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.MyOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.MyOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_MyOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.NewVersionGet">
            <summary>Sets the shim of TradeStatus.get_NewVersion()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.NewVersionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_NewVersion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.RemoveTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.ShouldUpdateBoolean">
            <summary>Sets the shim of TradeStatus.ShouldUpdate(Boolean check)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TheirOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_TheirOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TheirOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_TheirOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetMyCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetMyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetTheirCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.TryGetTheirItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.VersionGet">
            <summary>Sets the shim of TradeStatus.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.AllInstances.VersionSetInt32">
            <summary>Sets the shim of TradeStatus.set_Version(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.Constructor">
            <summary>Sets the shim of TradeStatus.TradeStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.ConstructorListOfTradeStatusUserTradeOfferTradeAssetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatus.TradeStatus(List`1&lt;TradeAsset&gt; myItems, List`1&lt;TradeAsset&gt; theirItems)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.GetMyItems">
            <summary>Sets the shim of TradeStatus.GetMyItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.GetTheirItems">
            <summary>Sets the shim of TradeStatus.GetTheirItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.MyOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_MyOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.MyOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_MyOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.NewVersionGet">
            <summary>Sets the shim of TradeStatus.get_NewVersion()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.NewVersionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_NewVersion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveMyCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveMyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveTheirCurrencyItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.RemoveTheirItemInt32Int64Int64Int64">
            <summary>Sets the shim of TradeStatus.RemoveTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.ShouldUpdateBoolean">
            <summary>Sets the shim of TradeStatus.ShouldUpdate(Boolean check)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TheirOfferedItemsGet">
            <summary>Sets the shim of TradeStatus.get_TheirOfferedItems()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TheirOfferedItemsSetTradeOfferTradeStatusUser">
            <summary>Sets the shim of TradeStatus.set_TheirOfferedItems(TradeStatusUser value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetMyCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetMyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetMyItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetTheirCurrencyItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirCurrencyItem(Int32 appId, Int64 contextId, Int64 currencyId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.TryGetTheirItemInt32Int64Int64Int64TradeStatusUserTradeOfferTradeAssetOut">
            <summary>Sets the shim of TradeStatus.TryGetTheirItem(Int32 appId, Int64 contextId, Int64 assetId, Int64 amount, TradeAsset&amp; asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.VersionGet">
            <summary>Sets the shim of TradeStatus.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatus.VersionSetInt32">
            <summary>Sets the shim of TradeStatus.set_Version(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatusUser</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatusUser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AddCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AddItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddItem(TradeAsset asset)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AddCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AddItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.AddItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AssetsGet">
            <summary>Sets the shim of TradeStatusUser.get_Assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.AssetsSetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Assets(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.ContainsItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.ContainsItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.CurrencyGet">
            <summary>Sets the shim of TradeStatusUser.get_Currency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.CurrencySetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Currency(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.IsReadyGet">
            <summary>Sets the shim of TradeStatusUser.get_IsReady()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.IsReadySetBoolean">
            <summary>Sets the shim of TradeStatusUser.set_IsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.RemoveCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AllInstances.RemoveItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AssetsGet">
            <summary>Sets the shim of TradeStatusUser.get_Assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.AssetsSetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Assets(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.Constructor">
            <summary>Sets the shim of TradeStatusUser.TradeStatusUser()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ContainsItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.ContainsItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.CurrencyGet">
            <summary>Sets the shim of TradeStatusUser.get_Currency()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.CurrencySetListOfTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.set_Currency(List`1&lt;TradeAsset&gt; value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.IsReadyGet">
            <summary>Sets the shim of TradeStatusUser.get_IsReady()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.IsReadySetBoolean">
            <summary>Sets the shim of TradeStatusUser.set_IsReady(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.RemoveCurrencyItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveCurrencyItem(TradeAsset asset)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.RemoveItemTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeStatusUser.RemoveItem(TradeAsset asset)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatusUser+TradeAsset</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatusUser.TradeAsset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AmountGet">
            <summary>Sets the shim of TradeAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AmountSetInt64">
            <summary>Sets the shim of TradeAsset.set_Amount(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AppIdGet">
            <summary>Sets the shim of TradeAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AppIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AppId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AssetIdGet">
            <summary>Sets the shim of TradeAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.AssetIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AssetId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ContextIdGet">
            <summary>Sets the shim of TradeAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ContextIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_ContextId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CreateCurrencyAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateCurrencyAsset(Int64 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CreateItemAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateItemAsset(Int64 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CurrencyIdGet">
            <summary>Sets the shim of TradeAsset.get_CurrencyId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.CurrencyIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_CurrencyId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.EqualsTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeAsset.Equals(TradeAsset other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ShouldSerializeAssetId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeAssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AllInstances.ShouldSerializeCurrencyId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeCurrencyId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AmountGet">
            <summary>Sets the shim of TradeAsset.get_Amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AmountSetInt64">
            <summary>Sets the shim of TradeAsset.set_Amount(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AppIdGet">
            <summary>Sets the shim of TradeAsset.get_AppId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AppIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AppId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AssetIdGet">
            <summary>Sets the shim of TradeAsset.get_AssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.AssetIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_AssetId(Int64 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.Bind(System.IEquatable{SteamTrade.TradeOffer.TradeOffer.TradeStatusUser.TradeAsset})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.Constructor">
            <summary>Sets the shim of TradeAsset.TradeAsset()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ContextIdGet">
            <summary>Sets the shim of TradeAsset.get_ContextId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ContextIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_ContextId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CreateCurrencyAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateCurrencyAsset(Int64 appId, Int64 contextId, Int64 currencyId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CreateItemAssetInt64Int64Int64Int64">
            <summary>Sets the shim of TradeAsset.CreateItemAsset(Int64 appId, Int64 contextId, Int64 assetId, Int64 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CurrencyIdGet">
            <summary>Sets the shim of TradeAsset.get_CurrencyId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.CurrencyIdSetInt64">
            <summary>Sets the shim of TradeAsset.set_CurrencyId(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.EqualsTradeStatusUserTradeOfferTradeAsset">
            <summary>Sets the shim of TradeAsset.Equals(TradeAsset other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ShouldSerializeAssetId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeAssetId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimTradeAsset.ShouldSerializeCurrencyId">
            <summary>Sets the shim of TradeAsset.ShouldSerializeCurrencyId()</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffer+TradeStatusUser+ValueStringConverter</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.#ctor(SteamTrade.TradeOffer.TradeOffer.TradeStatusUser.ValueStringConverter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances.CanConvertType">
            <summary>Sets the shim of ValueStringConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.CanConvertType">
            <summary>Sets the shim of ValueStringConverter.CanConvert(Type objectType)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.Constructor">
            <summary>Sets the shim of ValueStringConverter.ValueStringConverter()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.ReadJson(JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.ShimTradeStatusUser.ShimValueStringConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Sets the shim of ValueStringConverter.WriteJson(JsonWriter writer, Object value, JsonSerializer serializer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeCreatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeCreated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeCreatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeCreated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeUpdatedGet">
            <summary>Sets the shim of TradeOffer.get_TimeUpdated()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TimeUpdatedSetInt32">
            <summary>Sets the shim of TradeOffer.set_TimeUpdated(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TradeOfferIdGet">
            <summary>Sets the shim of TradeOffer.get_TradeOfferId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffer.TradeOfferIdSetString">
            <summary>Sets the shim of TradeOffer.set_TradeOfferId(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferAcceptResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.#ctor(SteamTrade.TradeOffer.TradeOfferAcceptResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AcceptedGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_Accepted()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AcceptedSetBoolean">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_Accepted(Boolean value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.AcceptedGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_Accepted()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.AcceptedSetBoolean">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_Accepted(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeErrorGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeErrorSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeIdGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.AllInstances.TradeIdSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeId(String value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.Constructor">
            <summary>Sets the shim of TradeOfferAcceptResponse.TradeOfferAcceptResponse()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeErrorGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeError()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeErrorSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeError(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeIdGet">
            <summary>Sets the shim of TradeOfferAcceptResponse.get_TradeId()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferAcceptResponse.TradeIdSetString">
            <summary>Sets the shim of TradeOfferAcceptResponse.set_TradeId(String value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferManager</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.#ctor(SteamTrade.TradeOffer.TradeOfferManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AddTradeOffersToQueueOffersResponse">
            <summary>Sets the shim of TradeOfferManager.AddTradeOffersToQueue(OffersResponse offers)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.AddTradeOffersToQueueOffersResponse">
            <summary>Sets the shim of TradeOfferManager.AddTradeOffersToQueue(OffersResponse offers)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.EnqueueUpdatedOffers">
            <summary>Sets the shim of TradeOfferManager.EnqueueUpdatedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.GetUnixTimeStampDateTime">
            <summary>Sets the shim of TradeOfferManager.GetUnixTimeStamp(DateTime dateTime)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.HandleNextPendingTradeOfferUpdate">
            <summary>Sets the shim of TradeOfferManager.HandleNextPendingTradeOfferUpdate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.HandleTradeOfferUpdateOffer">
            <summary>Sets the shim of TradeOfferManager.HandleTradeOfferUpdate(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.IsOfferValidOffer">
            <summary>Sets the shim of TradeOfferManager.IsOfferValid(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.LastTimeCheckedOffersGet">
            <summary>Sets the shim of TradeOfferManager.get_LastTimeCheckedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.LastTimeCheckedOffersSetDateTime">
            <summary>Sets the shim of TradeOfferManager.set_LastTimeCheckedOffers(DateTime value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.NewOfferSteamID">
            <summary>Sets the shim of TradeOfferManager.NewOffer(SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.OnTradeOfferUpdatedAddTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.add_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.OnTradeOfferUpdatedRemoveTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.remove_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.SendOfferToHandlerOffer">
            <summary>Sets the shim of TradeOfferManager.SendOfferToHandler(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.AllInstances.TryGetOfferStringTradeOfferOut">
            <summary>Sets the shim of TradeOfferManager.TryGetOffer(String offerId, TradeOffer&amp; tradeOffer)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.ConstructorStringISteamWeb">
            <summary>Sets the shim of TradeOfferManager.TradeOfferManager(String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.EnqueueUpdatedOffers">
            <summary>Sets the shim of TradeOfferManager.EnqueueUpdatedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.GetUnixTimeStampDateTime">
            <summary>Sets the shim of TradeOfferManager.GetUnixTimeStamp(DateTime dateTime)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.HandleNextPendingTradeOfferUpdate">
            <summary>Sets the shim of TradeOfferManager.HandleNextPendingTradeOfferUpdate()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.HandleTradeOfferUpdateOffer">
            <summary>Sets the shim of TradeOfferManager.HandleTradeOfferUpdate(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.IsOfferValidOffer">
            <summary>Sets the shim of TradeOfferManager.IsOfferValid(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.LastTimeCheckedOffersGet">
            <summary>Sets the shim of TradeOfferManager.get_LastTimeCheckedOffers()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.LastTimeCheckedOffersSetDateTime">
            <summary>Sets the shim of TradeOfferManager.set_LastTimeCheckedOffers(DateTime value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.NewOfferSteamID">
            <summary>Sets the shim of TradeOfferManager.NewOffer(SteamID other)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.OnTradeOfferUpdatedAddTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.add_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.OnTradeOfferUpdatedRemoveTradeOfferManagerTradeOfferUpdatedHandler">
            <summary>Sets the shim of TradeOfferManager.remove_OnTradeOfferUpdated(TradeOfferUpdatedHandler value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.SendOfferToHandlerOffer">
            <summary>Sets the shim of TradeOfferManager.SendOfferToHandler(Offer offer)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferManager.TryGetOfferStringTradeOfferOut">
            <summary>Sets the shim of TradeOfferManager.TryGetOffer(String offerId, TradeOffer&amp; tradeOffer)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferWeb</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.#ctor(SteamTrade.TradeOffer.TradeOfferWeb)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWeb.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWeb.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetEnglishSteamWeb">
            <summary>Sets the shim of TradeOfferWeb.GetEnglishSteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWeb.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetTradeUrlsIfNull">
            <summary>Sets the shim of TradeOfferWeb.GetTradeUrlsIfNull()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.GetUnixTimestampDateTime">
            <summary>Sets the shim of TradeOfferWeb.GetUnixTimestamp(DateTime timeUpdated)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.AllInstances.ParseTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.ParseTradeOffer(String html)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.Bind(SteamTrade.TradeOffer.ITradeOfferWebAPI)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.ConstructorISteamWeb">
            <summary>Sets the shim of TradeOfferWeb.TradeOfferWeb(ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWeb.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWeb.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetEnglishSteamWeb">
            <summary>Sets the shim of TradeOfferWeb.GetEnglishSteamWeb()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWeb.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWeb.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetTradeUrlsIfNull">
            <summary>Sets the shim of TradeOfferWeb.GetTradeUrlsIfNull()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.GetUnixTimestampDateTime">
            <summary>Sets the shim of TradeOfferWeb.GetUnixTimestamp(DateTime timeUpdated)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWeb.ParseTradeOfferString">
            <summary>Sets the shim of TradeOfferWeb.ParseTradeOffer(String html)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOfferWebAPI</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.#ctor(SteamTrade.TradeOffer.TradeOfferWebAPI)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.CancelTradeOfferUInt64">
            <summary>Sets the shim of TradeOfferWebAPI.CancelTradeOffer(UInt64 tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.DeclineTradeOfferUInt64">
            <summary>Sets the shim of TradeOfferWebAPI.DeclineTradeOffer(UInt64 tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.AllInstances.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.Bind(SteamTrade.TradeOffer.ITradeOfferWebAPI)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.BoolConverterBoolean">
            <summary>Sets the shim of TradeOfferWebAPI.BoolConverter(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.CancelTradeOfferUInt64">
            <summary>Sets the shim of TradeOfferWebAPI.CancelTradeOffer(UInt64 tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.ConstructorStringISteamWeb">
            <summary>Sets the shim of TradeOfferWebAPI.TradeOfferWebAPI(String apiKey, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.DeclineTradeOfferUInt64">
            <summary>Sets the shim of TradeOfferWebAPI.DeclineTradeOffer(UInt64 tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the shim of TradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetAllTradeOffersStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetOfferStateString">
            <summary>Sets the shim of TradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeOfferString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOfferWebAPI.GetTradeOffersSummaryUInt32">
            <summary>Sets the shim of TradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary">
            <summary>Shim type of SteamTrade.TradeOffer.TradeOffersSummary</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.#ctor(SteamTrade.TradeOffer.TradeOffersSummary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.HistoricalSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewlyAcceptedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewlyAcceptedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.NewlyAcceptedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewlyAcceptedSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.PendingSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.AllInstances.UpdatedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedSentCount(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.Constructor">
            <summary>Sets the shim of TradeOffersSummary.TradeOffersSummary()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_HistoricalSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.HistoricalSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_HistoricalSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewlyAcceptedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_NewlyAcceptedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.NewlyAcceptedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_NewlyAcceptedSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_PendingSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.PendingSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_PendingSentCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedReceivedCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedReceivedCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedReceivedCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedReceivedCount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedSentCountGet">
            <summary>Sets the shim of TradeOffersSummary.get_UpdatedSentCount()</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.ShimTradeOffersSummary.UpdatedSentCountSetInt32">
            <summary>Sets the shim of TradeOffersSummary.set_UpdatedSentCount(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubApiResponse`1">
            <summary>Stub type of SteamTrade.TradeOffer.ApiResponse`1</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.InitializeStub">
            <summary>Initializes a new instance of type StubApiResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubApiResponse`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubAssetDescription">
            <summary>Stub type of SteamTrade.TradeOffer.AssetDescription</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubAssetDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubAssetDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubAssetDescription.InitializeStub">
            <summary>Initializes a new instance of type StubAssetDescription</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubAssetDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubAssetDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubCEconAsset">
            <summary>Stub type of SteamTrade.TradeOffer.CEconAsset</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubCEconAsset.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubCEconAsset.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubCEconAsset.InitializeStub">
            <summary>Initializes a new instance of type StubCEconAsset</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubCEconAsset.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubCEconAsset.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubDescription">
            <summary>Stub type of SteamTrade.TradeOffer.Description</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubDescription.InitializeStub">
            <summary>Initializes a new instance of type StubDescription</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI">
            <summary>Stub type of SteamTrade.TradeOffer.ITradeOfferWebAPI</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.#ctor">
            <summary>Initializes a new instance of type StubITradeOfferWebAPI</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetActiveTradeOffersBooleanBooleanBooleanString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetAllTradeOffersStringString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetOfferStateString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetTradeOfferString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetTradeOffersBooleanBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="F:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.GetTradeOffersSummaryUInt32">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetActiveTradeOffers(System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetActiveTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, String language)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetAllTradeOffers(System.String,System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetAllTradeOffers(String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetOfferState(System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetOfferState(String tradeofferid)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetTradeOffer(System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffer(String tradeofferid)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetTradeOffers(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffers(Boolean getSentOffers, Boolean getReceivedOffers, Boolean getDescriptions, Boolean activeOnly, Boolean historicalOnly, String timeHistoricalCutoff, String language)</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubITradeOfferWebAPI.SteamTrade#TradeOffer#ITradeOfferWebAPI#GetTradeOffersSummary(System.UInt32)">
            <summary>Sets the stub of ITradeOfferWebAPI.GetTradeOffersSummary(UInt32 timeLastVisit)</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse">
            <summary>Stub type of SteamTrade.TradeOffer.NewTradeOfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.InitializeStub">
            <summary>Initializes a new instance of type StubNewTradeOfferResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubNewTradeOfferResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOffer">
            <summary>Stub type of SteamTrade.TradeOffer.Offer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffer.InitializeStub">
            <summary>Initializes a new instance of type StubOffer</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken">
            <summary>Stub type of SteamTrade.TradeOffer.OfferAccessToken</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.InitializeStub">
            <summary>Initializes a new instance of type StubOfferAccessToken</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferAccessToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOfferResponse">
            <summary>Stub type of SteamTrade.TradeOffer.OfferResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferResponse.InitializeStub">
            <summary>Initializes a new instance of type StubOfferResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOfferSession">
            <summary>Stub type of SteamTrade.TradeOffer.OfferSession</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferSession.#ctor(SteamTrade.TradeOffer.ITradeOfferWebAPI,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOfferSession.InitializeStub">
            <summary>Initializes a new instance of type StubOfferSession</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOfferSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOffersResponse">
            <summary>Stub type of SteamTrade.TradeOffer.OffersResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffersResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffersResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOffersResponse.InitializeStub">
            <summary>Initializes a new instance of type StubOffersResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffersResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOffersResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubOwnerAction">
            <summary>Stub type of SteamTrade.TradeOffer.OwnerAction</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOwnerAction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOwnerAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubOwnerAction.InitializeStub">
            <summary>Initializes a new instance of type StubOwnerAction</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOwnerAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubOwnerAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOffer">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOffer</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffer.#ctor(SteamTrade.TradeOffer.OfferSession,SteamKit2.SteamID)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffer.#ctor(SteamTrade.TradeOffer.OfferSession,SteamTrade.TradeOffer.Offer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffer.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOffer</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferAcceptResponse</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferAcceptResponse</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferAcceptResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferManager</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.#ctor(System.String,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferManager</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferWeb</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.#ctor(SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferWeb</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWeb.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOfferWebAPI</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.#ctor(System.String,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOfferWebAPI</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOfferWebAPI.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary">
            <summary>Stub type of SteamTrade.TradeOffer.TradeOffersSummary</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.InitializeStub">
            <summary>Initializes a new instance of type StubTradeOffersSummary</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeOffer.Fakes.StubTradeOffersSummary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeEvent</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.#ctor(SteamTrade.TradeWebAPI.TradeEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.EqualsTradeEvent">
            <summary>Sets the shim of TradeEvent.Equals(TradeEvent other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.actionGet">
            <summary>Sets the shim of TradeEvent.get_action()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.actionSetInt32">
            <summary>Sets the shim of TradeEvent.set_action(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.appidGet">
            <summary>Sets the shim of TradeEvent.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.appidSetInt32">
            <summary>Sets the shim of TradeEvent.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.assetidGet">
            <summary>Sets the shim of TradeEvent.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.assetidSetUInt64">
            <summary>Sets the shim of TradeEvent.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.contextidGet">
            <summary>Sets the shim of TradeEvent.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.contextidSetInt64">
            <summary>Sets the shim of TradeEvent.set_contextid(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.steamidGet">
            <summary>Sets the shim of TradeEvent.get_steamid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.steamidSetString">
            <summary>Sets the shim of TradeEvent.set_steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.textGet">
            <summary>Sets the shim of TradeEvent.get_text()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.textSetString">
            <summary>Sets the shim of TradeEvent.set_text(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.timestampGet">
            <summary>Sets the shim of TradeEvent.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.AllInstances.timestampSetUInt64">
            <summary>Sets the shim of TradeEvent.set_timestamp(UInt64 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeEvent})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.Constructor">
            <summary>Sets the shim of TradeEvent.TradeEvent()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.EqualsTradeEvent">
            <summary>Sets the shim of TradeEvent.Equals(TradeEvent other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.actionGet">
            <summary>Sets the shim of TradeEvent.get_action()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.actionSetInt32">
            <summary>Sets the shim of TradeEvent.set_action(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.appidGet">
            <summary>Sets the shim of TradeEvent.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.appidSetInt32">
            <summary>Sets the shim of TradeEvent.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.assetidGet">
            <summary>Sets the shim of TradeEvent.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.assetidSetUInt64">
            <summary>Sets the shim of TradeEvent.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.contextidGet">
            <summary>Sets the shim of TradeEvent.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.contextidSetInt64">
            <summary>Sets the shim of TradeEvent.set_contextid(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.steamidGet">
            <summary>Sets the shim of TradeEvent.get_steamid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.steamidSetString">
            <summary>Sets the shim of TradeEvent.set_steamid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.textGet">
            <summary>Sets the shim of TradeEvent.get_text()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.textSetString">
            <summary>Sets the shim of TradeEvent.set_text(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.timestampGet">
            <summary>Sets the shim of TradeEvent.get_timestamp()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeEvent.timestampSetUInt64">
            <summary>Sets the shim of TradeEvent.set_timestamp(UInt64 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeSession</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.#ctor(SteamTrade.TradeWebAPI.TradeSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AcceptTradeWebCmd">
            <summary>Sets the shim of TradeSession.AcceptTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AddItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.AddItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.AcceptTradeWebCmd">
            <summary>Sets the shim of TradeSession.AcceptTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.AddItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.AddItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.CancelTradeWebCmd">
            <summary>Sets the shim of TradeSession.CancelTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.FetchStringStringNameValueCollection">
            <summary>Sets the shim of TradeSession.Fetch(String url, String method, NameValueCollection data)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.GetForeignInventorySteamID">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.GetForeignInventorySteamIDInt64Int32">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId, Int64 contextId, Int32 appid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.GetStatus">
            <summary>Sets the shim of TradeSession.GetStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.Init">
            <summary>Sets the shim of TradeSession.Init()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.IsSuccessObject">
            <summary>Sets the shim of TradeSession.IsSuccess(Object json)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.LogPosGet">
            <summary>Sets the shim of TradeSession.get_LogPos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.LogPosSetInt32">
            <summary>Sets the shim of TradeSession.set_LogPos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.RemoveItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.RemoveItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.SendMessageWebCmdString">
            <summary>Sets the shim of TradeSession.SendMessageWebCmd(String msg)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.SetReadyWebCmdBoolean">
            <summary>Sets the shim of TradeSession.SetReadyWebCmd(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.VersionGet">
            <summary>Sets the shim of TradeSession.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.AllInstances.VersionSetInt32">
            <summary>Sets the shim of TradeSession.set_Version(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.CancelTradeWebCmd">
            <summary>Sets the shim of TradeSession.CancelTradeWebCmd()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.ConstructorSteamIDISteamWeb">
            <summary>Sets the shim of TradeSession.TradeSession(SteamID otherSid, ISteamWeb steamWeb)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.FetchStringStringNameValueCollection">
            <summary>Sets the shim of TradeSession.Fetch(String url, String method, NameValueCollection data)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.GetForeignInventorySteamID">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.GetForeignInventorySteamIDInt64Int32">
            <summary>Sets the shim of TradeSession.GetForeignInventory(SteamID otherId, Int64 contextId, Int32 appid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.GetStatus">
            <summary>Sets the shim of TradeSession.GetStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.Init">
            <summary>Sets the shim of TradeSession.Init()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.IsSuccessObject">
            <summary>Sets the shim of TradeSession.IsSuccess(Object json)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.LogPosGet">
            <summary>Sets the shim of TradeSession.get_LogPos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.LogPosSetInt32">
            <summary>Sets the shim of TradeSession.set_LogPos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.RemoveItemWebCmdUInt64Int32Int32Int64">
            <summary>Sets the shim of TradeSession.RemoveItemWebCmd(UInt64 itemid, Int32 slot, Int32 appid, Int64 contextid)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.SendMessageWebCmdString">
            <summary>Sets the shim of TradeSession.SendMessageWebCmd(String msg)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.SetReadyWebCmdBoolean">
            <summary>Sets the shim of TradeSession.SetReadyWebCmd(Boolean ready)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.VersionGet">
            <summary>Sets the shim of TradeSession.get_Version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeSession.VersionSetInt32">
            <summary>Sets the shim of TradeSession.set_Version(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeStatus</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.#ctor(SteamTrade.TradeWebAPI.TradeStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.GetAllEvents">
            <summary>Sets the shim of TradeStatus.GetAllEvents()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.GetLastEvent">
            <summary>Sets the shim of TradeStatus.GetLastEvent()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.errorGet">
            <summary>Sets the shim of TradeStatus.get_error()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.errorSetString">
            <summary>Sets the shim of TradeStatus.set_error(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.eventsGet">
            <summary>Sets the shim of TradeStatus.get_events()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.eventsSetTradeEventArray">
            <summary>Sets the shim of TradeStatus.set_events(TradeEvent[] value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.logposGet">
            <summary>Sets the shim of TradeStatus.get_logpos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.logposSetInt32">
            <summary>Sets the shim of TradeStatus.set_logpos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.meGet">
            <summary>Sets the shim of TradeStatus.get_me()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.meSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_me(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.newversionGet">
            <summary>Sets the shim of TradeStatus.get_newversion()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.newversionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_newversion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.successGet">
            <summary>Sets the shim of TradeStatus.get_success()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.successSetBoolean">
            <summary>Sets the shim of TradeStatus.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.themGet">
            <summary>Sets the shim of TradeStatus.get_them()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.themSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_them(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.trade_statusGet">
            <summary>Sets the shim of TradeStatus.get_trade_status()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.trade_statusSetInt64">
            <summary>Sets the shim of TradeStatus.set_trade_status(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.tradeidGet">
            <summary>Sets the shim of TradeStatus.get_tradeid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.tradeidSetString">
            <summary>Sets the shim of TradeStatus.set_tradeid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.versionGet">
            <summary>Sets the shim of TradeStatus.get_version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.AllInstances.versionSetInt32">
            <summary>Sets the shim of TradeStatus.set_version(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.Constructor">
            <summary>Sets the shim of TradeStatus.TradeStatus()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.GetAllEvents">
            <summary>Sets the shim of TradeStatus.GetAllEvents()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.GetLastEvent">
            <summary>Sets the shim of TradeStatus.GetLastEvent()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.errorGet">
            <summary>Sets the shim of TradeStatus.get_error()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.errorSetString">
            <summary>Sets the shim of TradeStatus.set_error(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.eventsGet">
            <summary>Sets the shim of TradeStatus.get_events()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.eventsSetTradeEventArray">
            <summary>Sets the shim of TradeStatus.set_events(TradeEvent[] value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.logposGet">
            <summary>Sets the shim of TradeStatus.get_logpos()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.logposSetInt32">
            <summary>Sets the shim of TradeStatus.set_logpos(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.meGet">
            <summary>Sets the shim of TradeStatus.get_me()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.meSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_me(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.newversionGet">
            <summary>Sets the shim of TradeStatus.get_newversion()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.newversionSetBoolean">
            <summary>Sets the shim of TradeStatus.set_newversion(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.successGet">
            <summary>Sets the shim of TradeStatus.get_success()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.successSetBoolean">
            <summary>Sets the shim of TradeStatus.set_success(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.themGet">
            <summary>Sets the shim of TradeStatus.get_them()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.themSetTradeUserObj">
            <summary>Sets the shim of TradeStatus.set_them(TradeUserObj value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.trade_statusGet">
            <summary>Sets the shim of TradeStatus.get_trade_status()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.trade_statusSetInt64">
            <summary>Sets the shim of TradeStatus.set_trade_status(Int64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.tradeidGet">
            <summary>Sets the shim of TradeStatus.get_tradeid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.tradeidSetString">
            <summary>Sets the shim of TradeStatus.set_tradeid(String value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.versionGet">
            <summary>Sets the shim of TradeStatus.get_version()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeStatus.versionSetInt32">
            <summary>Sets the shim of TradeStatus.set_version(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeUserAssets</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.#ctor(SteamTrade.TradeWebAPI.TradeUserAssets)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.CompareToTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.CompareTo(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.EqualsObject">
            <summary>Sets the shim of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.EqualsTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.Equals(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.GetHashCode01">
            <summary>Sets the shim of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.ToString01">
            <summary>Sets the shim of TradeUserAssets.ToString()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.amountGet">
            <summary>Sets the shim of TradeUserAssets.get_amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.amountSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_amount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.appidGet">
            <summary>Sets the shim of TradeUserAssets.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.appidSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.assetidGet">
            <summary>Sets the shim of TradeUserAssets.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.assetidSetUInt64">
            <summary>Sets the shim of TradeUserAssets.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.contextidGet">
            <summary>Sets the shim of TradeUserAssets.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.AllInstances.contextidSetInt64">
            <summary>Sets the shim of TradeUserAssets.set_contextid(Int64 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.Bind(System.IComparable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.Bind(System.IEquatable{SteamTrade.TradeWebAPI.TradeUserAssets})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.CompareToTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.CompareTo(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.ConstructorInt32Int64UInt64Int32">
            <summary>Sets the shim of TradeUserAssets.TradeUserAssets(Int32 appid, Int64 contextid, UInt64 assetid, Int32 amount)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.EqualsObject">
            <summary>Sets the shim of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.EqualsTradeUserAssets">
            <summary>Sets the shim of TradeUserAssets.Equals(TradeUserAssets other)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.GetHashCode">
            <summary>Sets the shim of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.ToString">
            <summary>Sets the shim of TradeUserAssets.ToString()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.amountGet">
            <summary>Sets the shim of TradeUserAssets.get_amount()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.amountSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_amount(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.appidGet">
            <summary>Sets the shim of TradeUserAssets.get_appid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.appidSetInt32">
            <summary>Sets the shim of TradeUserAssets.set_appid(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.assetidGet">
            <summary>Sets the shim of TradeUserAssets.get_assetid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.assetidSetUInt64">
            <summary>Sets the shim of TradeUserAssets.set_assetid(UInt64 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.contextidGet">
            <summary>Sets the shim of TradeUserAssets.get_contextid()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserAssets.contextidSetInt64">
            <summary>Sets the shim of TradeUserAssets.set_contextid(Int64 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj">
            <summary>Shim type of SteamTrade.TradeWebAPI.TradeUserObj</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.#ctor(SteamTrade.TradeWebAPI.TradeUserObj)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.GetAssets">
            <summary>Sets the shim of TradeUserObj.GetAssets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.assetsGet">
            <summary>Sets the shim of TradeUserObj.get_assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.assetsSetObject">
            <summary>Sets the shim of TradeUserObj.set_assets(Object value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.confirmedGet">
            <summary>Sets the shim of TradeUserObj.get_confirmed()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.confirmedSetInt32">
            <summary>Sets the shim of TradeUserObj.set_confirmed(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.connection_pendingGet">
            <summary>Sets the shim of TradeUserObj.get_connection_pending()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.connection_pendingSetBoolean">
            <summary>Sets the shim of TradeUserObj.set_connection_pending(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.readyGet">
            <summary>Sets the shim of TradeUserObj.get_ready()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.readySetInt32">
            <summary>Sets the shim of TradeUserObj.set_ready(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.sec_since_touchGet">
            <summary>Sets the shim of TradeUserObj.get_sec_since_touch()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.AllInstances.sec_since_touchSetInt32">
            <summary>Sets the shim of TradeUserObj.set_sec_since_touch(Int32 value)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.Constructor">
            <summary>Sets the shim of TradeUserObj.TradeUserObj()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.GetAssets">
            <summary>Sets the shim of TradeUserObj.GetAssets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.assetsGet">
            <summary>Sets the shim of TradeUserObj.get_assets()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.assetsSetObject">
            <summary>Sets the shim of TradeUserObj.set_assets(Object value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.confirmedGet">
            <summary>Sets the shim of TradeUserObj.get_confirmed()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.confirmedSetInt32">
            <summary>Sets the shim of TradeUserObj.set_confirmed(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.connection_pendingGet">
            <summary>Sets the shim of TradeUserObj.get_connection_pending()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.connection_pendingSetBoolean">
            <summary>Sets the shim of TradeUserObj.set_connection_pending(Boolean value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.readyGet">
            <summary>Sets the shim of TradeUserObj.get_ready()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.readySetInt32">
            <summary>Sets the shim of TradeUserObj.set_ready(Int32 value)</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.sec_since_touchGet">
            <summary>Sets the shim of TradeUserObj.get_sec_since_touch()</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.ShimTradeUserObj.sec_since_touchSetInt32">
            <summary>Sets the shim of TradeUserObj.set_sec_since_touch(Int32 value)</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeEvent</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTradeEvent</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeSession">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeSession</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.#ctor(SteamKit2.SteamID,SteamTrade.ISteamWeb)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.InitializeStub">
            <summary>Initializes a new instance of type StubTradeSession</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeStatus</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.InitializeStub">
            <summary>Initializes a new instance of type StubTradeStatus</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeStatus.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeUserAssets</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.#ctor(System.Int32,System.Int64,System.UInt64,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.Equals(System.Object)">
            <summary>Sets the stub of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="F:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.EqualsObject">
            <summary>Sets the stub of TradeUserAssets.Equals(Object other)</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.GetHashCode">
            <summary>Sets the stub of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="F:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.GetHashCode01">
            <summary>Sets the stub of TradeUserAssets.GetHashCode()</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.InitializeStub">
            <summary>Initializes a new instance of type StubTradeUserAssets</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.ToString">
            <summary>Sets the stub of TradeUserAssets.ToString()</summary>
        </member>
        <member name="F:SteamTrade.TradeWebAPI.Fakes.StubTradeUserAssets.ToString01">
            <summary>Sets the stub of TradeUserAssets.ToString()</summary>
        </member>
        <member name="T:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj">
            <summary>Stub type of SteamTrade.TradeWebAPI.TradeUserObj</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.InitializeStub">
            <summary>Initializes a new instance of type StubTradeUserObj</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SteamTrade.TradeWebAPI.Fakes.StubTradeUserObj.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
